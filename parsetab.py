
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftcomarightNIVEL14rightNIVEL13leftNIVEL12leftNIVEL11leftNIVEL10leftNIVEL9leftNIVEL8leftNIVEL7leftNIVEL6leftNIVEL5leftNIVEL4leftNIVEL3rightNIVEL2leftNIVEL1_break _case _char _continue _default _do _double _else _elseif _float _for _goto _if _int _malloc _return _sizeof _struct _switch _void _while asterisco cadena caracter coma corchete_abre corchete_cierra decimal division dos_puntos elevado entero et exclamacion identificador igual llave_abre llave_cierra mas mayor menor menos parentesis_abre parentesis_cierra pleca porcentaje pregunta punto punto_coma virgulilla\n    INIT   :   CUERPO_GLOBAL\n    \n    CUERPO_GLOBAL   :   LISTA_GLOBAL\n                    |   \n    \n    LISTA_GLOBAL    :   LISTA_GLOBAL INSTRUCCION_GLOBAL\n                    |   INSTRUCCION_GLOBAL\n    \n    INSTRUCCION_GLOBAL  :   DECLARACION punto_coma\n                        |   ESTRUCTURA punto_coma\n                        |   FUNCION\n    \n    ESTRUCTURA  :   _struct identificador llave_abre CARACTERISTICAS llave_cierra\n    \n    CARACTERISTICAS :   LISTA_CARACTERISTICAS\n                    |   \n    \n    LISTA_CARACTERISTICAS   :   LISTA_CARACTERISTICAS punto_coma CARACTERISTICA\n                            |   CARACTERISTICA\n    \n    FUNCION    :   TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    PARAMETROS  :   LISTA_PARAMETROS\n                |\n    \n    LISTA_PARAMETROS    :   LISTA_PARAMETROS coma CARACTERISTICA\n                        |   CARACTERISTICA\n    \n    CARACTERISTICA  :   TIPO IDENTIFICADORES\n    \n    IDENTIFICADORES :   asterisco asterisco identificador\n                    |   asterisco identificador\n                    |   identificador\n                    |   parentesis_abre IDENTIFICADORES parentesis_cierra %prec NIVEL1\n    \n    CUERPO_LOCAL    :   LISTA_LOCAL\n                    |\n    \n    LISTA_LOCAL :   LISTA_LOCAL INSTRUCCION_LOCAL\n                |   INSTRUCCION_LOCAL\n    \n    INSTRUCCION_LOCAL   :   ETIQUETA\n                        |   SALTO\n                        |   DECLARACION punto_coma\n                        |   ASIGNACION punto_coma\n                        |   IF\n                        |   SWITCH\n                        |   WHILE\n                        |   DO\n                        |   FOR\n                        |   _continue punto_coma\n                        |   _break punto_coma\n                        |   _return EXPRESION punto_coma\n    \n    ETIQUETA    :   identificador dos_puntos\n    \n    SALTO   :   _goto identificador punto_coma\n    \n    DECLARACION :   TIPO LISTA_DECLARACION\n    \n    LISTA_DECLARACION   :   LISTA_DECLARACION coma DECLARACION_FINAL\n                        |   DECLARACION_FINAL\n    \n    DECLARACION_FINAL   :   IDENTIFICADORES INDICES igual EXPRESION\n                        |   IDENTIFICADORES INDICES\n    \n    INDICES :   ACCESOS\n            |\n    \n    ACCESOS :   ACCESOS ACCESO\n            |   ACCESO\n    \n    ACCESO  :   corchete_abre EXPRESION corchete_cierra %prec NIVEL1\n            |   corchete_abre corchete_cierra %prec NIVEL1\n    \n    ASIGNACION  :   IDENTIFICADORES INDICES COMPUESTO EXPRESION \n                |   IDENTIFICADORES INDICES punto identificador COMPUESTO EXPRESION \n                |   IDENTIFICADORES INDICES menos mayor identificador COMPUESTO EXPRESION %prec NIVEL1\n                |   IDENTIFICADORES mas mas %prec NIVEL2\n                |   IDENTIFICADORES menos menos %prec NIVEL2\n    \n    COMPUESTO   :   igual %prec NIVEL14\n                |   mas igual %prec NIVEL14\n                |   asterisco igual %prec NIVEL14\n                |   division igual %prec NIVEL14\n                |   porcentaje igual %prec NIVEL14\n                |   menor menor igual %prec NIVEL14\n                |   mayor mayor igual %prec NIVEL14\n                |   et igual %prec NIVEL14\n                |   elevado igual %prec NIVEL14\n                |   pleca igual %prec NIVEL14\n    \n    IF  :   _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE\n    \n    ELSEIFS     :   LISTA_ELSEIF\n                |   \n    \n    LISTA_ELSEIF    :   LISTA_ELSEIF ELSEIF\n                    |   ELSEIF\n    \n    ELSEIF  :   _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    ELSE    :   _else llave_abre CUERPO_LOCAL llave_cierra\n    \n    SWITCH  :   _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra\n    \n    CASES   :   LISTA_CASE\n            |\n    \n    LISTA_CASE  :   LISTA_CASE CASE\n                |   CASE\n    \n    CASE    :   _case EXPRESION dos_puntos CUERPO_LOCAL\n    \n    DEFAULT_CASE    :   _default dos_puntos CUERPO_LOCAL\n    \n    WHILE   :   _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    DO  :   _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma\n    \n    FOR :   _for parentesis_abre DECLARACION punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    EXPRESION   :   EXPRESION mas EXPRESION %prec NIVEL4\n                |   EXPRESION menos EXPRESION %prec NIVEL4\n                |   EXPRESION asterisco EXPRESION %prec NIVEL3\n                |   EXPRESION division EXPRESION %prec NIVEL3\n                |   EXPRESION porcentaje EXPRESION %prec NIVEL3\n                |   EXPRESION igual igual EXPRESION %prec NIVEL7\n                |   EXPRESION exclamacion igual EXPRESION %prec NIVEL7\n                |   EXPRESION mayor EXPRESION %prec NIVEL6\n                |   EXPRESION menor EXPRESION %prec NIVEL6\n                |   EXPRESION mayor igual EXPRESION %prec NIVEL6\n                |   EXPRESION menor igual EXPRESION %prec NIVEL6\n                |   EXPRESION et et EXPRESION %prec NIVEL11\n                |   EXPRESION pleca pleca EXPRESION %prec NIVEL12\n                |   EXPRESION menor menor EXPRESION %prec NIVEL5\n                |   EXPRESION mayor mayor EXPRESION %prec NIVEL5\n                |   EXPRESION et EXPRESION %prec NIVEL8\n                |   EXPRESION pleca EXPRESION %prec NIVEL10\n                |   EXPRESION elevado EXPRESION %prec NIVEL9\n                |   EXPRESION pregunta EXPRESION dos_puntos EXPRESION %prec NIVEL13\n                |   menos EXPRESION %prec NIVEL2\n                |   exclamacion EXPRESION %prec NIVEL2\n                |   virgulilla EXPRESION %prec NIVEL2\n                |   parentesis_abre EXPRESION parentesis_cierra %prec NIVEL1\n                |   parentesis_abre TIPO asterisco parentesis_cierra _malloc parentesis_abre _sizeof parentesis_abre TIPO parentesis_cierra parentesis_cierra\n                |   identificador parentesis_abre EXPRESIONES parentesis_cierra\n                |   identificador punto identificador\n                |   identificador ACCESOS\n                |   identificador menos mayor identificador %prec NIVEL1\n                |   et identificador %prec NIVEL2\n                |   llave_abre EXPRESIONES llave_cierra\n                |   caracter\n                |   cadena\n                |   entero\n                |   decimal\n                |   identificador\n    \n    EXPRESIONES :   LISTA_EXPRESIONES\n                |\n    \n    LISTA_EXPRESIONES   :   LISTA_EXPRESIONES coma EXPRESION\n                        |   EXPRESION\n    \n    TIPO    :   _int\n            |   _char\n            |   _double\n            |   _float\n            |   _struct identificador\n            |   _void\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,7,15,16,17,164,],[-3,0,-1,-2,-5,-8,-4,-6,-7,-14,]),'_struct':([0,3,4,7,15,16,17,26,35,51,64,95,96,128,129,130,131,134,135,136,137,138,163,164,165,166,167,168,169,178,179,182,183,227,229,232,250,258,259,260,264,270,271,272,277,278,279,],[9,9,-5,-8,-4,-6,-7,41,41,41,41,41,41,41,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,41,41,-39,-41,41,41,41,-82,-75,41,41,-68,-83,41,41,-84,-74,41,]),'_int':([0,3,4,7,15,16,17,26,35,51,64,95,96,128,129,130,131,134,135,136,137,138,163,164,165,166,167,168,169,178,179,182,183,227,229,232,250,258,259,260,264,270,271,272,277,278,279,],[10,10,-5,-8,-4,-6,-7,10,10,10,10,10,10,10,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,10,10,-39,-41,10,10,10,-82,-75,10,10,-68,-83,10,10,-84,-74,10,]),'_char':([0,3,4,7,15,16,17,26,35,51,64,95,96,128,129,130,131,134,135,136,137,138,163,164,165,166,167,168,169,178,179,182,183,227,229,232,250,258,259,260,264,270,271,272,277,278,279,],[11,11,-5,-8,-4,-6,-7,11,11,11,11,11,11,11,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,11,11,-39,-41,11,11,11,-82,-75,11,11,-68,-83,11,11,-84,-74,11,]),'_double':([0,3,4,7,15,16,17,26,35,51,64,95,96,128,129,130,131,134,135,136,137,138,163,164,165,166,167,168,169,178,179,182,183,227,229,232,250,258,259,260,264,270,271,272,277,278,279,],[12,12,-5,-8,-4,-6,-7,12,12,12,12,12,12,12,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,12,12,-39,-41,12,12,12,-82,-75,12,12,-68,-83,12,12,-84,-74,12,]),'_float':([0,3,4,7,15,16,17,26,35,51,64,95,96,128,129,130,131,134,135,136,137,138,163,164,165,166,167,168,169,178,179,182,183,227,229,232,250,258,259,260,264,270,271,272,277,278,279,],[13,13,-5,-8,-4,-6,-7,13,13,13,13,13,13,13,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,13,13,-39,-41,13,13,13,-82,-75,13,13,-68,-83,13,13,-84,-74,13,]),'_void':([0,3,4,7,15,16,17,26,35,51,64,95,96,128,129,130,131,134,135,136,137,138,163,164,165,166,167,168,169,178,179,182,183,227,229,232,250,258,259,260,264,270,271,272,277,278,279,],[14,14,-5,-8,-4,-6,-7,14,14,14,14,14,14,14,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,14,14,-39,-41,14,14,14,-82,-75,14,14,-68,-83,14,14,-84,-74,14,]),'punto_coma':([5,6,18,19,21,22,28,29,30,31,34,36,42,44,46,52,54,55,56,57,58,60,61,62,66,67,81,82,83,84,89,94,98,99,100,101,102,105,108,111,113,115,117,120,122,124,132,133,139,140,149,150,151,152,153,154,155,156,157,160,161,170,171,180,197,198,203,205,231,233,244,261,263,],[16,17,-42,-22,-44,-48,-22,-46,-47,-50,-21,-43,-23,-49,-52,-119,-115,-116,-117,-118,-20,95,-13,-19,-45,-51,-104,-105,-113,-106,-111,-9,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,-107,-110,-114,-12,166,167,168,169,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,182,183,-103,-57,-56,221,-53,242,-54,-55,270,-108,]),'identificador':([8,9,10,11,12,13,14,20,23,24,25,32,33,37,41,43,47,48,49,50,51,53,65,68,69,70,71,72,75,76,77,78,79,80,87,88,96,103,104,106,107,109,110,112,114,121,123,125,128,129,130,131,134,135,136,137,138,141,142,158,163,165,166,167,168,169,175,176,177,178,182,183,184,185,188,207,209,210,211,212,214,215,216,221,223,225,226,227,229,234,239,241,242,250,258,259,260,264,267,270,271,272,277,278,279,],[19,24,-124,-125,-126,-127,-129,28,34,-128,28,52,58,28,65,52,52,52,83,52,52,52,-128,52,52,52,52,52,52,52,52,52,52,52,52,120,126,52,52,52,52,52,52,156,52,161,52,28,126,-27,-28,-29,-32,-33,-34,-35,-36,52,171,52,-40,-26,-30,-31,-37,-38,52,52,52,126,-39,-41,52,206,-58,224,-59,-60,-61,-62,-65,-66,-67,52,52,-64,-63,126,126,52,52,52,28,-82,-75,126,126,-68,52,-83,126,126,-84,-74,126,]),'asterisco':([8,10,11,12,13,14,20,23,24,25,28,30,31,34,37,42,44,45,46,52,54,55,56,57,58,65,66,67,81,82,83,84,85,86,89,93,96,98,99,100,101,102,105,108,111,113,115,116,117,120,122,125,126,128,129,130,131,134,135,136,137,138,143,149,150,151,152,153,154,155,156,157,160,161,162,163,165,166,167,168,169,170,172,178,180,182,183,199,200,201,205,206,224,227,229,231,233,242,244,249,250,251,258,259,260,263,264,270,271,272,273,277,278,279,],[23,-124,-125,-126,-127,-129,23,33,-128,23,-22,-47,-50,-21,23,-23,-49,70,-52,-119,-115,-116,-117,-118,-20,-128,70,-51,-104,-105,-113,-106,70,118,-111,70,23,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,70,-107,-110,-114,23,-22,23,-27,-28,-29,-32,-33,-34,-35,-36,-48,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,70,-40,-26,-30,-31,-37,-38,70,190,23,-103,-39,-41,70,70,70,70,190,190,23,23,70,70,23,70,70,-82,70,-75,23,23,-108,-68,-83,23,23,70,-84,-74,23,]),'parentesis_abre':([8,10,11,12,13,14,19,20,24,25,32,37,43,47,48,50,51,52,53,65,68,69,70,71,72,75,76,77,78,79,80,87,96,103,104,106,107,109,110,112,114,123,125,128,129,130,131,134,135,136,137,138,141,144,145,146,148,156,158,163,165,166,167,168,169,175,176,177,178,181,182,183,184,188,209,210,211,212,214,215,216,221,222,223,225,226,227,229,230,234,239,241,242,250,257,258,259,260,264,267,270,271,272,277,278,279,],[20,-124,-125,-126,-127,-129,26,20,-128,20,51,20,51,51,51,51,51,87,51,-128,51,51,51,51,51,51,51,51,51,51,51,51,20,51,51,51,51,51,51,51,51,51,20,20,-27,-28,-29,-32,-33,-34,-35,-36,51,175,176,177,179,87,51,-40,-26,-30,-31,-37,-38,51,51,51,20,204,-39,-41,51,-58,-59,-60,-61,-62,-65,-66,-67,51,232,51,-64,-63,20,20,241,51,51,51,20,-82,267,-75,20,20,-68,51,-83,20,20,-84,-74,20,]),'parentesis_cierra':([10,11,12,13,14,26,27,28,31,34,38,39,40,42,44,46,52,54,55,56,57,58,62,65,67,81,82,83,84,85,87,89,92,93,97,98,99,100,101,102,105,108,111,113,115,117,118,119,120,122,149,150,151,152,153,154,155,156,157,160,161,162,180,197,198,199,200,201,205,233,243,244,251,252,253,263,273,],[-124,-125,-126,-127,-129,-16,42,-22,-50,-21,63,-15,-18,-23,-49,-52,-119,-115,-116,-117,-118,-20,-19,-128,-51,-104,-105,-113,-106,117,-121,-111,-120,-123,-17,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,-107,159,160,-110,-114,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,-122,-103,-57,-56,217,218,219,-53,-54,253,-55,261,262,263,-108,276,]),'coma':([18,19,21,22,28,29,30,31,34,36,39,40,42,44,46,52,54,55,56,57,58,62,66,67,81,82,83,84,89,92,93,97,98,99,100,101,102,105,108,111,113,115,117,120,122,149,150,151,152,153,154,155,156,157,160,161,162,180,263,],[25,-22,-44,-48,-22,-46,-47,-50,-21,-43,64,-18,-23,-49,-52,-119,-115,-116,-117,-118,-20,-19,-45,-51,-104,-105,-113,-106,-111,123,-123,-17,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,-107,-110,-114,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,-122,-103,-108,]),'corchete_abre':([19,22,28,30,31,34,42,44,46,52,58,67,89,126,143,156,],[-22,32,-22,32,-50,-21,-23,-49,-52,32,-20,-51,32,-22,32,32,]),'igual':([19,22,28,29,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,73,74,75,76,81,82,83,84,85,89,93,98,99,100,101,102,105,108,111,113,115,116,117,120,122,126,143,149,150,151,152,153,154,155,156,157,160,161,162,170,172,180,189,190,191,192,194,195,196,199,200,201,205,206,208,213,224,231,233,244,249,251,263,273,],[-22,-48,-22,43,-47,-50,-21,-23,-49,73,-52,-119,-115,-116,-117,-118,-20,73,-51,103,104,107,110,-104,-105,-113,-106,73,-111,73,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,73,-107,-110,-114,-22,-48,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,73,73,188,-103,209,210,211,212,214,215,216,73,73,73,73,188,225,226,188,73,73,73,73,73,-108,73,]),'llave_abre':([24,32,43,47,48,50,51,53,63,68,69,70,71,72,75,76,77,78,79,80,87,103,104,106,107,109,110,112,114,123,141,147,158,175,176,177,184,188,209,210,211,212,214,215,216,217,218,219,221,223,225,226,234,239,241,262,265,267,276,],[35,53,53,53,53,53,53,53,96,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,178,53,53,53,53,53,-58,-59,-60,-61,-62,-65,-66,-67,227,228,229,53,53,-64,-63,53,53,53,271,272,53,279,]),'llave_cierra':([28,31,34,35,42,44,46,52,53,54,55,56,57,58,59,60,61,62,67,81,82,83,84,89,91,92,93,96,98,99,100,101,102,105,108,111,113,115,117,120,122,124,127,128,129,130,131,134,135,136,137,138,149,150,151,152,153,154,155,156,157,160,161,162,163,165,166,167,168,169,178,180,182,183,202,227,229,235,240,246,250,258,259,263,264,268,270,271,272,274,275,277,278,279,280,],[-22,-50,-21,-11,-23,-49,-52,-119,-121,-115,-116,-117,-118,-20,94,-10,-13,-19,-51,-104,-105,-113,-106,-111,122,-120,-123,-25,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,-107,-110,-114,-12,164,-24,-27,-28,-29,-32,-33,-34,-35,-36,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,-122,-40,-26,-30,-31,-37,-38,-25,-103,-39,-41,220,-25,-25,245,250,258,-82,-75,-25,-108,-68,-81,-83,-25,-25,277,278,-84,-74,-25,281,]),'mas':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,81,82,83,84,85,89,93,98,99,100,101,102,105,108,111,113,115,116,117,120,122,126,143,149,150,151,152,153,154,155,156,157,160,161,162,170,172,174,180,199,200,201,205,206,224,231,233,244,249,251,263,273,],[-22,-47,-50,-21,-23,-49,68,-52,-119,-115,-116,-117,-118,-20,68,-51,-104,-105,-113,-106,68,-111,68,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,68,-107,-110,-114,-22,174,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,68,68,189,198,-103,68,68,68,68,189,189,68,68,68,68,68,-108,68,]),'menos':([28,30,31,32,34,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,66,67,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,87,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,122,123,126,141,143,149,150,151,152,153,154,155,156,157,158,160,161,162,170,172,173,175,176,177,180,184,188,199,200,201,205,209,210,211,212,214,215,216,221,223,225,226,231,233,234,239,241,244,249,251,263,267,273,],[-22,-47,-50,47,-21,-23,47,-49,69,-52,47,47,47,47,90,47,-115,-116,-117,-118,-20,69,-51,47,47,47,47,47,47,47,47,47,47,47,-104,-105,-113,-106,69,47,-111,69,-85,-86,-87,-88,-89,47,47,-92,47,47,-93,47,47,-100,47,-101,47,-102,69,-107,-110,-114,47,-22,47,173,-90,-91,-99,-94,-98,-95,-96,-113,-97,47,-109,-112,69,69,186,197,47,47,47,-103,47,-58,69,69,69,69,-59,-60,-61,-62,-65,-66,-67,47,47,-64,-63,69,69,47,47,47,69,69,69,-108,47,69,]),'punto':([28,30,31,34,42,44,46,52,58,67,126,143,156,172,],[-22,-47,-50,-21,-23,-49,-52,88,-20,-51,-22,-48,88,185,]),'division':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,81,82,83,84,85,89,93,98,99,100,101,102,105,108,111,113,115,116,117,120,122,126,143,149,150,151,152,153,154,155,156,157,160,161,162,170,172,180,199,200,201,205,206,224,231,233,244,249,251,263,273,],[-22,-47,-50,-21,-23,-49,71,-52,-119,-115,-116,-117,-118,-20,71,-51,-104,-105,-113,-106,71,-111,71,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,71,-107,-110,-114,-22,-48,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,71,71,191,-103,71,71,71,71,191,191,71,71,71,71,71,-108,71,]),'porcentaje':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,81,82,83,84,85,89,93,98,99,100,101,102,105,108,111,113,115,116,117,120,122,126,143,149,150,151,152,153,154,155,156,157,160,161,162,170,172,180,199,200,201,205,206,224,231,233,244,249,251,263,273,],[-22,-47,-50,-21,-23,-49,72,-52,-119,-115,-116,-117,-118,-20,72,-51,-104,-105,-113,-106,72,-111,72,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,72,-107,-110,-114,-22,-48,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,72,72,192,-103,72,72,72,72,192,192,72,72,72,72,72,-108,72,]),'menor':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,76,81,82,83,84,85,89,93,98,99,100,101,102,105,108,111,113,115,116,117,120,122,126,143,149,150,151,152,153,154,155,156,157,160,161,162,170,172,180,193,199,200,201,205,206,224,231,233,244,249,251,263,273,],[-22,-47,-50,-21,-23,-49,76,-52,-119,-115,-116,-117,-118,-20,76,-51,109,-104,-105,-113,-106,76,-111,76,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,76,-107,-110,-114,-22,-48,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,76,76,193,-103,213,76,76,76,76,193,193,76,76,76,76,76,-108,76,]),'mayor':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,75,81,82,83,84,85,89,90,93,98,99,100,101,102,105,108,111,113,115,116,117,120,122,126,143,149,150,151,152,153,154,155,156,157,160,161,162,170,172,180,186,187,199,200,201,205,206,224,231,233,244,249,251,263,273,],[-22,-47,-50,-21,-23,-49,75,-52,-119,-115,-116,-117,-118,-20,75,-51,106,-104,-105,-113,-106,75,-111,121,75,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,75,-107,-110,-114,-22,-48,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,75,75,187,-103,207,208,75,75,75,75,187,187,75,75,75,75,75,-108,75,]),'et':([28,30,31,32,34,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,66,67,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,87,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,122,123,126,141,143,149,150,151,152,153,154,155,156,157,158,160,161,162,170,172,175,176,177,180,184,188,199,200,201,205,206,209,210,211,212,214,215,216,221,223,224,225,226,231,233,234,239,241,244,249,251,263,267,273,],[-22,-47,-50,49,-21,-23,49,-49,77,-52,49,49,49,49,-119,49,-115,-116,-117,-118,-20,77,-51,49,49,49,49,49,49,49,112,49,49,49,-104,-105,-113,-106,77,49,-111,77,-85,-86,-87,-88,-89,49,49,-92,49,49,-93,49,49,-100,49,-101,49,-102,77,-107,-110,-114,49,-22,49,-48,-90,-91,-99,-94,-98,-95,-96,-113,-97,49,-109,-112,77,77,194,49,49,49,-103,49,-58,77,77,77,77,194,-59,-60,-61,-62,-65,-66,-67,49,49,194,-64,-63,77,77,49,49,49,77,77,77,-108,49,77,]),'elevado':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,81,82,83,84,85,89,93,98,99,100,101,102,105,108,111,113,115,116,117,120,122,126,143,149,150,151,152,153,154,155,156,157,160,161,162,170,172,180,199,200,201,205,206,224,231,233,244,249,251,263,273,],[-22,-47,-50,-21,-23,-49,79,-52,-119,-115,-116,-117,-118,-20,79,-51,-104,-105,-113,-106,79,-111,79,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,79,-107,-110,-114,-22,-48,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,79,79,195,-103,79,79,79,79,195,195,79,79,79,79,79,-108,79,]),'pleca':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,78,81,82,83,84,85,89,93,98,99,100,101,102,105,108,111,113,115,116,117,120,122,126,143,149,150,151,152,153,154,155,156,157,160,161,162,170,172,180,199,200,201,205,206,224,231,233,244,249,251,263,273,],[-22,-47,-50,-21,-23,-49,78,-52,-119,-115,-116,-117,-118,-20,78,-51,114,-104,-105,-113,-106,78,-111,78,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,78,-107,-110,-114,-22,-48,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,78,78,196,-103,78,78,78,78,196,196,78,78,78,78,78,-108,78,]),'corchete_cierra':([31,32,44,45,46,52,54,55,56,57,67,81,82,83,84,89,98,99,100,101,102,105,108,111,113,115,117,120,122,149,150,151,152,153,154,155,156,157,160,161,180,263,],[-50,46,-49,67,-52,-119,-115,-116,-117,-118,-51,-104,-105,-113,-106,-111,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,-107,-110,-114,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,-103,-108,]),'exclamacion':([31,32,43,44,45,46,47,48,50,51,52,53,54,55,56,57,66,67,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,87,89,93,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,122,123,141,149,150,151,152,153,154,155,156,157,158,160,161,162,170,175,176,177,180,184,188,199,200,201,205,209,210,211,212,214,215,216,221,223,225,226,231,233,234,239,241,244,249,251,263,267,273,],[-50,48,48,-49,74,-52,48,48,48,48,-119,48,-115,-116,-117,-118,74,-51,48,48,48,48,48,48,48,48,48,48,48,-104,-105,-113,-106,74,48,-111,74,-85,-86,-87,-88,-89,48,48,-92,48,48,-93,48,48,-100,48,-101,48,-102,74,-107,-110,-114,48,48,-90,-91,-99,-94,-98,-95,-96,-113,-97,48,-109,-112,74,74,48,48,48,-103,48,-58,74,74,74,74,-59,-60,-61,-62,-65,-66,-67,48,48,-64,-63,74,74,48,48,48,74,74,74,-108,48,74,]),'pregunta':([31,44,45,46,52,54,55,56,57,66,67,81,82,83,84,85,89,93,98,99,100,101,102,105,108,111,113,115,116,117,120,122,149,150,151,152,153,154,155,156,157,160,161,162,170,180,199,200,201,205,231,233,244,249,251,263,273,],[-50,-49,80,-52,-119,-115,-116,-117,-118,80,-51,-104,-105,-113,-106,80,-111,80,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,80,-107,-110,-114,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,80,80,-103,80,80,80,80,80,80,80,80,80,-108,80,]),'dos_puntos':([31,44,46,52,54,55,56,57,67,81,82,83,84,89,98,99,100,101,102,105,108,111,113,115,116,117,120,122,126,149,150,151,152,153,154,155,156,157,160,161,180,247,249,263,],[-50,-49,-52,-119,-115,-116,-117,-118,-51,-104,-105,-113,-106,-111,-85,-86,-87,-88,-89,-92,-93,-100,-101,-102,158,-107,-110,-114,163,-90,-91,-99,-94,-98,-95,-96,-113,-97,-109,-112,-103,259,260,-108,]),'virgulilla':([32,43,47,48,50,51,53,68,69,70,71,72,75,76,77,78,79,80,87,103,104,106,107,109,110,112,114,123,141,158,175,176,177,184,188,209,210,211,212,214,215,216,221,223,225,226,234,239,241,267,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-58,-59,-60,-61,-62,-65,-66,-67,50,50,-64,-63,50,50,50,50,]),'caracter':([32,43,47,48,50,51,53,68,69,70,71,72,75,76,77,78,79,80,87,103,104,106,107,109,110,112,114,123,141,158,175,176,177,184,188,209,210,211,212,214,215,216,221,223,225,226,234,239,241,267,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-58,-59,-60,-61,-62,-65,-66,-67,54,54,-64,-63,54,54,54,54,]),'cadena':([32,43,47,48,50,51,53,68,69,70,71,72,75,76,77,78,79,80,87,103,104,106,107,109,110,112,114,123,141,158,175,176,177,184,188,209,210,211,212,214,215,216,221,223,225,226,234,239,241,267,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-58,-59,-60,-61,-62,-65,-66,-67,55,55,-64,-63,55,55,55,55,]),'entero':([32,43,47,48,50,51,53,68,69,70,71,72,75,76,77,78,79,80,87,103,104,106,107,109,110,112,114,123,141,158,175,176,177,184,188,209,210,211,212,214,215,216,221,223,225,226,234,239,241,267,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-58,-59,-60,-61,-62,-65,-66,-67,56,56,-64,-63,56,56,56,56,]),'decimal':([32,43,47,48,50,51,53,68,69,70,71,72,75,76,77,78,79,80,87,103,104,106,107,109,110,112,114,123,141,158,175,176,177,184,188,209,210,211,212,214,215,216,221,223,225,226,234,239,241,267,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-58,-59,-60,-61,-62,-65,-66,-67,57,57,-64,-63,57,57,57,57,]),'_continue':([96,128,129,130,131,134,135,136,137,138,163,165,166,167,168,169,178,182,183,227,229,250,258,259,260,264,270,271,272,277,278,279,],[139,139,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,139,-39,-41,139,139,-82,-75,139,139,-68,-83,139,139,-84,-74,139,]),'_break':([96,128,129,130,131,134,135,136,137,138,163,165,166,167,168,169,178,182,183,227,229,250,258,259,260,264,270,271,272,277,278,279,],[140,140,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,140,-39,-41,140,140,-82,-75,140,140,-68,-83,140,140,-84,-74,140,]),'_return':([96,128,129,130,131,134,135,136,137,138,163,165,166,167,168,169,178,182,183,227,229,250,258,259,260,264,270,271,272,277,278,279,],[141,141,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,141,-39,-41,141,141,-82,-75,141,141,-68,-83,141,141,-84,-74,141,]),'_goto':([96,128,129,130,131,134,135,136,137,138,163,165,166,167,168,169,178,182,183,227,229,250,258,259,260,264,270,271,272,277,278,279,],[142,142,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,142,-39,-41,142,142,-82,-75,142,142,-68,-83,142,142,-84,-74,142,]),'_if':([96,128,129,130,131,134,135,136,137,138,163,165,166,167,168,169,178,182,183,227,229,250,258,259,260,264,270,271,272,277,278,279,],[144,144,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,144,-39,-41,144,144,-82,-75,144,144,-68,-83,144,144,-84,-74,144,]),'_switch':([96,128,129,130,131,134,135,136,137,138,163,165,166,167,168,169,178,182,183,227,229,250,258,259,260,264,270,271,272,277,278,279,],[145,145,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,145,-39,-41,145,145,-82,-75,145,145,-68,-83,145,145,-84,-74,145,]),'_while':([96,128,129,130,131,134,135,136,137,138,163,165,166,167,168,169,178,182,183,220,227,229,250,258,259,260,264,270,271,272,277,278,279,],[146,146,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,146,-39,-41,230,146,146,-82,-75,146,146,-68,-83,146,146,-84,-74,146,]),'_do':([96,128,129,130,131,134,135,136,137,138,163,165,166,167,168,169,178,182,183,227,229,250,258,259,260,264,270,271,272,277,278,279,],[147,147,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,147,-39,-41,147,147,-82,-75,147,147,-68,-83,147,147,-84,-74,147,]),'_for':([96,128,129,130,131,134,135,136,137,138,163,165,166,167,168,169,178,182,183,227,229,250,258,259,260,264,270,271,272,277,278,279,],[148,148,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,148,-39,-41,148,148,-82,-75,148,148,-68,-83,148,148,-84,-74,148,]),'_case':([128,129,130,131,134,135,136,137,138,163,165,166,167,168,169,182,183,228,237,238,248,250,258,260,264,269,270,277,278,],[-24,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,-39,-41,239,239,-79,-78,-82,-75,-25,-68,-80,-83,-84,-74,]),'_default':([128,129,130,131,134,135,136,137,138,163,165,166,167,168,169,182,183,228,236,237,238,248,250,258,260,264,269,270,277,278,],[-24,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,-39,-41,-77,247,-76,-79,-78,-82,-75,-25,-68,-80,-83,-84,-74,]),'_malloc':([159,],[181,]),'_sizeof':([204,],[222,]),'_else':([245,254,255,256,266,281,],[-70,265,-69,-72,-71,-73,]),'_elseif':([245,255,256,266,281,],[257,257,-72,-71,-73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'CUERPO_GLOBAL':([0,],[2,]),'LISTA_GLOBAL':([0,],[3,]),'INSTRUCCION_GLOBAL':([0,3,],[4,15,]),'DECLARACION':([0,3,96,128,178,179,227,229,259,260,271,272,279,],[5,5,132,132,132,203,132,132,132,132,132,132,132,]),'ESTRUCTURA':([0,3,],[6,6,]),'FUNCION':([0,3,],[7,7,]),'TIPO':([0,3,26,35,51,64,95,96,128,178,179,227,229,232,259,260,271,272,279,],[8,8,37,37,86,37,37,125,125,125,125,125,125,243,125,125,125,125,125,]),'LISTA_DECLARACION':([8,125,],[18,18,]),'DECLARACION_FINAL':([8,25,125,],[21,36,21,]),'IDENTIFICADORES':([8,20,25,37,96,125,128,178,227,229,242,259,260,271,272,279,],[22,27,22,62,143,22,143,143,143,143,143,143,143,143,143,143,]),'INDICES':([22,143,],[29,172,]),'ACCESOS':([22,52,143,156,],[30,89,30,89,]),'ACCESO':([22,30,52,89,143,156,],[31,44,31,44,31,31,]),'PARAMETROS':([26,],[38,]),'LISTA_PARAMETROS':([26,],[39,]),'CARACTERISTICA':([26,35,64,95,],[40,61,97,124,]),'EXPRESION':([32,43,47,48,50,51,53,68,69,70,71,72,75,76,77,78,79,80,87,103,104,106,107,109,110,112,114,123,141,158,175,176,177,184,221,223,234,239,241,267,],[45,66,81,82,84,85,93,98,99,100,101,102,105,108,111,113,115,116,93,149,150,151,152,153,154,155,157,162,170,180,199,200,201,205,231,233,244,249,251,273,]),'CARACTERISTICAS':([35,],[59,]),'LISTA_CARACTERISTICAS':([35,],[60,]),'EXPRESIONES':([53,87,],[91,119,]),'LISTA_EXPRESIONES':([53,87,],[92,92,]),'CUERPO_LOCAL':([96,178,227,229,259,260,271,272,279,],[127,202,235,240,268,269,274,275,280,]),'LISTA_LOCAL':([96,178,227,229,259,260,271,272,279,],[128,128,128,128,128,128,128,128,128,]),'INSTRUCCION_LOCAL':([96,128,178,227,229,259,260,271,272,279,],[129,165,129,129,129,129,129,129,129,129,]),'ETIQUETA':([96,128,178,227,229,259,260,271,272,279,],[130,130,130,130,130,130,130,130,130,130,]),'SALTO':([96,128,178,227,229,259,260,271,272,279,],[131,131,131,131,131,131,131,131,131,131,]),'ASIGNACION':([96,128,178,227,229,242,259,260,271,272,279,],[133,133,133,133,133,252,133,133,133,133,133,]),'IF':([96,128,178,227,229,259,260,271,272,279,],[134,134,134,134,134,134,134,134,134,134,]),'SWITCH':([96,128,178,227,229,259,260,271,272,279,],[135,135,135,135,135,135,135,135,135,135,]),'WHILE':([96,128,178,227,229,259,260,271,272,279,],[136,136,136,136,136,136,136,136,136,136,]),'DO':([96,128,178,227,229,259,260,271,272,279,],[137,137,137,137,137,137,137,137,137,137,]),'FOR':([96,128,178,227,229,259,260,271,272,279,],[138,138,138,138,138,138,138,138,138,138,]),'COMPUESTO':([172,206,224,],[184,223,234,]),'CASES':([228,],[236,]),'LISTA_CASE':([228,],[237,]),'CASE':([228,237,],[238,248,]),'DEFAULT_CASE':([236,],[246,]),'ELSEIFS':([245,],[254,]),'LISTA_ELSEIF':([245,],[255,]),'ELSEIF':([245,255,],[256,266,]),'ELSE':([254,],[264,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> CUERPO_GLOBAL','INIT',1,'p_init','ascendente.py',158),
  ('CUERPO_GLOBAL -> LISTA_GLOBAL','CUERPO_GLOBAL',1,'p_cuerpo_global','ascendente.py',164),
  ('CUERPO_GLOBAL -> <empty>','CUERPO_GLOBAL',0,'p_cuerpo_global','ascendente.py',165),
  ('LISTA_GLOBAL -> LISTA_GLOBAL INSTRUCCION_GLOBAL','LISTA_GLOBAL',2,'p_lista_global','ascendente.py',171),
  ('LISTA_GLOBAL -> INSTRUCCION_GLOBAL','LISTA_GLOBAL',1,'p_lista_global','ascendente.py',172),
  ('INSTRUCCION_GLOBAL -> DECLARACION punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',178),
  ('INSTRUCCION_GLOBAL -> ESTRUCTURA punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',179),
  ('INSTRUCCION_GLOBAL -> FUNCION','INSTRUCCION_GLOBAL',1,'p_instruccion_global','ascendente.py',180),
  ('ESTRUCTURA -> _struct identificador llave_abre CARACTERISTICAS llave_cierra','ESTRUCTURA',5,'p_estructura','ascendente.py',186),
  ('CARACTERISTICAS -> LISTA_CARACTERISTICAS','CARACTERISTICAS',1,'p_caracteristicas','ascendente.py',192),
  ('CARACTERISTICAS -> <empty>','CARACTERISTICAS',0,'p_caracteristicas','ascendente.py',193),
  ('LISTA_CARACTERISTICAS -> LISTA_CARACTERISTICAS punto_coma CARACTERISTICA','LISTA_CARACTERISTICAS',3,'p_lista_caracteristicas','ascendente.py',199),
  ('LISTA_CARACTERISTICAS -> CARACTERISTICA','LISTA_CARACTERISTICAS',1,'p_lista_caracteristicas','ascendente.py',200),
  ('FUNCION -> TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FUNCION',8,'p_funcion','ascendente.py',206),
  ('PARAMETROS -> LISTA_PARAMETROS','PARAMETROS',1,'p_parametros','ascendente.py',212),
  ('PARAMETROS -> <empty>','PARAMETROS',0,'p_parametros','ascendente.py',213),
  ('LISTA_PARAMETROS -> LISTA_PARAMETROS coma CARACTERISTICA','LISTA_PARAMETROS',3,'p_lista_parametros','ascendente.py',219),
  ('LISTA_PARAMETROS -> CARACTERISTICA','LISTA_PARAMETROS',1,'p_lista_parametros','ascendente.py',220),
  ('CARACTERISTICA -> TIPO IDENTIFICADORES','CARACTERISTICA',2,'p_caracteristica','ascendente.py',226),
  ('IDENTIFICADORES -> asterisco asterisco identificador','IDENTIFICADORES',3,'p_identificadores','ascendente.py',232),
  ('IDENTIFICADORES -> asterisco identificador','IDENTIFICADORES',2,'p_identificadores','ascendente.py',233),
  ('IDENTIFICADORES -> identificador','IDENTIFICADORES',1,'p_identificadores','ascendente.py',234),
  ('IDENTIFICADORES -> parentesis_abre IDENTIFICADORES parentesis_cierra','IDENTIFICADORES',3,'p_identificadores','ascendente.py',235),
  ('CUERPO_LOCAL -> LISTA_LOCAL','CUERPO_LOCAL',1,'p_cuerpo_local','ascendente.py',241),
  ('CUERPO_LOCAL -> <empty>','CUERPO_LOCAL',0,'p_cuerpo_local','ascendente.py',242),
  ('LISTA_LOCAL -> LISTA_LOCAL INSTRUCCION_LOCAL','LISTA_LOCAL',2,'p_lista_local','ascendente.py',248),
  ('LISTA_LOCAL -> INSTRUCCION_LOCAL','LISTA_LOCAL',1,'p_lista_local','ascendente.py',249),
  ('INSTRUCCION_LOCAL -> ETIQUETA','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',255),
  ('INSTRUCCION_LOCAL -> SALTO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',256),
  ('INSTRUCCION_LOCAL -> DECLARACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',257),
  ('INSTRUCCION_LOCAL -> ASIGNACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',258),
  ('INSTRUCCION_LOCAL -> IF','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',259),
  ('INSTRUCCION_LOCAL -> SWITCH','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',260),
  ('INSTRUCCION_LOCAL -> WHILE','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',261),
  ('INSTRUCCION_LOCAL -> DO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',262),
  ('INSTRUCCION_LOCAL -> FOR','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',263),
  ('INSTRUCCION_LOCAL -> _continue punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',264),
  ('INSTRUCCION_LOCAL -> _break punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',265),
  ('INSTRUCCION_LOCAL -> _return EXPRESION punto_coma','INSTRUCCION_LOCAL',3,'p_instruccion_local','ascendente.py',266),
  ('ETIQUETA -> identificador dos_puntos','ETIQUETA',2,'p_etiqueta','ascendente.py',272),
  ('SALTO -> _goto identificador punto_coma','SALTO',3,'p_salto','ascendente.py',278),
  ('DECLARACION -> TIPO LISTA_DECLARACION','DECLARACION',2,'p_declaracion','ascendente.py',284),
  ('LISTA_DECLARACION -> LISTA_DECLARACION coma DECLARACION_FINAL','LISTA_DECLARACION',3,'p_lista_declaracion','ascendente.py',290),
  ('LISTA_DECLARACION -> DECLARACION_FINAL','LISTA_DECLARACION',1,'p_lista_declaracion','ascendente.py',291),
  ('DECLARACION_FINAL -> IDENTIFICADORES INDICES igual EXPRESION','DECLARACION_FINAL',4,'p_declaracion_final','ascendente.py',297),
  ('DECLARACION_FINAL -> IDENTIFICADORES INDICES','DECLARACION_FINAL',2,'p_declaracion_final','ascendente.py',298),
  ('INDICES -> ACCESOS','INDICES',1,'p_indices','ascendente.py',304),
  ('INDICES -> <empty>','INDICES',0,'p_indices','ascendente.py',305),
  ('ACCESOS -> ACCESOS ACCESO','ACCESOS',2,'p_accesos','ascendente.py',311),
  ('ACCESOS -> ACCESO','ACCESOS',1,'p_accesos','ascendente.py',312),
  ('ACCESO -> corchete_abre EXPRESION corchete_cierra','ACCESO',3,'p_acceso','ascendente.py',318),
  ('ACCESO -> corchete_abre corchete_cierra','ACCESO',2,'p_acceso','ascendente.py',319),
  ('ASIGNACION -> IDENTIFICADORES INDICES COMPUESTO EXPRESION','ASIGNACION',4,'p_asignacion','ascendente.py',325),
  ('ASIGNACION -> IDENTIFICADORES INDICES punto identificador COMPUESTO EXPRESION','ASIGNACION',6,'p_asignacion','ascendente.py',326),
  ('ASIGNACION -> IDENTIFICADORES INDICES menos mayor identificador COMPUESTO EXPRESION','ASIGNACION',7,'p_asignacion','ascendente.py',327),
  ('ASIGNACION -> IDENTIFICADORES mas mas','ASIGNACION',3,'p_asignacion','ascendente.py',328),
  ('ASIGNACION -> IDENTIFICADORES menos menos','ASIGNACION',3,'p_asignacion','ascendente.py',329),
  ('COMPUESTO -> igual','COMPUESTO',1,'p_compuesto','ascendente.py',335),
  ('COMPUESTO -> mas igual','COMPUESTO',2,'p_compuesto','ascendente.py',336),
  ('COMPUESTO -> asterisco igual','COMPUESTO',2,'p_compuesto','ascendente.py',337),
  ('COMPUESTO -> division igual','COMPUESTO',2,'p_compuesto','ascendente.py',338),
  ('COMPUESTO -> porcentaje igual','COMPUESTO',2,'p_compuesto','ascendente.py',339),
  ('COMPUESTO -> menor menor igual','COMPUESTO',3,'p_compuesto','ascendente.py',340),
  ('COMPUESTO -> mayor mayor igual','COMPUESTO',3,'p_compuesto','ascendente.py',341),
  ('COMPUESTO -> et igual','COMPUESTO',2,'p_compuesto','ascendente.py',342),
  ('COMPUESTO -> elevado igual','COMPUESTO',2,'p_compuesto','ascendente.py',343),
  ('COMPUESTO -> pleca igual','COMPUESTO',2,'p_compuesto','ascendente.py',344),
  ('IF -> _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE','IF',9,'p_if','ascendente.py',350),
  ('ELSEIFS -> LISTA_ELSEIF','ELSEIFS',1,'p_elseifs','ascendente.py',356),
  ('ELSEIFS -> <empty>','ELSEIFS',0,'p_elseifs','ascendente.py',357),
  ('LISTA_ELSEIF -> LISTA_ELSEIF ELSEIF','LISTA_ELSEIF',2,'p_lista_elseif','ascendente.py',363),
  ('LISTA_ELSEIF -> ELSEIF','LISTA_ELSEIF',1,'p_lista_elseif','ascendente.py',364),
  ('ELSEIF -> _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','ELSEIF',7,'p_elseif','ascendente.py',370),
  ('ELSE -> _else llave_abre CUERPO_LOCAL llave_cierra','ELSE',4,'p_else','ascendente.py',376),
  ('SWITCH -> _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra','SWITCH',8,'p_switch','ascendente.py',382),
  ('CASES -> LISTA_CASE','CASES',1,'p_cases','ascendente.py',388),
  ('CASES -> <empty>','CASES',0,'p_cases','ascendente.py',389),
  ('LISTA_CASE -> LISTA_CASE CASE','LISTA_CASE',2,'p_lista_case','ascendente.py',395),
  ('LISTA_CASE -> CASE','LISTA_CASE',1,'p_lista_case','ascendente.py',396),
  ('CASE -> _case EXPRESION dos_puntos CUERPO_LOCAL','CASE',4,'p_case','ascendente.py',402),
  ('DEFAULT_CASE -> _default dos_puntos CUERPO_LOCAL','DEFAULT_CASE',3,'p_default_case','ascendente.py',408),
  ('WHILE -> _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','WHILE',7,'p_while','ascendente.py',414),
  ('DO -> _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma','DO',9,'p_do','ascendente.py',420),
  ('FOR -> _for parentesis_abre DECLARACION punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FOR',11,'p_for','ascendente.py',426),
  ('EXPRESION -> EXPRESION mas EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',432),
  ('EXPRESION -> EXPRESION menos EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',433),
  ('EXPRESION -> EXPRESION asterisco EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',434),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',435),
  ('EXPRESION -> EXPRESION porcentaje EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',436),
  ('EXPRESION -> EXPRESION igual igual EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',437),
  ('EXPRESION -> EXPRESION exclamacion igual EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',438),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',439),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',440),
  ('EXPRESION -> EXPRESION mayor igual EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',441),
  ('EXPRESION -> EXPRESION menor igual EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',442),
  ('EXPRESION -> EXPRESION et et EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',443),
  ('EXPRESION -> EXPRESION pleca pleca EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',444),
  ('EXPRESION -> EXPRESION menor menor EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',445),
  ('EXPRESION -> EXPRESION mayor mayor EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',446),
  ('EXPRESION -> EXPRESION et EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',447),
  ('EXPRESION -> EXPRESION pleca EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',448),
  ('EXPRESION -> EXPRESION elevado EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',449),
  ('EXPRESION -> EXPRESION pregunta EXPRESION dos_puntos EXPRESION','EXPRESION',5,'p_expresion','ascendente.py',450),
  ('EXPRESION -> menos EXPRESION','EXPRESION',2,'p_expresion','ascendente.py',451),
  ('EXPRESION -> exclamacion EXPRESION','EXPRESION',2,'p_expresion','ascendente.py',452),
  ('EXPRESION -> virgulilla EXPRESION','EXPRESION',2,'p_expresion','ascendente.py',453),
  ('EXPRESION -> parentesis_abre EXPRESION parentesis_cierra','EXPRESION',3,'p_expresion','ascendente.py',454),
  ('EXPRESION -> parentesis_abre TIPO asterisco parentesis_cierra _malloc parentesis_abre _sizeof parentesis_abre TIPO parentesis_cierra parentesis_cierra','EXPRESION',11,'p_expresion','ascendente.py',455),
  ('EXPRESION -> identificador parentesis_abre EXPRESIONES parentesis_cierra','EXPRESION',4,'p_expresion','ascendente.py',456),
  ('EXPRESION -> identificador punto identificador','EXPRESION',3,'p_expresion','ascendente.py',457),
  ('EXPRESION -> identificador ACCESOS','EXPRESION',2,'p_expresion','ascendente.py',458),
  ('EXPRESION -> identificador menos mayor identificador','EXPRESION',4,'p_expresion','ascendente.py',459),
  ('EXPRESION -> et identificador','EXPRESION',2,'p_expresion','ascendente.py',460),
  ('EXPRESION -> llave_abre EXPRESIONES llave_cierra','EXPRESION',3,'p_expresion','ascendente.py',461),
  ('EXPRESION -> caracter','EXPRESION',1,'p_expresion','ascendente.py',462),
  ('EXPRESION -> cadena','EXPRESION',1,'p_expresion','ascendente.py',463),
  ('EXPRESION -> entero','EXPRESION',1,'p_expresion','ascendente.py',464),
  ('EXPRESION -> decimal','EXPRESION',1,'p_expresion','ascendente.py',465),
  ('EXPRESION -> identificador','EXPRESION',1,'p_expresion','ascendente.py',466),
  ('EXPRESIONES -> LISTA_EXPRESIONES','EXPRESIONES',1,'p_expresiones','ascendente.py',472),
  ('EXPRESIONES -> <empty>','EXPRESIONES',0,'p_expresiones','ascendente.py',473),
  ('LISTA_EXPRESIONES -> LISTA_EXPRESIONES coma EXPRESION','LISTA_EXPRESIONES',3,'p_lista_expresiones','ascendente.py',479),
  ('LISTA_EXPRESIONES -> EXPRESION','LISTA_EXPRESIONES',1,'p_lista_expresiones','ascendente.py',480),
  ('TIPO -> _int','TIPO',1,'p_tipo','ascendente.py',486),
  ('TIPO -> _char','TIPO',1,'p_tipo','ascendente.py',487),
  ('TIPO -> _double','TIPO',1,'p_tipo','ascendente.py',488),
  ('TIPO -> _float','TIPO',1,'p_tipo','ascendente.py',489),
  ('TIPO -> _struct identificador','TIPO',2,'p_tipo','ascendente.py',490),
  ('TIPO -> _void','TIPO',1,'p_tipo','ascendente.py',491),
]
