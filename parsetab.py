
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftcomarightNIVEL14rightNIVEL13leftNIVEL12leftNIVEL11leftNIVEL10leftNIVEL9leftNIVEL8leftNIVEL7leftNIVEL6leftNIVEL5leftNIVEL4leftNIVEL3rightNIVEL2leftNIVEL1_break _case _char _continue _default _do _double _else _elseif _float _for _goto _if _int _return _sizeof _struct _switch _void _while and asterisco aumento cadena caracter coma corchete_abre corchete_cierra decimal decremento desplazamiento_derecho desplazamiento_izquierdo distinto division dos_puntos elevado entero equivale et exclamacion identificador igual llave_abre llave_cierra mas mayor mayor_igual menor menor_igual menos or parentesis_abre parentesis_cierra pleca porcentaje pregunta punto punto_coma virgulilla\n    INIT   :   CUERPO_GLOBAL\n    \n    CUERPO_GLOBAL   :   LISTA_GLOBAL\n    \n    CUERPO_GLOBAL   :\n    \n    LISTA_GLOBAL    :   LISTA_GLOBAL INSTRUCCION_GLOBAL\n    \n    LISTA_GLOBAL    :   INSTRUCCION_GLOBAL\n    \n    INSTRUCCION_GLOBAL  :   DECLARACION punto_coma\n                        |   ESTRUCTURA punto_coma\n                        |   FUNCION\n    \n    ESTRUCTURA  :   _struct identificador llave_abre CARACTERISTICAS llave_cierra\n    \n    CARACTERISTICAS :   LISTA_CARACTERISTICAS\n    \n    CARACTERISTICAS :\n    \n    LISTA_CARACTERISTICAS   :   LISTA_CARACTERISTICAS CARACTERISTICA\n    \n    LISTA_CARACTERISTICAS : CARACTERISTICA\n    \n    CARACTERISTICA  :   DECLARACION punto_coma\n    \n    FUNCION    :   TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    PARAMETROS  :   LISTA_PARAMETROS\n    \n    PARAMETROS  :\n    \n    LISTA_PARAMETROS    :   LISTA_PARAMETROS coma PARAMETRO\n    \n    LISTA_PARAMETROS    :   PARAMETRO\n    \n    PARAMETRO   :   TIPO identificador\n    \n    PARAMETRO   :   TIPO et identificador\n    \n    CUERPO_LOCAL    :   LISTA_LOCAL\n    \n    CUERPO_LOCAL    :\n    \n    LISTA_LOCAL :   LISTA_LOCAL INSTRUCCION_LOCAL\n    \n    LISTA_LOCAL :   INSTRUCCION_LOCAL\n    \n    INSTRUCCION_LOCAL   :   ETIQUETA\n                        |   SALTO\n                        |   DECLARACION punto_coma\n                        |   ASIGNACION punto_coma\n                        |   IF\n                        |   SWITCH\n                        |   WHILE\n                        |   DO\n                        |   FOR\n                        |   METODO punto_coma\n    \n    INSTRUCCION_LOCAL   :   _continue punto_coma\n    \n    INSTRUCCION_LOCAL   :   _break punto_coma\n    \n    INSTRUCCION_LOCAL   :   _return EXPRESION punto_coma\n    \n    METODO  :   identificador parentesis_abre EXPRESIONES parentesis_cierra \n    \n    ETIQUETA    :   identificador dos_puntos\n    \n    SALTO   :   _goto identificador punto_coma\n    \n    DECLARACION :   TIPO LISTA_DECLARACION\n    \n    LISTA_DECLARACION   :   LISTA_DECLARACION coma DECLARACION_FINAL\n    \n    LISTA_DECLARACION   :   DECLARACION_FINAL\n    \n    DECLARACION_FINAL   :   identificador INDICES\n    \n    DECLARACION_FINAL   :   identificador INDICES igual EXPRESION\n    \n    INDICES :   ACCESOS\n    \n    INDICES :\n    \n    ACCESOS :   ACCESOS ACCESO\n    \n    ACCESOS :   ACCESO\n    \n    ACCESO  :   corchete_abre EXPRESION corchete_cierra %prec NIVEL1\n    \n    ACCESO : corchete_abre corchete_cierra %prec NIVEL1\n    \n    ASIGNACION  :   identificador INDICES COMPUESTO EXPRESION \n    \n    ASIGNACION  :   identificador INDICES punto identificador COMPUESTO EXPRESION \n    \n    ASIGNACION  :   identificador aumento %prec NIVEL2\n    \n    ASIGNACION  :   identificador decremento %prec NIVEL2\n    \n    COMPUESTO   :   igual %prec NIVEL14\n                |   mas igual %prec NIVEL14\n                |   asterisco igual %prec NIVEL14\n                |   division igual %prec NIVEL14\n                |   porcentaje igual %prec NIVEL14\n                |   menor menor igual %prec NIVEL14\n                |   mayor mayor igual %prec NIVEL14\n                |   et igual %prec NIVEL14\n                |   elevado igual %prec NIVEL14\n                |   pleca igual %prec NIVEL14\n    \n    IF  :   _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE\n    \n    ELSEIFS :   LISTA_ELSEIF\n    \n    ELSEIFS :\n    \n    LISTA_ELSEIF    :   LISTA_ELSEIF ELSEIF\n    \n    LISTA_ELSEIF    :   ELSEIF\n    \n    ELSEIF  :   _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    ELSE    :   _else llave_abre CUERPO_LOCAL llave_cierra\n    \n    ELSE    :\n    \n    SWITCH  :   _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra\n    \n    CASES   :   LISTA_CASE\n    \n    CASES   :\n    \n    LISTA_CASE  :   LISTA_CASE CASE\n    \n    LISTA_CASE  :   CASE\n    \n    CASE    :   _case EXPRESION dos_puntos CUERPO_LOCAL\n    \n    DEFAULT_CASE    :   _default dos_puntos CUERPO_LOCAL\n    \n    WHILE   :   _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    DO  :   _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma\n    \n    FOR :   _for parentesis_abre DECLARACION punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    EXPRESION   :   EXPRESION mas EXPRESION %prec NIVEL4\n                |   EXPRESION menos EXPRESION %prec NIVEL4\n                |   EXPRESION asterisco EXPRESION %prec NIVEL3\n                |   EXPRESION division EXPRESION %prec NIVEL3\n                |   EXPRESION porcentaje EXPRESION %prec NIVEL3\n    \n    EXPRESION   :   EXPRESION equivale EXPRESION %prec NIVEL7\n                |   EXPRESION distinto EXPRESION %prec NIVEL7\n                |   EXPRESION mayor EXPRESION %prec NIVEL6\n                |   EXPRESION menor EXPRESION %prec NIVEL6\n                |   EXPRESION mayor_igual EXPRESION %prec NIVEL6\n                |   EXPRESION menor_igual EXPRESION %prec NIVEL6\n    \n    EXPRESION   :   EXPRESION and EXPRESION %prec NIVEL11\n                |   EXPRESION or EXPRESION %prec NIVEL12\n    \n    EXPRESION   :   EXPRESION desplazamiento_izquierdo EXPRESION %prec NIVEL5\n                |   EXPRESION desplazamiento_derecho mayor EXPRESION %prec NIVEL5\n                |   EXPRESION et EXPRESION %prec NIVEL8\n                |   EXPRESION pleca EXPRESION %prec NIVEL10\n                |   EXPRESION elevado EXPRESION %prec NIVEL9\n    \n    EXPRESION   :   EXPRESION pregunta EXPRESION dos_puntos EXPRESION %prec NIVEL13\n    \n    EXPRESION   :   menos EXPRESION %prec NIVEL2\n                |   exclamacion EXPRESION %prec NIVEL2\n                |   virgulilla EXPRESION %prec NIVEL2\n                |   et identificador %prec NIVEL2\n    \n    EXPRESION   :   METODO\n    \n    EXPRESION   :   parentesis_abre EXPRESION parentesis_cierra %prec NIVEL1\n    \n    EXPRESION   :   identificador punto identificador\n    \n    EXPRESION   :   identificador ACCESOS\n    \n    EXPRESION   :   identificador ACCESOS punto identificador\n    \n    EXPRESION   :   llave_abre EXPRESIONES llave_cierra\n    \n    EXPRESION   :   _sizeof parentesis_abre TIPO parentesis_cierra\n    \n    EXPRESION   :   caracter\n                |   cadena\n                |   entero\n                |   decimal\n    EXPRESION  :   identificador\n    EXPRESIONES :   LISTA_EXPRESIONES\n    \n    EXPRESIONES :\n    \n    LISTA_EXPRESIONES   :   LISTA_EXPRESIONES coma EXPRESION\n    \n    LISTA_EXPRESIONES   :   EXPRESION\n    \n    TIPO    :   _int\n            |   _char\n            |   _double\n            |   _float\n            |   _void\n    \n    TIPO    :   _struct identificador\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,7,15,16,17,161,],[-3,0,-1,-2,-5,-8,-4,-6,-7,-15,]),'_struct':([0,3,4,7,15,16,17,23,28,54,55,61,95,97,98,100,130,131,132,133,136,137,138,139,140,157,161,162,163,164,165,166,167,173,174,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[9,9,-5,-8,-4,-6,-7,35,35,35,-13,35,35,-12,-14,35,35,-25,-26,-27,-30,-31,-32,-33,-34,-40,-15,-24,-28,-29,-35,-36,-37,35,35,-38,-41,35,35,-69,-82,-74,-68,-71,-75,35,35,-67,-70,-83,35,35,-84,-73,35,-72,]),'_int':([0,3,4,7,15,16,17,23,28,54,55,61,95,97,98,100,130,131,132,133,136,137,138,139,140,157,161,162,163,164,165,166,167,173,174,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[10,10,-5,-8,-4,-6,-7,10,10,10,-13,10,10,-12,-14,10,10,-25,-26,-27,-30,-31,-32,-33,-34,-40,-15,-24,-28,-29,-35,-36,-37,10,10,-38,-41,10,10,-69,-82,-74,-68,-71,-75,10,10,-67,-70,-83,10,10,-84,-73,10,-72,]),'_char':([0,3,4,7,15,16,17,23,28,54,55,61,95,97,98,100,130,131,132,133,136,137,138,139,140,157,161,162,163,164,165,166,167,173,174,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[11,11,-5,-8,-4,-6,-7,11,11,11,-13,11,11,-12,-14,11,11,-25,-26,-27,-30,-31,-32,-33,-34,-40,-15,-24,-28,-29,-35,-36,-37,11,11,-38,-41,11,11,-69,-82,-74,-68,-71,-75,11,11,-67,-70,-83,11,11,-84,-73,11,-72,]),'_double':([0,3,4,7,15,16,17,23,28,54,55,61,95,97,98,100,130,131,132,133,136,137,138,139,140,157,161,162,163,164,165,166,167,173,174,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[12,12,-5,-8,-4,-6,-7,12,12,12,-13,12,12,-12,-14,12,12,-25,-26,-27,-30,-31,-32,-33,-34,-40,-15,-24,-28,-29,-35,-36,-37,12,12,-38,-41,12,12,-69,-82,-74,-68,-71,-75,12,12,-67,-70,-83,12,12,-84,-73,12,-72,]),'_float':([0,3,4,7,15,16,17,23,28,54,55,61,95,97,98,100,130,131,132,133,136,137,138,139,140,157,161,162,163,164,165,166,167,173,174,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[13,13,-5,-8,-4,-6,-7,13,13,13,-13,13,13,-12,-14,13,13,-25,-26,-27,-30,-31,-32,-33,-34,-40,-15,-24,-28,-29,-35,-36,-37,13,13,-38,-41,13,13,-69,-82,-74,-68,-71,-75,13,13,-67,-70,-83,13,13,-84,-73,13,-72,]),'_void':([0,3,4,7,15,16,17,23,28,54,55,61,95,97,98,100,130,131,132,133,136,137,138,139,140,157,161,162,163,164,165,166,167,173,174,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[14,14,-5,-8,-4,-6,-7,14,14,14,-13,14,14,-12,-14,14,14,-25,-26,-27,-30,-31,-32,-33,-34,-40,-15,-24,-28,-29,-35,-36,-37,14,14,-38,-41,14,14,-69,-82,-74,-68,-71,-75,14,14,-67,-70,-83,14,14,-84,-73,14,-72,]),'punto_coma':([5,6,18,19,20,24,25,26,29,30,37,39,44,45,49,50,51,52,56,63,64,84,85,86,87,89,96,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,121,124,125,134,135,141,142,143,151,153,154,156,159,160,168,169,175,194,195,218,219,244,],[16,17,-42,-48,-44,-45,-47,-50,-43,-48,-49,-52,-119,-108,-115,-116,-117,-118,98,-46,-51,-104,-107,-105,-106,-111,-9,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,-110,-109,-113,163,164,165,166,167,-99,-112,-39,-114,-55,-56,188,189,-103,210,-53,227,-54,252,]),'identificador':([8,9,10,11,12,13,14,21,22,27,31,35,36,40,41,42,43,46,47,57,59,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,88,90,100,116,122,126,130,131,132,133,136,137,138,139,140,144,145,152,157,162,163,164,165,166,167,170,171,172,173,176,177,178,188,189,197,198,199,200,203,204,205,210,211,212,213,214,216,224,226,227,228,233,237,238,239,241,242,243,246,248,249,252,253,254,259,260,261,263,],[19,21,-124,-125,-126,-127,-128,-129,30,44,58,62,44,44,85,44,44,44,44,30,99,-129,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,121,44,128,44,153,44,128,-25,-26,-27,-30,-31,-32,-33,-34,44,169,44,-40,-24,-28,-29,-35,-36,-37,44,44,44,128,44,196,-57,-38,-41,-58,-59,-60,-61,-64,-65,-66,44,44,-62,-63,128,128,44,44,236,-69,-82,-74,-68,-71,-75,128,128,-67,-70,44,-83,128,128,-84,-73,128,-72,]),'et':([10,11,12,13,14,25,26,27,31,36,37,38,39,40,42,43,44,45,46,47,49,50,51,52,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,89,90,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,126,128,144,151,152,153,154,155,156,158,168,170,171,172,175,176,178,190,191,192,195,196,197,198,199,200,203,204,205,210,211,212,213,218,219,224,226,232,234,236,249,255,],[-124,-125,-126,-127,-128,-47,-50,41,59,41,-49,80,-52,41,41,41,-119,-108,41,41,-115,-116,-117,-118,-129,80,-51,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-104,-107,-105,-106,-111,41,80,80,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,41,-100,-101,-102,80,-110,-109,-113,41,-48,41,-99,41,-112,-39,80,-114,185,80,41,41,41,-103,41,-57,80,80,80,80,185,-58,-59,-60,-61,-64,-65,-66,41,41,-62,-63,80,80,41,41,80,80,-48,41,80,]),'parentesis_cierra':([10,11,12,13,14,23,26,32,33,34,37,39,44,45,49,50,51,52,58,62,64,84,85,86,87,89,90,91,93,94,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,121,123,124,125,127,151,153,154,155,156,159,160,175,190,191,192,195,219,234,235,255,],[-124,-125,-126,-127,-128,-17,-50,60,-16,-19,-49,-52,-119,-108,-115,-116,-117,-118,-20,-129,-51,-104,-107,-105,-106,-111,-121,124,-120,-123,-21,-18,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,-110,154,-109,-113,156,-99,-112,-39,-122,-114,-55,-56,-103,206,207,208,-53,-54,244,245,258,]),'coma':([18,19,20,24,25,26,29,30,33,34,37,39,44,45,49,50,51,52,58,63,64,84,85,86,87,89,93,94,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,121,124,125,151,153,154,155,156,175,],[22,-48,-44,-45,-47,-50,-43,-48,61,-19,-49,-52,-119,-108,-115,-116,-117,-118,-20,-46,-51,-104,-107,-105,-106,-111,126,-123,-21,-18,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,-110,-109,-113,-99,-112,-39,-122,-114,-103,]),'parentesis_abre':([19,27,36,40,42,43,44,46,47,48,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,128,144,146,147,148,150,152,170,171,172,176,178,197,198,199,200,203,204,205,210,211,212,213,217,224,226,240,249,],[23,46,46,46,46,46,90,46,46,95,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,90,46,170,171,172,174,46,46,46,46,46,-57,-58,-59,-60,-61,-64,-65,-66,46,46,-62,-63,226,46,46,249,46,]),'igual':([19,24,25,26,30,37,39,64,128,158,179,180,181,182,185,186,187,196,201,202,236,],[-48,36,-47,-50,-48,-49,-52,-51,-48,178,197,198,199,200,203,204,205,178,212,213,-48,]),'corchete_abre':([19,25,26,30,37,39,44,64,89,128,236,],[27,27,-50,27,-49,-52,27,-51,27,27,27,]),'llave_abre':([21,27,36,40,42,43,46,47,60,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,149,152,170,171,172,176,178,197,198,199,200,203,204,205,206,207,208,210,211,212,213,224,226,245,247,249,258,],[28,47,47,47,47,47,47,47,100,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,173,47,47,47,47,47,-57,-58,-59,-60,-61,-64,-65,-66,214,215,216,47,47,-62,-63,47,47,253,254,47,261,]),'punto':([25,26,37,39,44,64,89,128,158,236,],[-47,-50,-49,-52,88,-51,122,-48,177,-48,]),'mas':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,175,190,191,192,195,196,218,219,232,234,236,255,],[-47,-50,-49,65,-52,-119,-108,-115,-116,-117,-118,65,-51,-104,-107,-105,-106,-111,65,65,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,65,-110,-109,-113,-48,-99,-112,-39,65,-114,179,65,-103,65,65,65,65,179,65,65,65,65,-48,65,]),'asterisco':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,175,190,191,192,195,196,218,219,232,234,236,255,],[-47,-50,-49,67,-52,-119,-108,-115,-116,-117,-118,67,-51,-104,-107,-105,-106,-111,67,67,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,67,-110,-109,-113,-48,-99,-112,-39,67,-114,180,67,-103,67,67,67,67,180,67,67,67,67,-48,67,]),'division':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,175,190,191,192,195,196,218,219,232,234,236,255,],[-47,-50,-49,68,-52,-119,-108,-115,-116,-117,-118,68,-51,-104,-107,-105,-106,-111,68,68,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,68,-110,-109,-113,-48,-99,-112,-39,68,-114,181,68,-103,68,68,68,68,181,68,68,68,68,-48,68,]),'porcentaje':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,175,190,191,192,195,196,218,219,232,234,236,255,],[-47,-50,-49,69,-52,-119,-108,-115,-116,-117,-118,69,-51,-104,-107,-105,-106,-111,69,69,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,69,-110,-109,-113,-48,-99,-112,-39,69,-114,182,69,-103,69,69,69,69,182,69,69,69,69,-48,69,]),'menor':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,175,183,190,191,192,195,196,218,219,232,234,236,255,],[-47,-50,-49,73,-52,-119,-108,-115,-116,-117,-118,73,-51,-104,-107,-105,-106,-111,73,73,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,73,-110,-109,-113,-48,-99,-112,-39,73,-114,183,73,-103,201,73,73,73,73,183,73,73,73,73,-48,73,]),'mayor':([25,26,37,38,39,44,45,49,50,51,52,63,64,79,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,175,184,190,191,192,195,196,218,219,232,234,236,255,],[-47,-50,-49,72,-52,-119,-108,-115,-116,-117,-118,72,-51,116,-104,-107,-105,-106,-111,72,72,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,72,-110,-109,-113,-48,-99,-112,-39,72,-114,184,72,-103,202,72,72,72,72,184,72,72,72,72,-48,72,]),'elevado':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,175,190,191,192,195,196,218,219,232,234,236,255,],[-47,-50,-49,82,-52,-119,-108,-115,-116,-117,-118,82,-51,-104,-107,-105,-106,-111,82,82,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,82,-110,-109,-113,-48,-99,-112,-39,82,-114,186,82,-103,82,82,82,82,186,82,82,82,82,-48,82,]),'pleca':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,175,190,191,192,195,196,218,219,232,234,236,255,],[-47,-50,-49,81,-52,-119,-108,-115,-116,-117,-118,81,-51,-104,-107,-105,-106,-111,81,81,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,81,-110,-109,-113,-48,-99,-112,-39,81,-114,187,81,-103,81,81,81,81,187,81,81,81,81,-48,81,]),'corchete_cierra':([26,27,37,38,39,44,45,49,50,51,52,64,84,85,86,87,89,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,121,124,125,151,153,154,156,175,],[-50,39,-49,64,-52,-119,-108,-115,-116,-117,-118,-51,-104,-107,-105,-106,-111,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,-110,-109,-113,-99,-112,-39,-114,-103,]),'menos':([26,27,36,37,38,39,40,42,43,44,45,46,47,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,89,90,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,126,144,151,152,153,154,155,156,168,170,171,172,175,176,178,190,191,192,195,197,198,199,200,203,204,205,210,211,212,213,218,219,224,226,232,234,249,255,],[-50,40,40,-49,66,-52,40,40,40,-119,-108,40,40,-115,-116,-117,-118,66,-51,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-104,-107,-105,-106,-111,40,66,66,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,40,-100,-101,-102,66,-110,-109,-113,40,40,-99,40,-112,-39,66,-114,66,40,40,40,-103,40,-57,66,66,66,66,-58,-59,-60,-61,-64,-65,-66,40,40,-62,-63,66,66,40,40,66,66,40,66,]),'equivale':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,175,190,191,192,195,218,219,232,234,255,],[-50,-49,70,-52,-119,-108,-115,-116,-117,-118,70,-51,-104,-107,-105,-106,-111,70,70,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,70,-110,-109,-113,-99,-112,-39,70,-114,70,-103,70,70,70,70,70,70,70,70,70,]),'distinto':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,175,190,191,192,195,218,219,232,234,255,],[-50,-49,71,-52,-119,-108,-115,-116,-117,-118,71,-51,-104,-107,-105,-106,-111,71,71,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,71,-110,-109,-113,-99,-112,-39,71,-114,71,-103,71,71,71,71,71,71,71,71,71,]),'mayor_igual':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,175,190,191,192,195,218,219,232,234,255,],[-50,-49,74,-52,-119,-108,-115,-116,-117,-118,74,-51,-104,-107,-105,-106,-111,74,74,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,74,-110,-109,-113,-99,-112,-39,74,-114,74,-103,74,74,74,74,74,74,74,74,74,]),'menor_igual':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,175,190,191,192,195,218,219,232,234,255,],[-50,-49,75,-52,-119,-108,-115,-116,-117,-118,75,-51,-104,-107,-105,-106,-111,75,75,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,75,-110,-109,-113,-99,-112,-39,75,-114,75,-103,75,75,75,75,75,75,75,75,75,]),'and':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,175,190,191,192,195,218,219,232,234,255,],[-50,-49,76,-52,-119,-108,-115,-116,-117,-118,76,-51,-104,-107,-105,-106,-111,76,76,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,76,-110,-109,-113,-99,-112,-39,76,-114,76,-103,76,76,76,76,76,76,76,76,76,]),'or':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,175,190,191,192,195,218,219,232,234,255,],[-50,-49,77,-52,-119,-108,-115,-116,-117,-118,77,-51,-104,-107,-105,-106,-111,77,77,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,77,-110,-109,-113,-99,-112,-39,77,-114,77,-103,77,77,77,77,77,77,77,77,77,]),'desplazamiento_izquierdo':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,175,190,191,192,195,218,219,232,234,255,],[-50,-49,78,-52,-119,-108,-115,-116,-117,-118,78,-51,-104,-107,-105,-106,-111,78,78,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,78,-110,-109,-113,-99,-112,-39,78,-114,78,-103,78,78,78,78,78,78,78,78,78,]),'desplazamiento_derecho':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,175,190,191,192,195,218,219,232,234,255,],[-50,-49,79,-52,-119,-108,-115,-116,-117,-118,79,-51,-104,-107,-105,-106,-111,79,79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,79,-110,-109,-113,-99,-112,-39,79,-114,79,-103,79,79,79,79,79,79,79,79,79,]),'pregunta':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,175,190,191,192,195,218,219,232,234,255,],[-50,-49,83,-52,-119,-108,-115,-116,-117,-118,83,-51,-104,-107,-105,-106,-111,83,83,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,83,-110,-109,-113,-99,-112,-39,83,-114,83,-103,83,83,83,83,83,83,83,83,83,]),'llave_cierra':([26,28,37,39,44,45,47,49,50,51,52,53,54,55,64,84,85,86,87,89,92,93,94,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,121,124,125,129,130,131,132,133,136,137,138,139,140,151,153,154,155,156,157,162,163,164,165,166,167,173,175,188,189,193,214,216,220,225,228,229,233,237,238,239,241,242,246,248,250,252,253,254,256,257,259,260,261,262,263,],[-50,-11,-49,-52,-119,-108,-121,-115,-116,-117,-118,96,-10,-13,-51,-104,-107,-105,-106,-111,125,-120,-123,-12,-14,-23,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,-110,-109,-113,161,-22,-25,-26,-27,-30,-31,-32,-33,-34,-99,-112,-39,-122,-114,-40,-24,-28,-29,-35,-36,-37,-23,-103,-38,-41,209,-23,-23,228,233,-69,241,-82,-74,-68,-71,-75,-23,-67,-70,-81,-83,-23,-23,259,260,-84,-73,-23,263,-72,]),'dos_puntos':([26,37,39,44,45,49,50,51,52,64,84,85,86,87,89,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,156,175,230,232,],[-50,-49,-52,-119,-108,-115,-116,-117,-118,-51,-104,-107,-105,-106,-111,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,152,-110,-109,-113,157,-99,-112,-39,-114,-103,242,243,]),'exclamacion':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,170,171,172,176,178,197,198,199,200,203,204,205,210,211,212,213,224,226,249,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-57,-58,-59,-60,-61,-64,-65,-66,42,42,-62,-63,42,42,42,]),'virgulilla':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,170,171,172,176,178,197,198,199,200,203,204,205,210,211,212,213,224,226,249,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-57,-58,-59,-60,-61,-64,-65,-66,43,43,-62,-63,43,43,43,]),'_sizeof':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,170,171,172,176,178,197,198,199,200,203,204,205,210,211,212,213,224,226,249,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-57,-58,-59,-60,-61,-64,-65,-66,48,48,-62,-63,48,48,48,]),'caracter':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,170,171,172,176,178,197,198,199,200,203,204,205,210,211,212,213,224,226,249,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-57,-58,-59,-60,-61,-64,-65,-66,49,49,-62,-63,49,49,49,]),'cadena':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,170,171,172,176,178,197,198,199,200,203,204,205,210,211,212,213,224,226,249,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-57,-58,-59,-60,-61,-64,-65,-66,50,50,-62,-63,50,50,50,]),'entero':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,170,171,172,176,178,197,198,199,200,203,204,205,210,211,212,213,224,226,249,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-57,-58,-59,-60,-61,-64,-65,-66,51,51,-62,-63,51,51,51,]),'decimal':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,170,171,172,176,178,197,198,199,200,203,204,205,210,211,212,213,224,226,249,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-57,-58,-59,-60,-61,-64,-65,-66,52,52,-62,-63,52,52,52,]),'_continue':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,173,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[142,142,-25,-26,-27,-30,-31,-32,-33,-34,-40,-24,-28,-29,-35,-36,-37,142,-38,-41,142,142,-69,-82,-74,-68,-71,-75,142,142,-67,-70,-83,142,142,-84,-73,142,-72,]),'_break':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,173,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[143,143,-25,-26,-27,-30,-31,-32,-33,-34,-40,-24,-28,-29,-35,-36,-37,143,-38,-41,143,143,-69,-82,-74,-68,-71,-75,143,143,-67,-70,-83,143,143,-84,-73,143,-72,]),'_return':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,173,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[144,144,-25,-26,-27,-30,-31,-32,-33,-34,-40,-24,-28,-29,-35,-36,-37,144,-38,-41,144,144,-69,-82,-74,-68,-71,-75,144,144,-67,-70,-83,144,144,-84,-73,144,-72,]),'_goto':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,173,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[145,145,-25,-26,-27,-30,-31,-32,-33,-34,-40,-24,-28,-29,-35,-36,-37,145,-38,-41,145,145,-69,-82,-74,-68,-71,-75,145,145,-67,-70,-83,145,145,-84,-73,145,-72,]),'_if':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,173,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[146,146,-25,-26,-27,-30,-31,-32,-33,-34,-40,-24,-28,-29,-35,-36,-37,146,-38,-41,146,146,-69,-82,-74,-68,-71,-75,146,146,-67,-70,-83,146,146,-84,-73,146,-72,]),'_switch':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,173,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[147,147,-25,-26,-27,-30,-31,-32,-33,-34,-40,-24,-28,-29,-35,-36,-37,147,-38,-41,147,147,-69,-82,-74,-68,-71,-75,147,147,-67,-70,-83,147,147,-84,-73,147,-72,]),'_while':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,173,188,189,209,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[148,148,-25,-26,-27,-30,-31,-32,-33,-34,-40,-24,-28,-29,-35,-36,-37,148,-38,-41,217,148,148,-69,-82,-74,-68,-71,-75,148,148,-67,-70,-83,148,148,-84,-73,148,-72,]),'_do':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,173,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[149,149,-25,-26,-27,-30,-31,-32,-33,-34,-40,-24,-28,-29,-35,-36,-37,149,-38,-41,149,149,-69,-82,-74,-68,-71,-75,149,149,-67,-70,-83,149,149,-84,-73,149,-72,]),'_for':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,173,188,189,214,216,228,233,237,238,239,241,242,243,246,248,252,253,254,259,260,261,263,],[150,150,-25,-26,-27,-30,-31,-32,-33,-34,-40,-24,-28,-29,-35,-36,-37,150,-38,-41,150,150,-69,-82,-74,-68,-71,-75,150,150,-67,-70,-83,150,150,-84,-73,150,-72,]),'aumento':([128,236,],[159,159,]),'decremento':([128,236,],[160,160,]),'_case':([130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,188,189,215,222,223,228,231,233,237,238,239,241,243,246,248,251,252,259,260,263,],[-22,-25,-26,-27,-30,-31,-32,-33,-34,-40,-24,-28,-29,-35,-36,-37,-38,-41,224,224,-79,-69,-78,-82,-74,-68,-71,-75,-23,-67,-70,-80,-83,-84,-73,-72,]),'_default':([130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,188,189,215,221,222,223,228,231,233,237,238,239,241,243,246,248,251,252,259,260,263,],[-22,-25,-26,-27,-30,-31,-32,-33,-34,-40,-24,-28,-29,-35,-36,-37,-38,-41,-77,230,-76,-79,-69,-78,-82,-74,-68,-71,-75,-23,-67,-70,-80,-83,-84,-73,-72,]),'_else':([228,237,238,239,248,263,],[-69,247,-68,-71,-70,-72,]),'_elseif':([228,238,239,248,263,],[240,240,-71,-70,-72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'CUERPO_GLOBAL':([0,],[2,]),'LISTA_GLOBAL':([0,],[3,]),'INSTRUCCION_GLOBAL':([0,3,],[4,15,]),'DECLARACION':([0,3,28,54,100,130,173,174,214,216,242,243,253,254,261,],[5,5,56,56,134,134,134,194,134,134,134,134,134,134,134,]),'ESTRUCTURA':([0,3,],[6,6,]),'FUNCION':([0,3,],[7,7,]),'TIPO':([0,3,23,28,54,61,95,100,130,173,174,214,216,242,243,253,254,261,],[8,8,31,57,57,31,127,57,57,57,57,57,57,57,57,57,57,57,]),'LISTA_DECLARACION':([8,57,],[18,18,]),'DECLARACION_FINAL':([8,22,57,],[20,29,20,]),'INDICES':([19,30,128,236,],[24,24,158,158,]),'ACCESOS':([19,30,44,128,236,],[25,25,89,25,25,]),'ACCESO':([19,25,30,44,89,128,236,],[26,37,26,26,37,26,26,]),'PARAMETROS':([23,],[32,]),'LISTA_PARAMETROS':([23,],[33,]),'PARAMETRO':([23,61,],[34,101,]),'EXPRESION':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,170,171,172,176,210,211,224,226,249,],[38,63,84,86,87,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,94,151,155,168,175,190,191,192,195,218,219,232,234,255,]),'METODO':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,100,116,126,130,144,152,170,171,172,173,176,210,211,214,216,224,226,242,243,249,253,254,261,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,141,45,45,141,45,45,45,45,45,141,45,45,45,141,141,45,45,141,141,45,141,141,141,]),'CARACTERISTICAS':([28,],[53,]),'LISTA_CARACTERISTICAS':([28,],[54,]),'CARACTERISTICA':([28,54,],[55,97,]),'EXPRESIONES':([47,90,],[92,123,]),'LISTA_EXPRESIONES':([47,90,],[93,93,]),'CUERPO_LOCAL':([100,173,214,216,242,243,253,254,261,],[129,193,220,225,250,251,256,257,262,]),'LISTA_LOCAL':([100,173,214,216,242,243,253,254,261,],[130,130,130,130,130,130,130,130,130,]),'INSTRUCCION_LOCAL':([100,130,173,214,216,242,243,253,254,261,],[131,162,131,131,131,131,131,131,131,131,]),'ETIQUETA':([100,130,173,214,216,242,243,253,254,261,],[132,132,132,132,132,132,132,132,132,132,]),'SALTO':([100,130,173,214,216,242,243,253,254,261,],[133,133,133,133,133,133,133,133,133,133,]),'ASIGNACION':([100,130,173,214,216,227,242,243,253,254,261,],[135,135,135,135,135,235,135,135,135,135,135,]),'IF':([100,130,173,214,216,242,243,253,254,261,],[136,136,136,136,136,136,136,136,136,136,]),'SWITCH':([100,130,173,214,216,242,243,253,254,261,],[137,137,137,137,137,137,137,137,137,137,]),'WHILE':([100,130,173,214,216,242,243,253,254,261,],[138,138,138,138,138,138,138,138,138,138,]),'DO':([100,130,173,214,216,242,243,253,254,261,],[139,139,139,139,139,139,139,139,139,139,]),'FOR':([100,130,173,214,216,242,243,253,254,261,],[140,140,140,140,140,140,140,140,140,140,]),'COMPUESTO':([158,196,],[176,211,]),'CASES':([215,],[221,]),'LISTA_CASE':([215,],[222,]),'CASE':([215,222,],[223,231,]),'DEFAULT_CASE':([221,],[229,]),'ELSEIFS':([228,],[237,]),'LISTA_ELSEIF':([228,],[238,]),'ELSEIF':([228,238,],[239,248,]),'ELSE':([237,],[246,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> CUERPO_GLOBAL','INIT',1,'p_init','ascendente.py',179),
  ('CUERPO_GLOBAL -> LISTA_GLOBAL','CUERPO_GLOBAL',1,'p_cuerpo_global','ascendente.py',186),
  ('CUERPO_GLOBAL -> <empty>','CUERPO_GLOBAL',0,'p_cuerpo_global_vacio','ascendente.py',193),
  ('LISTA_GLOBAL -> LISTA_GLOBAL INSTRUCCION_GLOBAL','LISTA_GLOBAL',2,'p_lista_global_lista','ascendente.py',200),
  ('LISTA_GLOBAL -> INSTRUCCION_GLOBAL','LISTA_GLOBAL',1,'p_lista_global_instruccion','ascendente.py',208),
  ('INSTRUCCION_GLOBAL -> DECLARACION punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',215),
  ('INSTRUCCION_GLOBAL -> ESTRUCTURA punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',216),
  ('INSTRUCCION_GLOBAL -> FUNCION','INSTRUCCION_GLOBAL',1,'p_instruccion_global','ascendente.py',217),
  ('ESTRUCTURA -> _struct identificador llave_abre CARACTERISTICAS llave_cierra','ESTRUCTURA',5,'p_estructura','ascendente.py',224),
  ('CARACTERISTICAS -> LISTA_CARACTERISTICAS','CARACTERISTICAS',1,'p_caracteristicas','ascendente.py',231),
  ('CARACTERISTICAS -> <empty>','CARACTERISTICAS',0,'p_caracteristicas_vacio','ascendente.py',238),
  ('LISTA_CARACTERISTICAS -> LISTA_CARACTERISTICAS CARACTERISTICA','LISTA_CARACTERISTICAS',2,'p_lista_caracteristicas_lista','ascendente.py',245),
  ('LISTA_CARACTERISTICAS -> CARACTERISTICA','LISTA_CARACTERISTICAS',1,'p_lista_caracteristicas_caracteristica','ascendente.py',253),
  ('CARACTERISTICA -> DECLARACION punto_coma','CARACTERISTICA',2,'p_caracteristica','ascendente.py',260),
  ('FUNCION -> TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FUNCION',8,'p_funcion','ascendente.py',267),
  ('PARAMETROS -> LISTA_PARAMETROS','PARAMETROS',1,'p_parametros','ascendente.py',274),
  ('PARAMETROS -> <empty>','PARAMETROS',0,'p_parametros_vacio','ascendente.py',281),
  ('LISTA_PARAMETROS -> LISTA_PARAMETROS coma PARAMETRO','LISTA_PARAMETROS',3,'p_lista_parametros_lista','ascendente.py',288),
  ('LISTA_PARAMETROS -> PARAMETRO','LISTA_PARAMETROS',1,'p_lista_parametros_parametro','ascendente.py',296),
  ('PARAMETRO -> TIPO identificador','PARAMETRO',2,'p_parametro','ascendente.py',303),
  ('PARAMETRO -> TIPO et identificador','PARAMETRO',3,'p_parametro_apuntador','ascendente.py',310),
  ('CUERPO_LOCAL -> LISTA_LOCAL','CUERPO_LOCAL',1,'p_cuerpo_local','ascendente.py',317),
  ('CUERPO_LOCAL -> <empty>','CUERPO_LOCAL',0,'p_cuerpo_local_vacio','ascendente.py',324),
  ('LISTA_LOCAL -> LISTA_LOCAL INSTRUCCION_LOCAL','LISTA_LOCAL',2,'p_lista_local','ascendente.py',331),
  ('LISTA_LOCAL -> INSTRUCCION_LOCAL','LISTA_LOCAL',1,'p_lista_local_instruccion','ascendente.py',339),
  ('INSTRUCCION_LOCAL -> ETIQUETA','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',346),
  ('INSTRUCCION_LOCAL -> SALTO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',347),
  ('INSTRUCCION_LOCAL -> DECLARACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',348),
  ('INSTRUCCION_LOCAL -> ASIGNACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',349),
  ('INSTRUCCION_LOCAL -> IF','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',350),
  ('INSTRUCCION_LOCAL -> SWITCH','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',351),
  ('INSTRUCCION_LOCAL -> WHILE','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',352),
  ('INSTRUCCION_LOCAL -> DO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',353),
  ('INSTRUCCION_LOCAL -> FOR','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',354),
  ('INSTRUCCION_LOCAL -> METODO punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',355),
  ('INSTRUCCION_LOCAL -> _continue punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local_continue','ascendente.py',362),
  ('INSTRUCCION_LOCAL -> _break punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local_break','ascendente.py',369),
  ('INSTRUCCION_LOCAL -> _return EXPRESION punto_coma','INSTRUCCION_LOCAL',3,'p_instruccion_local_return','ascendente.py',376),
  ('METODO -> identificador parentesis_abre EXPRESIONES parentesis_cierra','METODO',4,'p_metodo','ascendente.py',383),
  ('ETIQUETA -> identificador dos_puntos','ETIQUETA',2,'p_etiqueta','ascendente.py',390),
  ('SALTO -> _goto identificador punto_coma','SALTO',3,'p_salto','ascendente.py',397),
  ('DECLARACION -> TIPO LISTA_DECLARACION','DECLARACION',2,'p_declaracion','ascendente.py',404),
  ('LISTA_DECLARACION -> LISTA_DECLARACION coma DECLARACION_FINAL','LISTA_DECLARACION',3,'p_lista_declaracion_lista','ascendente.py',411),
  ('LISTA_DECLARACION -> DECLARACION_FINAL','LISTA_DECLARACION',1,'p_lista_declaracion_declaracion','ascendente.py',419),
  ('DECLARACION_FINAL -> identificador INDICES','DECLARACION_FINAL',2,'p_declaracion_final','ascendente.py',426),
  ('DECLARACION_FINAL -> identificador INDICES igual EXPRESION','DECLARACION_FINAL',4,'p_declaracion_final_expresion','ascendente.py',433),
  ('INDICES -> ACCESOS','INDICES',1,'p_indices','ascendente.py',440),
  ('INDICES -> <empty>','INDICES',0,'p_indices_vacio','ascendente.py',447),
  ('ACCESOS -> ACCESOS ACCESO','ACCESOS',2,'p_accesos_lista','ascendente.py',454),
  ('ACCESOS -> ACCESO','ACCESOS',1,'p_accesos_acceso','ascendente.py',462),
  ('ACCESO -> corchete_abre EXPRESION corchete_cierra','ACCESO',3,'p_acceso','ascendente.py',469),
  ('ACCESO -> corchete_abre corchete_cierra','ACCESO',2,'p_acceso_vacio','ascendente.py',476),
  ('ASIGNACION -> identificador INDICES COMPUESTO EXPRESION','ASIGNACION',4,'p_asignacion_normal','ascendente.py',483),
  ('ASIGNACION -> identificador INDICES punto identificador COMPUESTO EXPRESION','ASIGNACION',6,'p_asignacion_estructura','ascendente.py',491),
  ('ASIGNACION -> identificador aumento','ASIGNACION',2,'p_asignacion_aumento','ascendente.py',499),
  ('ASIGNACION -> identificador decremento','ASIGNACION',2,'p_asignacion_decremento','ascendente.py',506),
  ('COMPUESTO -> igual','COMPUESTO',1,'p_compuesto','ascendente.py',513),
  ('COMPUESTO -> mas igual','COMPUESTO',2,'p_compuesto','ascendente.py',514),
  ('COMPUESTO -> asterisco igual','COMPUESTO',2,'p_compuesto','ascendente.py',515),
  ('COMPUESTO -> division igual','COMPUESTO',2,'p_compuesto','ascendente.py',516),
  ('COMPUESTO -> porcentaje igual','COMPUESTO',2,'p_compuesto','ascendente.py',517),
  ('COMPUESTO -> menor menor igual','COMPUESTO',3,'p_compuesto','ascendente.py',518),
  ('COMPUESTO -> mayor mayor igual','COMPUESTO',3,'p_compuesto','ascendente.py',519),
  ('COMPUESTO -> et igual','COMPUESTO',2,'p_compuesto','ascendente.py',520),
  ('COMPUESTO -> elevado igual','COMPUESTO',2,'p_compuesto','ascendente.py',521),
  ('COMPUESTO -> pleca igual','COMPUESTO',2,'p_compuesto','ascendente.py',522),
  ('IF -> _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE','IF',9,'p_if','ascendente.py',529),
  ('ELSEIFS -> LISTA_ELSEIF','ELSEIFS',1,'p_elseifs','ascendente.py',536),
  ('ELSEIFS -> <empty>','ELSEIFS',0,'p_elseifs_vacio','ascendente.py',543),
  ('LISTA_ELSEIF -> LISTA_ELSEIF ELSEIF','LISTA_ELSEIF',2,'p_lista_elseif_lista','ascendente.py',550),
  ('LISTA_ELSEIF -> ELSEIF','LISTA_ELSEIF',1,'p_lista_elseif_elseif','ascendente.py',558),
  ('ELSEIF -> _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','ELSEIF',7,'p_elseif','ascendente.py',565),
  ('ELSE -> _else llave_abre CUERPO_LOCAL llave_cierra','ELSE',4,'p_else','ascendente.py',572),
  ('ELSE -> <empty>','ELSE',0,'p_else_vacio','ascendente.py',579),
  ('SWITCH -> _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra','SWITCH',8,'p_switch','ascendente.py',586),
  ('CASES -> LISTA_CASE','CASES',1,'p_cases','ascendente.py',593),
  ('CASES -> <empty>','CASES',0,'p_cases_vacio','ascendente.py',600),
  ('LISTA_CASE -> LISTA_CASE CASE','LISTA_CASE',2,'p_lista_case_lista','ascendente.py',607),
  ('LISTA_CASE -> CASE','LISTA_CASE',1,'p_lista_case_case','ascendente.py',615),
  ('CASE -> _case EXPRESION dos_puntos CUERPO_LOCAL','CASE',4,'p_case','ascendente.py',622),
  ('DEFAULT_CASE -> _default dos_puntos CUERPO_LOCAL','DEFAULT_CASE',3,'p_default_case','ascendente.py',629),
  ('WHILE -> _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','WHILE',7,'p_while','ascendente.py',636),
  ('DO -> _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma','DO',9,'p_do','ascendente.py',643),
  ('FOR -> _for parentesis_abre DECLARACION punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FOR',11,'p_for','ascendente.py',650),
  ('EXPRESION -> EXPRESION mas EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',657),
  ('EXPRESION -> EXPRESION menos EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',658),
  ('EXPRESION -> EXPRESION asterisco EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',659),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',660),
  ('EXPRESION -> EXPRESION porcentaje EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',661),
  ('EXPRESION -> EXPRESION equivale EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',668),
  ('EXPRESION -> EXPRESION distinto EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',669),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',670),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',671),
  ('EXPRESION -> EXPRESION mayor_igual EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',672),
  ('EXPRESION -> EXPRESION menor_igual EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',673),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_expresion_logica','ascendente.py',680),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_expresion_logica','ascendente.py',681),
  ('EXPRESION -> EXPRESION desplazamiento_izquierdo EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',688),
  ('EXPRESION -> EXPRESION desplazamiento_derecho mayor EXPRESION','EXPRESION',4,'p_expresion_bit','ascendente.py',689),
  ('EXPRESION -> EXPRESION et EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',690),
  ('EXPRESION -> EXPRESION pleca EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',691),
  ('EXPRESION -> EXPRESION elevado EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',692),
  ('EXPRESION -> EXPRESION pregunta EXPRESION dos_puntos EXPRESION','EXPRESION',5,'p_expresion_ternaria','ascendente.py',699),
  ('EXPRESION -> menos EXPRESION','EXPRESION',2,'p_expresion_unaria','ascendente.py',706),
  ('EXPRESION -> exclamacion EXPRESION','EXPRESION',2,'p_expresion_unaria','ascendente.py',707),
  ('EXPRESION -> virgulilla EXPRESION','EXPRESION',2,'p_expresion_unaria','ascendente.py',708),
  ('EXPRESION -> et identificador','EXPRESION',2,'p_expresion_unaria','ascendente.py',709),
  ('EXPRESION -> METODO','EXPRESION',1,'p_expresion_metodo','ascendente.py',716),
  ('EXPRESION -> parentesis_abre EXPRESION parentesis_cierra','EXPRESION',3,'p_expresion_parentesis','ascendente.py',723),
  ('EXPRESION -> identificador punto identificador','EXPRESION',3,'p_expresion_estructura','ascendente.py',730),
  ('EXPRESION -> identificador ACCESOS','EXPRESION',2,'p_expresion_identificador_arreglo','ascendente.py',737),
  ('EXPRESION -> identificador ACCESOS punto identificador','EXPRESION',4,'p_expresion_arreglo_estructura','ascendente.py',745),
  ('EXPRESION -> llave_abre EXPRESIONES llave_cierra','EXPRESION',3,'p_expresion_expresiones','ascendente.py',753),
  ('EXPRESION -> _sizeof parentesis_abre TIPO parentesis_cierra','EXPRESION',4,'p_expresion_sizeof','ascendente.py',760),
  ('EXPRESION -> caracter','EXPRESION',1,'p_expresion_valor','ascendente.py',767),
  ('EXPRESION -> cadena','EXPRESION',1,'p_expresion_valor','ascendente.py',768),
  ('EXPRESION -> entero','EXPRESION',1,'p_expresion_valor','ascendente.py',769),
  ('EXPRESION -> decimal','EXPRESION',1,'p_expresion_valor','ascendente.py',770),
  ('EXPRESION -> identificador','EXPRESION',1,'p_expresion_identificador','ascendente.py',776),
  ('EXPRESIONES -> LISTA_EXPRESIONES','EXPRESIONES',1,'p_expresiones','ascendente.py',782),
  ('EXPRESIONES -> <empty>','EXPRESIONES',0,'p_expresiones_vacio','ascendente.py',789),
  ('LISTA_EXPRESIONES -> LISTA_EXPRESIONES coma EXPRESION','LISTA_EXPRESIONES',3,'p_lista_expresiones_lista','ascendente.py',796),
  ('LISTA_EXPRESIONES -> EXPRESION','LISTA_EXPRESIONES',1,'p_lista_expresiones_expresion','ascendente.py',804),
  ('TIPO -> _int','TIPO',1,'p_tipo','ascendente.py',811),
  ('TIPO -> _char','TIPO',1,'p_tipo','ascendente.py',812),
  ('TIPO -> _double','TIPO',1,'p_tipo','ascendente.py',813),
  ('TIPO -> _float','TIPO',1,'p_tipo','ascendente.py',814),
  ('TIPO -> _void','TIPO',1,'p_tipo','ascendente.py',815),
  ('TIPO -> _struct identificador','TIPO',2,'p_tipo_struct','ascendente.py',822),
]
