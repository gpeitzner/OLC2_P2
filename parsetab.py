
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftcomarightNIVEL14rightNIVEL13leftNIVEL12leftNIVEL11leftNIVEL10leftNIVEL9leftNIVEL8leftNIVEL7leftNIVEL6leftNIVEL5leftNIVEL4leftNIVEL3rightNIVEL2leftNIVEL1_break _case _char _continue _default _do _double _else _elseif _float _for _goto _if _int _malloc _return _sizeof _struct _switch _void _while and asterisco aumento cadena caracter coma corchete_abre corchete_cierra decimal decremento desplazamiento_derecho desplazamiento_izquierdo distinto division dos_puntos elevado entero equivale et exclamacion flecha identificador igual llave_abre llave_cierra mas mayor mayor_igual menor menor_igual menos or parentesis_abre parentesis_cierra pleca porcentaje pregunta punto punto_coma virgulilla\n    INIT   :   CUERPO_GLOBAL\n    \n    CUERPO_GLOBAL   :   LISTA_GLOBAL\n                    |   \n    \n    LISTA_GLOBAL    :   LISTA_GLOBAL INSTRUCCION_GLOBAL\n                    |   INSTRUCCION_GLOBAL\n    \n    INSTRUCCION_GLOBAL  :   DECLARACION punto_coma\n                        |   ESTRUCTURA punto_coma\n                        |   FUNCION\n    \n    ESTRUCTURA  :   _struct identificador llave_abre CARACTERISTICAS llave_cierra\n    \n    CARACTERISTICAS :   LISTA_CARACTERISTICAS\n                    |   \n    \n    LISTA_CARACTERISTICAS   :   LISTA_CARACTERISTICAS punto_coma CARACTERISTICA\n                            |   CARACTERISTICA\n    \n    FUNCION    :   TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    PARAMETROS  :   LISTA_PARAMETROS\n                |\n    \n    LISTA_PARAMETROS    :   LISTA_PARAMETROS coma CARACTERISTICA\n                        |   CARACTERISTICA\n    \n    CARACTERISTICA  :   TIPO IDENTIFICADORES\n    \n    IDENTIFICADORES :   asterisco asterisco identificador\n                    |   asterisco identificador\n                    |   identificador\n                    |   parentesis_abre IDENTIFICADORES parentesis_cierra %prec NIVEL1\n    \n    CUERPO_LOCAL    :   LISTA_LOCAL\n                    |\n    \n    LISTA_LOCAL :   LISTA_LOCAL INSTRUCCION_LOCAL\n                |   INSTRUCCION_LOCAL\n    \n    INSTRUCCION_LOCAL   :   ETIQUETA\n                        |   SALTO\n                        |   DECLARACION punto_coma\n                        |   ASIGNACION punto_coma\n                        |   IF\n                        |   SWITCH\n                        |   WHILE\n                        |   DO\n                        |   FOR\n                        |   _continue punto_coma\n                        |   _break punto_coma\n                        |   _return EXPRESION punto_coma\n    \n    ETIQUETA    :   identificador dos_puntos\n    \n    SALTO   :   _goto identificador punto_coma\n    \n    DECLARACION :   TIPO LISTA_DECLARACION\n    \n    LISTA_DECLARACION   :   LISTA_DECLARACION coma DECLARACION_FINAL\n                        |   DECLARACION_FINAL\n    \n    DECLARACION_FINAL   :   IDENTIFICADORES INDICES igual EXPRESION\n                        |   IDENTIFICADORES INDICES\n    \n    INDICES :   ACCESOS\n            |\n    \n    ACCESOS :   ACCESOS ACCESO\n            |   ACCESO\n    \n    ACCESO  :   corchete_abre EXPRESION corchete_cierra %prec NIVEL1\n            |   corchete_abre corchete_cierra %prec NIVEL1\n    \n    ASIGNACION  :   IDENTIFICADORES INDICES COMPUESTO EXPRESION \n                |   IDENTIFICADORES INDICES punto identificador COMPUESTO EXPRESION \n                |   IDENTIFICADORES INDICES flecha identificador COMPUESTO EXPRESION %prec NIVEL1\n                |   IDENTIFICADORES aumento %prec NIVEL2\n                |   IDENTIFICADORES decremento %prec NIVEL2\n    \n    COMPUESTO   :   igual %prec NIVEL14\n                |   mas igual %prec NIVEL14\n                |   asterisco igual %prec NIVEL14\n                |   division igual %prec NIVEL14\n                |   porcentaje igual %prec NIVEL14\n                |   menor menor igual %prec NIVEL14\n                |   mayor mayor igual %prec NIVEL14\n                |   et igual %prec NIVEL14\n                |   elevado igual %prec NIVEL14\n                |   pleca igual %prec NIVEL14\n    \n    IF  :   _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE\n    \n    ELSEIFS     :   LISTA_ELSEIF\n                |   \n    \n    LISTA_ELSEIF    :   LISTA_ELSEIF ELSEIF\n                    |   ELSEIF\n    \n    ELSEIF  :   _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    ELSE    :   _else llave_abre CUERPO_LOCAL llave_cierra\n    \n    SWITCH  :   _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra\n    \n    CASES   :   LISTA_CASE\n            |\n    \n    LISTA_CASE  :   LISTA_CASE CASE\n                |   CASE\n    \n    CASE    :   _case EXPRESION dos_puntos CUERPO_LOCAL\n    \n    DEFAULT_CASE    :   _default dos_puntos CUERPO_LOCAL\n    \n    WHILE   :   _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    DO  :   _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma\n    \n    FOR :   _for parentesis_abre DECLARACION punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    EXPRESION   :   EXPRESION mas EXPRESION %prec NIVEL4\n                |   EXPRESION menos EXPRESION %prec NIVEL4\n                |   EXPRESION asterisco EXPRESION %prec NIVEL3\n                |   EXPRESION division EXPRESION %prec NIVEL3\n                |   EXPRESION porcentaje EXPRESION %prec NIVEL3\n                |   EXPRESION equivale EXPRESION %prec NIVEL7\n                |   EXPRESION distinto EXPRESION %prec NIVEL7\n                |   EXPRESION mayor EXPRESION %prec NIVEL6\n                |   EXPRESION menor EXPRESION %prec NIVEL6\n                |   EXPRESION mayor_igual EXPRESION %prec NIVEL6\n                |   EXPRESION menor_igual EXPRESION %prec NIVEL6\n                |   EXPRESION and EXPRESION %prec NIVEL11\n                |   EXPRESION or EXPRESION %prec NIVEL12\n                |   EXPRESION desplazamiento_izquierdo EXPRESION %prec NIVEL5\n                |   EXPRESION desplazamiento_derecho mayor EXPRESION %prec NIVEL5\n                |   EXPRESION et EXPRESION %prec NIVEL8\n                |   EXPRESION pleca EXPRESION %prec NIVEL10\n                |   EXPRESION elevado EXPRESION %prec NIVEL9\n                |   EXPRESION pregunta EXPRESION dos_puntos EXPRESION %prec NIVEL13\n                |   menos EXPRESION %prec NIVEL2\n                |   exclamacion EXPRESION %prec NIVEL2\n                |   virgulilla EXPRESION %prec NIVEL2\n                |   parentesis_abre EXPRESION parentesis_cierra %prec NIVEL1\n                |   parentesis_abre TIPO asterisco parentesis_cierra _malloc parentesis_abre _sizeof parentesis_abre TIPO parentesis_cierra parentesis_cierra\n                |   identificador parentesis_abre EXPRESIONES parentesis_cierra\n                |   identificador punto identificador\n                |   identificador ACCESOS\n                |   identificador flecha identificador %prec NIVEL1\n                |   et identificador %prec NIVEL2\n                |   llave_abre EXPRESIONES llave_cierra\n                |   caracter\n                |   cadena\n                |   entero\n                |   decimal\n                |   identificador\n    \n    EXPRESIONES :   LISTA_EXPRESIONES\n                |\n    \n    LISTA_EXPRESIONES   :   LISTA_EXPRESIONES coma EXPRESION\n                        |   EXPRESION\n    \n    TIPO    :   _int\n            |   _char\n            |   _double\n            |   _float\n            |   _struct identificador\n            |   _void\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,7,15,16,17,161,],[-3,0,-1,-2,-5,-8,-4,-6,-7,-14,]),'_struct':([0,3,4,7,15,16,17,26,35,51,64,101,102,134,135,136,137,140,141,142,143,144,160,161,162,163,164,165,166,175,176,179,180,222,224,227,244,252,253,254,258,264,265,266,271,272,273,],[9,9,-5,-8,-4,-6,-7,41,41,41,41,41,41,41,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,41,41,-39,-41,41,41,41,-82,-75,41,41,-68,-83,41,41,-84,-74,41,]),'_int':([0,3,4,7,15,16,17,26,35,51,64,101,102,134,135,136,137,140,141,142,143,144,160,161,162,163,164,165,166,175,176,179,180,222,224,227,244,252,253,254,258,264,265,266,271,272,273,],[10,10,-5,-8,-4,-6,-7,10,10,10,10,10,10,10,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,10,10,-39,-41,10,10,10,-82,-75,10,10,-68,-83,10,10,-84,-74,10,]),'_char':([0,3,4,7,15,16,17,26,35,51,64,101,102,134,135,136,137,140,141,142,143,144,160,161,162,163,164,165,166,175,176,179,180,222,224,227,244,252,253,254,258,264,265,266,271,272,273,],[11,11,-5,-8,-4,-6,-7,11,11,11,11,11,11,11,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,11,11,-39,-41,11,11,11,-82,-75,11,11,-68,-83,11,11,-84,-74,11,]),'_double':([0,3,4,7,15,16,17,26,35,51,64,101,102,134,135,136,137,140,141,142,143,144,160,161,162,163,164,165,166,175,176,179,180,222,224,227,244,252,253,254,258,264,265,266,271,272,273,],[12,12,-5,-8,-4,-6,-7,12,12,12,12,12,12,12,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,12,12,-39,-41,12,12,12,-82,-75,12,12,-68,-83,12,12,-84,-74,12,]),'_float':([0,3,4,7,15,16,17,26,35,51,64,101,102,134,135,136,137,140,141,142,143,144,160,161,162,163,164,165,166,175,176,179,180,222,224,227,244,252,253,254,258,264,265,266,271,272,273,],[13,13,-5,-8,-4,-6,-7,13,13,13,13,13,13,13,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,13,13,-39,-41,13,13,13,-82,-75,13,13,-68,-83,13,13,-84,-74,13,]),'_void':([0,3,4,7,15,16,17,26,35,51,64,101,102,134,135,136,137,140,141,142,143,144,160,161,162,163,164,165,166,175,176,179,180,222,224,227,244,252,253,254,258,264,265,266,271,272,273,],[14,14,-5,-8,-4,-6,-7,14,14,14,14,14,14,14,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,14,14,-39,-41,14,14,14,-82,-75,14,14,-68,-83,14,14,-84,-74,14,]),'punto_coma':([5,6,18,19,21,22,28,29,30,31,34,36,42,44,46,52,54,55,56,57,58,60,61,62,66,67,87,88,89,90,95,100,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,126,127,128,130,138,139,145,146,155,158,167,168,170,171,177,198,200,226,228,229,255,257,],[16,17,-42,-22,-44,-48,-22,-46,-47,-50,-21,-43,-23,-49,-52,-119,-115,-116,-117,-118,-20,101,-13,-19,-45,-51,-104,-113,-105,-106,-111,-9,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,-107,-110,-112,-114,-12,163,164,165,166,-99,-109,179,180,-56,-57,-103,216,-53,237,-54,-55,264,-108,]),'identificador':([8,9,10,11,12,13,14,20,23,24,25,32,33,37,41,43,47,48,49,50,51,53,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,93,94,96,102,118,129,131,134,135,136,137,140,141,142,143,144,147,148,156,160,162,163,164,165,166,172,173,174,175,179,180,181,182,183,184,203,204,205,206,209,210,211,216,218,219,220,221,222,224,234,236,237,244,252,253,254,258,261,264,265,266,271,272,273,],[19,24,-124,-125,-126,-127,-129,28,34,-128,28,52,58,28,65,52,52,88,52,52,52,52,-128,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,126,127,132,52,52,28,132,-27,-28,-29,-32,-33,-34,-35,-36,52,168,52,-40,-26,-30,-31,-37,-38,52,52,52,132,-39,-41,52,201,202,-58,-59,-60,-61,-62,-65,-66,-67,52,52,52,-63,-64,132,132,52,52,28,-82,-75,132,132,-68,52,-83,132,132,-84,-74,132,]),'asterisco':([8,10,11,12,13,14,20,23,24,25,28,30,31,34,37,42,44,45,46,52,54,55,56,57,58,65,66,67,87,88,89,90,91,92,95,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,131,132,134,135,136,137,140,141,142,143,144,149,155,158,159,160,162,163,164,165,166,167,169,175,177,179,180,194,195,196,200,201,202,222,224,226,228,229,237,243,244,245,252,253,254,257,258,264,265,266,267,271,272,273,],[23,-124,-125,-126,-127,-129,23,33,-128,23,-22,-47,-50,-21,23,-23,-49,70,-52,-119,-115,-116,-117,-118,-20,-128,70,-51,-104,-113,-105,-106,70,124,-111,70,23,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,70,-107,-110,-112,-114,23,-22,23,-27,-28,-29,-32,-33,-34,-35,-36,-48,-99,-109,70,-40,-26,-30,-31,-37,-38,70,186,23,-103,-39,-41,70,70,70,70,186,186,23,23,70,70,70,23,70,-82,70,-75,23,23,-108,-68,-83,23,23,70,-84,-74,23,]),'parentesis_abre':([8,10,11,12,13,14,19,20,24,25,32,37,43,47,49,50,51,52,53,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,93,102,118,129,131,134,135,136,137,140,141,142,143,144,147,150,151,152,154,156,160,162,163,164,165,166,172,173,174,175,178,179,180,181,184,203,204,205,206,209,210,211,216,217,218,219,220,221,222,224,225,234,236,237,244,251,252,253,254,258,261,264,265,266,271,272,273,],[20,-124,-125,-126,-127,-129,26,20,-128,20,51,20,51,51,51,51,51,93,51,-128,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,20,51,51,20,20,-27,-28,-29,-32,-33,-34,-35,-36,51,172,173,174,176,51,-40,-26,-30,-31,-37,-38,51,51,51,20,199,-39,-41,51,-58,-59,-60,-61,-62,-65,-66,-67,51,227,51,51,-63,-64,20,20,236,51,51,20,-82,261,-75,20,20,-68,51,-83,20,20,-84,-74,20,]),'parentesis_cierra':([10,11,12,13,14,26,27,28,31,34,38,39,40,42,44,46,52,54,55,56,57,58,62,65,67,87,88,89,90,91,93,95,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,124,125,126,127,128,155,158,159,170,171,177,194,195,196,200,228,229,238,245,246,247,257,267,],[-124,-125,-126,-127,-129,-16,42,-22,-50,-21,63,-15,-18,-23,-49,-52,-119,-115,-116,-117,-118,-20,-19,-128,-51,-104,-113,-105,-106,123,-121,-111,-120,-123,-17,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,-107,157,158,-110,-112,-114,-99,-109,-122,-56,-57,-103,212,213,214,-53,-54,-55,247,255,256,257,-108,270,]),'coma':([18,19,21,22,28,29,30,31,34,36,39,40,42,44,46,52,54,55,56,57,58,62,66,67,87,88,89,90,95,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,126,127,128,155,158,159,177,257,],[25,-22,-44,-48,-22,-46,-47,-50,-21,-43,64,-18,-23,-49,-52,-119,-115,-116,-117,-118,-20,-19,-45,-51,-104,-113,-105,-106,-111,129,-123,-17,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,-107,-110,-112,-114,-99,-109,-122,-103,-108,]),'corchete_abre':([19,22,28,30,31,34,42,44,46,52,58,67,95,132,149,],[-22,32,-22,32,-50,-21,-23,-49,-52,32,-20,-51,32,-22,32,]),'igual':([19,22,28,29,30,31,34,42,44,46,58,67,132,149,169,185,186,187,188,191,192,193,201,202,207,208,],[-22,-48,-22,43,-47,-50,-21,-23,-49,-52,-20,-51,-22,-48,184,203,204,205,206,209,210,211,184,184,220,221,]),'llave_abre':([24,32,43,47,49,50,51,53,63,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,93,118,129,147,153,156,172,173,174,181,184,203,204,205,206,209,210,211,212,213,214,216,218,219,220,221,234,236,256,259,261,270,],[35,53,53,53,53,53,53,53,102,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,175,53,53,53,53,53,-58,-59,-60,-61,-62,-65,-66,-67,222,223,224,53,53,53,-63,-64,53,53,265,266,53,273,]),'llave_cierra':([28,31,34,35,42,44,46,52,53,54,55,56,57,58,59,60,61,62,67,87,88,89,90,95,97,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,126,127,128,130,133,134,135,136,137,140,141,142,143,144,155,158,159,160,162,163,164,165,166,175,177,179,180,197,222,224,230,235,240,244,252,253,257,258,262,264,265,266,268,269,271,272,273,274,],[-22,-50,-21,-11,-23,-49,-52,-119,-121,-115,-116,-117,-118,-20,100,-10,-13,-19,-51,-104,-113,-105,-106,-111,128,-120,-123,-25,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,-107,-110,-112,-114,-12,161,-24,-27,-28,-29,-32,-33,-34,-35,-36,-99,-109,-122,-40,-26,-30,-31,-37,-38,-25,-103,-39,-41,215,-25,-25,239,244,252,-82,-75,-25,-108,-68,-81,-83,-25,-25,271,272,-84,-74,-25,275,]),'aumento':([28,34,42,58,132,149,],[-22,-21,-23,-20,-22,170,]),'decremento':([28,34,42,58,132,149,],[-22,-21,-23,-20,-22,171,]),'punto':([28,30,31,34,42,44,46,52,58,67,132,149,169,],[-22,-47,-50,-21,-23,-49,-52,94,-20,-51,-22,-48,182,]),'flecha':([28,30,31,34,42,44,46,52,58,67,132,149,169,],[-22,-47,-50,-21,-23,-49,-52,96,-20,-51,-22,-48,183,]),'mas':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,132,149,155,158,159,167,169,177,194,195,196,200,201,202,226,228,229,243,245,257,267,],[-22,-47,-50,-21,-23,-49,68,-52,-119,-115,-116,-117,-118,-20,68,-51,-104,-113,-105,-106,68,-111,68,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,68,-107,-110,-112,-114,-22,-48,-99,-109,68,68,185,-103,68,68,68,68,185,185,68,68,68,68,68,-108,68,]),'division':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,132,149,155,158,159,167,169,177,194,195,196,200,201,202,226,228,229,243,245,257,267,],[-22,-47,-50,-21,-23,-49,71,-52,-119,-115,-116,-117,-118,-20,71,-51,-104,-113,-105,-106,71,-111,71,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,71,-107,-110,-112,-114,-22,-48,-99,-109,71,71,187,-103,71,71,71,71,187,187,71,71,71,71,71,-108,71,]),'porcentaje':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,132,149,155,158,159,167,169,177,194,195,196,200,201,202,226,228,229,243,245,257,267,],[-22,-47,-50,-21,-23,-49,72,-52,-119,-115,-116,-117,-118,-20,72,-51,-104,-113,-105,-106,72,-111,72,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,72,-107,-110,-112,-114,-22,-48,-99,-109,72,72,188,-103,72,72,72,72,188,188,72,72,72,72,72,-108,72,]),'menor':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,132,149,155,158,159,167,169,177,189,194,195,196,200,201,202,226,228,229,243,245,257,267,],[-22,-47,-50,-21,-23,-49,76,-52,-119,-115,-116,-117,-118,-20,76,-51,-104,-113,-105,-106,76,-111,76,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,76,-107,-110,-112,-114,-22,-48,-99,-109,76,76,189,-103,207,76,76,76,76,189,189,76,76,76,76,76,-108,76,]),'mayor':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,82,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,132,149,155,158,159,167,169,177,190,194,195,196,200,201,202,226,228,229,243,245,257,267,],[-22,-47,-50,-21,-23,-49,75,-52,-119,-115,-116,-117,-118,-20,75,-51,118,-104,-113,-105,-106,75,-111,75,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,75,-107,-110,-112,-114,-22,-48,-99,-109,75,75,190,-103,208,75,75,75,75,190,190,75,75,75,75,75,-108,75,]),'et':([28,30,31,32,34,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,93,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,127,128,129,132,147,149,155,156,158,159,167,169,172,173,174,177,181,184,194,195,196,200,201,202,203,204,205,206,209,210,211,216,218,219,220,221,226,228,229,234,236,243,245,257,261,267,],[-22,-47,-50,48,-21,-23,48,-49,83,-52,48,48,48,48,-119,48,-115,-116,-117,-118,-20,83,-51,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-104,-113,-105,-106,83,48,-111,83,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,48,-100,-101,-102,83,-107,-110,-112,-114,48,-22,48,-48,-99,48,-109,83,83,191,48,48,48,-103,48,-58,83,83,83,83,191,191,-59,-60,-61,-62,-65,-66,-67,48,48,48,-63,-64,83,83,83,48,48,83,83,-108,48,83,]),'elevado':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,132,149,155,158,159,167,169,177,194,195,196,200,201,202,226,228,229,243,245,257,267,],[-22,-47,-50,-21,-23,-49,85,-52,-119,-115,-116,-117,-118,-20,85,-51,-104,-113,-105,-106,85,-111,85,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,85,-107,-110,-112,-114,-22,-48,-99,-109,85,85,192,-103,85,85,85,85,192,192,85,85,85,85,85,-108,85,]),'pleca':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,132,149,155,158,159,167,169,177,194,195,196,200,201,202,226,228,229,243,245,257,267,],[-22,-47,-50,-21,-23,-49,84,-52,-119,-115,-116,-117,-118,-20,84,-51,-104,-113,-105,-106,84,-111,84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,84,-107,-110,-112,-114,-22,-48,-99,-109,84,84,193,-103,84,84,84,84,193,193,84,84,84,84,84,-108,84,]),'corchete_cierra':([31,32,44,45,46,52,54,55,56,57,67,87,88,89,90,95,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,123,126,127,128,155,158,177,257,],[-50,46,-49,67,-52,-119,-115,-116,-117,-118,-51,-104,-113,-105,-106,-111,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,-107,-110,-112,-114,-99,-109,-103,-108,]),'menos':([31,32,43,44,45,46,47,49,50,51,52,53,54,55,56,57,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,93,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,127,128,129,147,155,156,158,159,167,172,173,174,177,181,184,194,195,196,200,203,204,205,206,209,210,211,216,218,219,220,221,226,228,229,234,236,243,245,257,261,267,],[-50,47,47,-49,69,-52,47,47,47,47,-119,47,-115,-116,-117,-118,69,-51,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-104,-113,-105,-106,69,47,-111,69,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,47,-100,-101,-102,69,-107,-110,-112,-114,47,47,-99,47,-109,69,69,47,47,47,-103,47,-58,69,69,69,69,-59,-60,-61,-62,-65,-66,-67,47,47,47,-63,-64,69,69,69,47,47,69,69,-108,47,69,]),'equivale':([31,44,45,46,52,54,55,56,57,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,155,158,159,167,177,194,195,196,200,226,228,229,243,245,257,267,],[-50,-49,73,-52,-119,-115,-116,-117,-118,73,-51,-104,-113,-105,-106,73,-111,73,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,73,-107,-110,-112,-114,-99,-109,73,73,-103,73,73,73,73,73,73,73,73,73,-108,73,]),'distinto':([31,44,45,46,52,54,55,56,57,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,155,158,159,167,177,194,195,196,200,226,228,229,243,245,257,267,],[-50,-49,74,-52,-119,-115,-116,-117,-118,74,-51,-104,-113,-105,-106,74,-111,74,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,74,-107,-110,-112,-114,-99,-109,74,74,-103,74,74,74,74,74,74,74,74,74,-108,74,]),'mayor_igual':([31,44,45,46,52,54,55,56,57,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,155,158,159,167,177,194,195,196,200,226,228,229,243,245,257,267,],[-50,-49,77,-52,-119,-115,-116,-117,-118,77,-51,-104,-113,-105,-106,77,-111,77,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,77,-107,-110,-112,-114,-99,-109,77,77,-103,77,77,77,77,77,77,77,77,77,-108,77,]),'menor_igual':([31,44,45,46,52,54,55,56,57,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,155,158,159,167,177,194,195,196,200,226,228,229,243,245,257,267,],[-50,-49,78,-52,-119,-115,-116,-117,-118,78,-51,-104,-113,-105,-106,78,-111,78,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,78,-107,-110,-112,-114,-99,-109,78,78,-103,78,78,78,78,78,78,78,78,78,-108,78,]),'and':([31,44,45,46,52,54,55,56,57,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,155,158,159,167,177,194,195,196,200,226,228,229,243,245,257,267,],[-50,-49,79,-52,-119,-115,-116,-117,-118,79,-51,-104,-113,-105,-106,79,-111,79,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,79,-107,-110,-112,-114,-99,-109,79,79,-103,79,79,79,79,79,79,79,79,79,-108,79,]),'or':([31,44,45,46,52,54,55,56,57,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,155,158,159,167,177,194,195,196,200,226,228,229,243,245,257,267,],[-50,-49,80,-52,-119,-115,-116,-117,-118,80,-51,-104,-113,-105,-106,80,-111,80,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,80,-107,-110,-112,-114,-99,-109,80,80,-103,80,80,80,80,80,80,80,80,80,-108,80,]),'desplazamiento_izquierdo':([31,44,45,46,52,54,55,56,57,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,155,158,159,167,177,194,195,196,200,226,228,229,243,245,257,267,],[-50,-49,81,-52,-119,-115,-116,-117,-118,81,-51,-104,-113,-105,-106,81,-111,81,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,81,-107,-110,-112,-114,-99,-109,81,81,-103,81,81,81,81,81,81,81,81,81,-108,81,]),'desplazamiento_derecho':([31,44,45,46,52,54,55,56,57,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,155,158,159,167,177,194,195,196,200,226,228,229,243,245,257,267,],[-50,-49,82,-52,-119,-115,-116,-117,-118,82,-51,-104,-113,-105,-106,82,-111,82,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,82,-107,-110,-112,-114,-99,-109,82,82,-103,82,82,82,82,82,82,82,82,82,-108,82,]),'pregunta':([31,44,45,46,52,54,55,56,57,66,67,87,88,89,90,91,95,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,155,158,159,167,177,194,195,196,200,226,228,229,243,245,257,267,],[-50,-49,86,-52,-119,-115,-116,-117,-118,86,-51,-104,-113,-105,-106,86,-111,86,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,86,-107,-110,-112,-114,-99,-109,86,86,-103,86,86,86,86,86,86,86,86,86,-108,86,]),'dos_puntos':([31,44,46,52,54,55,56,57,67,87,88,89,90,95,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,126,127,128,132,155,158,177,241,243,257,],[-50,-49,-52,-119,-115,-116,-117,-118,-51,-104,-113,-105,-106,-111,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-100,-101,-102,156,-107,-110,-112,-114,160,-99,-109,-103,253,254,-108,]),'exclamacion':([32,43,47,49,50,51,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,93,118,129,147,156,172,173,174,181,184,203,204,205,206,209,210,211,216,218,219,220,221,234,236,261,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-58,-59,-60,-61,-62,-65,-66,-67,49,49,49,-63,-64,49,49,49,]),'virgulilla':([32,43,47,49,50,51,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,93,118,129,147,156,172,173,174,181,184,203,204,205,206,209,210,211,216,218,219,220,221,234,236,261,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-58,-59,-60,-61,-62,-65,-66,-67,50,50,50,-63,-64,50,50,50,]),'caracter':([32,43,47,49,50,51,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,93,118,129,147,156,172,173,174,181,184,203,204,205,206,209,210,211,216,218,219,220,221,234,236,261,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-58,-59,-60,-61,-62,-65,-66,-67,54,54,54,-63,-64,54,54,54,]),'cadena':([32,43,47,49,50,51,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,93,118,129,147,156,172,173,174,181,184,203,204,205,206,209,210,211,216,218,219,220,221,234,236,261,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-58,-59,-60,-61,-62,-65,-66,-67,55,55,55,-63,-64,55,55,55,]),'entero':([32,43,47,49,50,51,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,93,118,129,147,156,172,173,174,181,184,203,204,205,206,209,210,211,216,218,219,220,221,234,236,261,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-58,-59,-60,-61,-62,-65,-66,-67,56,56,56,-63,-64,56,56,56,]),'decimal':([32,43,47,49,50,51,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,93,118,129,147,156,172,173,174,181,184,203,204,205,206,209,210,211,216,218,219,220,221,234,236,261,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-58,-59,-60,-61,-62,-65,-66,-67,57,57,57,-63,-64,57,57,57,]),'_continue':([102,134,135,136,137,140,141,142,143,144,160,162,163,164,165,166,175,179,180,222,224,244,252,253,254,258,264,265,266,271,272,273,],[145,145,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,145,-39,-41,145,145,-82,-75,145,145,-68,-83,145,145,-84,-74,145,]),'_break':([102,134,135,136,137,140,141,142,143,144,160,162,163,164,165,166,175,179,180,222,224,244,252,253,254,258,264,265,266,271,272,273,],[146,146,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,146,-39,-41,146,146,-82,-75,146,146,-68,-83,146,146,-84,-74,146,]),'_return':([102,134,135,136,137,140,141,142,143,144,160,162,163,164,165,166,175,179,180,222,224,244,252,253,254,258,264,265,266,271,272,273,],[147,147,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,147,-39,-41,147,147,-82,-75,147,147,-68,-83,147,147,-84,-74,147,]),'_goto':([102,134,135,136,137,140,141,142,143,144,160,162,163,164,165,166,175,179,180,222,224,244,252,253,254,258,264,265,266,271,272,273,],[148,148,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,148,-39,-41,148,148,-82,-75,148,148,-68,-83,148,148,-84,-74,148,]),'_if':([102,134,135,136,137,140,141,142,143,144,160,162,163,164,165,166,175,179,180,222,224,244,252,253,254,258,264,265,266,271,272,273,],[150,150,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,150,-39,-41,150,150,-82,-75,150,150,-68,-83,150,150,-84,-74,150,]),'_switch':([102,134,135,136,137,140,141,142,143,144,160,162,163,164,165,166,175,179,180,222,224,244,252,253,254,258,264,265,266,271,272,273,],[151,151,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,151,-39,-41,151,151,-82,-75,151,151,-68,-83,151,151,-84,-74,151,]),'_while':([102,134,135,136,137,140,141,142,143,144,160,162,163,164,165,166,175,179,180,215,222,224,244,252,253,254,258,264,265,266,271,272,273,],[152,152,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,152,-39,-41,225,152,152,-82,-75,152,152,-68,-83,152,152,-84,-74,152,]),'_do':([102,134,135,136,137,140,141,142,143,144,160,162,163,164,165,166,175,179,180,222,224,244,252,253,254,258,264,265,266,271,272,273,],[153,153,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,153,-39,-41,153,153,-82,-75,153,153,-68,-83,153,153,-84,-74,153,]),'_for':([102,134,135,136,137,140,141,142,143,144,160,162,163,164,165,166,175,179,180,222,224,244,252,253,254,258,264,265,266,271,272,273,],[154,154,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,154,-39,-41,154,154,-82,-75,154,154,-68,-83,154,154,-84,-74,154,]),'_case':([134,135,136,137,140,141,142,143,144,160,162,163,164,165,166,179,180,223,232,233,242,244,252,254,258,263,264,271,272,],[-24,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,-39,-41,234,234,-79,-78,-82,-75,-25,-68,-80,-83,-84,-74,]),'_default':([134,135,136,137,140,141,142,143,144,160,162,163,164,165,166,179,180,223,231,232,233,242,244,252,254,258,263,264,271,272,],[-24,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,-39,-41,-77,241,-76,-79,-78,-82,-75,-25,-68,-80,-83,-84,-74,]),'_malloc':([157,],[178,]),'_sizeof':([199,],[217,]),'_else':([239,248,249,250,260,275,],[-70,259,-69,-72,-71,-73,]),'_elseif':([239,249,250,260,275,],[251,251,-72,-71,-73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'CUERPO_GLOBAL':([0,],[2,]),'LISTA_GLOBAL':([0,],[3,]),'INSTRUCCION_GLOBAL':([0,3,],[4,15,]),'DECLARACION':([0,3,102,134,175,176,222,224,253,254,265,266,273,],[5,5,138,138,138,198,138,138,138,138,138,138,138,]),'ESTRUCTURA':([0,3,],[6,6,]),'FUNCION':([0,3,],[7,7,]),'TIPO':([0,3,26,35,51,64,101,102,134,175,176,222,224,227,253,254,265,266,273,],[8,8,37,37,92,37,37,131,131,131,131,131,131,238,131,131,131,131,131,]),'LISTA_DECLARACION':([8,131,],[18,18,]),'DECLARACION_FINAL':([8,25,131,],[21,36,21,]),'IDENTIFICADORES':([8,20,25,37,102,131,134,175,222,224,237,253,254,265,266,273,],[22,27,22,62,149,22,149,149,149,149,149,149,149,149,149,149,]),'INDICES':([22,149,],[29,169,]),'ACCESOS':([22,52,149,],[30,95,30,]),'ACCESO':([22,30,52,95,149,],[31,44,31,44,31,]),'PARAMETROS':([26,],[38,]),'LISTA_PARAMETROS':([26,],[39,]),'CARACTERISTICA':([26,35,64,101,],[40,61,103,130,]),'EXPRESION':([32,43,47,49,50,51,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,93,118,129,147,156,172,173,174,181,216,218,219,234,236,261,],[45,66,87,89,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,99,155,159,167,177,194,195,196,200,226,228,229,243,245,267,]),'CARACTERISTICAS':([35,],[59,]),'LISTA_CARACTERISTICAS':([35,],[60,]),'EXPRESIONES':([53,93,],[97,125,]),'LISTA_EXPRESIONES':([53,93,],[98,98,]),'CUERPO_LOCAL':([102,175,222,224,253,254,265,266,273,],[133,197,230,235,262,263,268,269,274,]),'LISTA_LOCAL':([102,175,222,224,253,254,265,266,273,],[134,134,134,134,134,134,134,134,134,]),'INSTRUCCION_LOCAL':([102,134,175,222,224,253,254,265,266,273,],[135,162,135,135,135,135,135,135,135,135,]),'ETIQUETA':([102,134,175,222,224,253,254,265,266,273,],[136,136,136,136,136,136,136,136,136,136,]),'SALTO':([102,134,175,222,224,253,254,265,266,273,],[137,137,137,137,137,137,137,137,137,137,]),'ASIGNACION':([102,134,175,222,224,237,253,254,265,266,273,],[139,139,139,139,139,246,139,139,139,139,139,]),'IF':([102,134,175,222,224,253,254,265,266,273,],[140,140,140,140,140,140,140,140,140,140,]),'SWITCH':([102,134,175,222,224,253,254,265,266,273,],[141,141,141,141,141,141,141,141,141,141,]),'WHILE':([102,134,175,222,224,253,254,265,266,273,],[142,142,142,142,142,142,142,142,142,142,]),'DO':([102,134,175,222,224,253,254,265,266,273,],[143,143,143,143,143,143,143,143,143,143,]),'FOR':([102,134,175,222,224,253,254,265,266,273,],[144,144,144,144,144,144,144,144,144,144,]),'COMPUESTO':([169,201,202,],[181,218,219,]),'CASES':([223,],[231,]),'LISTA_CASE':([223,],[232,]),'CASE':([223,232,],[233,242,]),'DEFAULT_CASE':([231,],[240,]),'ELSEIFS':([239,],[248,]),'LISTA_ELSEIF':([239,],[249,]),'ELSEIF':([239,249,],[250,260,]),'ELSE':([248,],[258,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> CUERPO_GLOBAL','INIT',1,'p_init','ascendente.py',180),
  ('CUERPO_GLOBAL -> LISTA_GLOBAL','CUERPO_GLOBAL',1,'p_cuerpo_global','ascendente.py',186),
  ('CUERPO_GLOBAL -> <empty>','CUERPO_GLOBAL',0,'p_cuerpo_global','ascendente.py',187),
  ('LISTA_GLOBAL -> LISTA_GLOBAL INSTRUCCION_GLOBAL','LISTA_GLOBAL',2,'p_lista_global','ascendente.py',193),
  ('LISTA_GLOBAL -> INSTRUCCION_GLOBAL','LISTA_GLOBAL',1,'p_lista_global','ascendente.py',194),
  ('INSTRUCCION_GLOBAL -> DECLARACION punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',200),
  ('INSTRUCCION_GLOBAL -> ESTRUCTURA punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',201),
  ('INSTRUCCION_GLOBAL -> FUNCION','INSTRUCCION_GLOBAL',1,'p_instruccion_global','ascendente.py',202),
  ('ESTRUCTURA -> _struct identificador llave_abre CARACTERISTICAS llave_cierra','ESTRUCTURA',5,'p_estructura','ascendente.py',208),
  ('CARACTERISTICAS -> LISTA_CARACTERISTICAS','CARACTERISTICAS',1,'p_caracteristicas','ascendente.py',214),
  ('CARACTERISTICAS -> <empty>','CARACTERISTICAS',0,'p_caracteristicas','ascendente.py',215),
  ('LISTA_CARACTERISTICAS -> LISTA_CARACTERISTICAS punto_coma CARACTERISTICA','LISTA_CARACTERISTICAS',3,'p_lista_caracteristicas','ascendente.py',221),
  ('LISTA_CARACTERISTICAS -> CARACTERISTICA','LISTA_CARACTERISTICAS',1,'p_lista_caracteristicas','ascendente.py',222),
  ('FUNCION -> TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FUNCION',8,'p_funcion','ascendente.py',228),
  ('PARAMETROS -> LISTA_PARAMETROS','PARAMETROS',1,'p_parametros','ascendente.py',234),
  ('PARAMETROS -> <empty>','PARAMETROS',0,'p_parametros','ascendente.py',235),
  ('LISTA_PARAMETROS -> LISTA_PARAMETROS coma CARACTERISTICA','LISTA_PARAMETROS',3,'p_lista_parametros','ascendente.py',241),
  ('LISTA_PARAMETROS -> CARACTERISTICA','LISTA_PARAMETROS',1,'p_lista_parametros','ascendente.py',242),
  ('CARACTERISTICA -> TIPO IDENTIFICADORES','CARACTERISTICA',2,'p_caracteristica','ascendente.py',248),
  ('IDENTIFICADORES -> asterisco asterisco identificador','IDENTIFICADORES',3,'p_identificadores','ascendente.py',254),
  ('IDENTIFICADORES -> asterisco identificador','IDENTIFICADORES',2,'p_identificadores','ascendente.py',255),
  ('IDENTIFICADORES -> identificador','IDENTIFICADORES',1,'p_identificadores','ascendente.py',256),
  ('IDENTIFICADORES -> parentesis_abre IDENTIFICADORES parentesis_cierra','IDENTIFICADORES',3,'p_identificadores','ascendente.py',257),
  ('CUERPO_LOCAL -> LISTA_LOCAL','CUERPO_LOCAL',1,'p_cuerpo_local','ascendente.py',263),
  ('CUERPO_LOCAL -> <empty>','CUERPO_LOCAL',0,'p_cuerpo_local','ascendente.py',264),
  ('LISTA_LOCAL -> LISTA_LOCAL INSTRUCCION_LOCAL','LISTA_LOCAL',2,'p_lista_local','ascendente.py',270),
  ('LISTA_LOCAL -> INSTRUCCION_LOCAL','LISTA_LOCAL',1,'p_lista_local','ascendente.py',271),
  ('INSTRUCCION_LOCAL -> ETIQUETA','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',277),
  ('INSTRUCCION_LOCAL -> SALTO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',278),
  ('INSTRUCCION_LOCAL -> DECLARACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',279),
  ('INSTRUCCION_LOCAL -> ASIGNACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',280),
  ('INSTRUCCION_LOCAL -> IF','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',281),
  ('INSTRUCCION_LOCAL -> SWITCH','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',282),
  ('INSTRUCCION_LOCAL -> WHILE','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',283),
  ('INSTRUCCION_LOCAL -> DO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',284),
  ('INSTRUCCION_LOCAL -> FOR','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',285),
  ('INSTRUCCION_LOCAL -> _continue punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',286),
  ('INSTRUCCION_LOCAL -> _break punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',287),
  ('INSTRUCCION_LOCAL -> _return EXPRESION punto_coma','INSTRUCCION_LOCAL',3,'p_instruccion_local','ascendente.py',288),
  ('ETIQUETA -> identificador dos_puntos','ETIQUETA',2,'p_etiqueta','ascendente.py',294),
  ('SALTO -> _goto identificador punto_coma','SALTO',3,'p_salto','ascendente.py',300),
  ('DECLARACION -> TIPO LISTA_DECLARACION','DECLARACION',2,'p_declaracion','ascendente.py',306),
  ('LISTA_DECLARACION -> LISTA_DECLARACION coma DECLARACION_FINAL','LISTA_DECLARACION',3,'p_lista_declaracion','ascendente.py',312),
  ('LISTA_DECLARACION -> DECLARACION_FINAL','LISTA_DECLARACION',1,'p_lista_declaracion','ascendente.py',313),
  ('DECLARACION_FINAL -> IDENTIFICADORES INDICES igual EXPRESION','DECLARACION_FINAL',4,'p_declaracion_final','ascendente.py',319),
  ('DECLARACION_FINAL -> IDENTIFICADORES INDICES','DECLARACION_FINAL',2,'p_declaracion_final','ascendente.py',320),
  ('INDICES -> ACCESOS','INDICES',1,'p_indices','ascendente.py',326),
  ('INDICES -> <empty>','INDICES',0,'p_indices','ascendente.py',327),
  ('ACCESOS -> ACCESOS ACCESO','ACCESOS',2,'p_accesos','ascendente.py',333),
  ('ACCESOS -> ACCESO','ACCESOS',1,'p_accesos','ascendente.py',334),
  ('ACCESO -> corchete_abre EXPRESION corchete_cierra','ACCESO',3,'p_acceso','ascendente.py',340),
  ('ACCESO -> corchete_abre corchete_cierra','ACCESO',2,'p_acceso','ascendente.py',341),
  ('ASIGNACION -> IDENTIFICADORES INDICES COMPUESTO EXPRESION','ASIGNACION',4,'p_asignacion','ascendente.py',347),
  ('ASIGNACION -> IDENTIFICADORES INDICES punto identificador COMPUESTO EXPRESION','ASIGNACION',6,'p_asignacion','ascendente.py',348),
  ('ASIGNACION -> IDENTIFICADORES INDICES flecha identificador COMPUESTO EXPRESION','ASIGNACION',6,'p_asignacion','ascendente.py',349),
  ('ASIGNACION -> IDENTIFICADORES aumento','ASIGNACION',2,'p_asignacion','ascendente.py',350),
  ('ASIGNACION -> IDENTIFICADORES decremento','ASIGNACION',2,'p_asignacion','ascendente.py',351),
  ('COMPUESTO -> igual','COMPUESTO',1,'p_compuesto','ascendente.py',357),
  ('COMPUESTO -> mas igual','COMPUESTO',2,'p_compuesto','ascendente.py',358),
  ('COMPUESTO -> asterisco igual','COMPUESTO',2,'p_compuesto','ascendente.py',359),
  ('COMPUESTO -> division igual','COMPUESTO',2,'p_compuesto','ascendente.py',360),
  ('COMPUESTO -> porcentaje igual','COMPUESTO',2,'p_compuesto','ascendente.py',361),
  ('COMPUESTO -> menor menor igual','COMPUESTO',3,'p_compuesto','ascendente.py',362),
  ('COMPUESTO -> mayor mayor igual','COMPUESTO',3,'p_compuesto','ascendente.py',363),
  ('COMPUESTO -> et igual','COMPUESTO',2,'p_compuesto','ascendente.py',364),
  ('COMPUESTO -> elevado igual','COMPUESTO',2,'p_compuesto','ascendente.py',365),
  ('COMPUESTO -> pleca igual','COMPUESTO',2,'p_compuesto','ascendente.py',366),
  ('IF -> _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE','IF',9,'p_if','ascendente.py',372),
  ('ELSEIFS -> LISTA_ELSEIF','ELSEIFS',1,'p_elseifs','ascendente.py',378),
  ('ELSEIFS -> <empty>','ELSEIFS',0,'p_elseifs','ascendente.py',379),
  ('LISTA_ELSEIF -> LISTA_ELSEIF ELSEIF','LISTA_ELSEIF',2,'p_lista_elseif','ascendente.py',385),
  ('LISTA_ELSEIF -> ELSEIF','LISTA_ELSEIF',1,'p_lista_elseif','ascendente.py',386),
  ('ELSEIF -> _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','ELSEIF',7,'p_elseif','ascendente.py',392),
  ('ELSE -> _else llave_abre CUERPO_LOCAL llave_cierra','ELSE',4,'p_else','ascendente.py',398),
  ('SWITCH -> _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra','SWITCH',8,'p_switch','ascendente.py',404),
  ('CASES -> LISTA_CASE','CASES',1,'p_cases','ascendente.py',410),
  ('CASES -> <empty>','CASES',0,'p_cases','ascendente.py',411),
  ('LISTA_CASE -> LISTA_CASE CASE','LISTA_CASE',2,'p_lista_case','ascendente.py',417),
  ('LISTA_CASE -> CASE','LISTA_CASE',1,'p_lista_case','ascendente.py',418),
  ('CASE -> _case EXPRESION dos_puntos CUERPO_LOCAL','CASE',4,'p_case','ascendente.py',424),
  ('DEFAULT_CASE -> _default dos_puntos CUERPO_LOCAL','DEFAULT_CASE',3,'p_default_case','ascendente.py',430),
  ('WHILE -> _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','WHILE',7,'p_while','ascendente.py',436),
  ('DO -> _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma','DO',9,'p_do','ascendente.py',442),
  ('FOR -> _for parentesis_abre DECLARACION punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FOR',11,'p_for','ascendente.py',448),
  ('EXPRESION -> EXPRESION mas EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',454),
  ('EXPRESION -> EXPRESION menos EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',455),
  ('EXPRESION -> EXPRESION asterisco EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',456),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',457),
  ('EXPRESION -> EXPRESION porcentaje EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',458),
  ('EXPRESION -> EXPRESION equivale EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',459),
  ('EXPRESION -> EXPRESION distinto EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',460),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',461),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',462),
  ('EXPRESION -> EXPRESION mayor_igual EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',463),
  ('EXPRESION -> EXPRESION menor_igual EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',464),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',465),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',466),
  ('EXPRESION -> EXPRESION desplazamiento_izquierdo EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',467),
  ('EXPRESION -> EXPRESION desplazamiento_derecho mayor EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',468),
  ('EXPRESION -> EXPRESION et EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',469),
  ('EXPRESION -> EXPRESION pleca EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',470),
  ('EXPRESION -> EXPRESION elevado EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',471),
  ('EXPRESION -> EXPRESION pregunta EXPRESION dos_puntos EXPRESION','EXPRESION',5,'p_expresion','ascendente.py',472),
  ('EXPRESION -> menos EXPRESION','EXPRESION',2,'p_expresion','ascendente.py',473),
  ('EXPRESION -> exclamacion EXPRESION','EXPRESION',2,'p_expresion','ascendente.py',474),
  ('EXPRESION -> virgulilla EXPRESION','EXPRESION',2,'p_expresion','ascendente.py',475),
  ('EXPRESION -> parentesis_abre EXPRESION parentesis_cierra','EXPRESION',3,'p_expresion','ascendente.py',476),
  ('EXPRESION -> parentesis_abre TIPO asterisco parentesis_cierra _malloc parentesis_abre _sizeof parentesis_abre TIPO parentesis_cierra parentesis_cierra','EXPRESION',11,'p_expresion','ascendente.py',477),
  ('EXPRESION -> identificador parentesis_abre EXPRESIONES parentesis_cierra','EXPRESION',4,'p_expresion','ascendente.py',478),
  ('EXPRESION -> identificador punto identificador','EXPRESION',3,'p_expresion','ascendente.py',479),
  ('EXPRESION -> identificador ACCESOS','EXPRESION',2,'p_expresion','ascendente.py',480),
  ('EXPRESION -> identificador flecha identificador','EXPRESION',3,'p_expresion','ascendente.py',481),
  ('EXPRESION -> et identificador','EXPRESION',2,'p_expresion','ascendente.py',482),
  ('EXPRESION -> llave_abre EXPRESIONES llave_cierra','EXPRESION',3,'p_expresion','ascendente.py',483),
  ('EXPRESION -> caracter','EXPRESION',1,'p_expresion','ascendente.py',484),
  ('EXPRESION -> cadena','EXPRESION',1,'p_expresion','ascendente.py',485),
  ('EXPRESION -> entero','EXPRESION',1,'p_expresion','ascendente.py',486),
  ('EXPRESION -> decimal','EXPRESION',1,'p_expresion','ascendente.py',487),
  ('EXPRESION -> identificador','EXPRESION',1,'p_expresion','ascendente.py',488),
  ('EXPRESIONES -> LISTA_EXPRESIONES','EXPRESIONES',1,'p_expresiones','ascendente.py',494),
  ('EXPRESIONES -> <empty>','EXPRESIONES',0,'p_expresiones','ascendente.py',495),
  ('LISTA_EXPRESIONES -> LISTA_EXPRESIONES coma EXPRESION','LISTA_EXPRESIONES',3,'p_lista_expresiones','ascendente.py',501),
  ('LISTA_EXPRESIONES -> EXPRESION','LISTA_EXPRESIONES',1,'p_lista_expresiones','ascendente.py',502),
  ('TIPO -> _int','TIPO',1,'p_tipo','ascendente.py',508),
  ('TIPO -> _char','TIPO',1,'p_tipo','ascendente.py',509),
  ('TIPO -> _double','TIPO',1,'p_tipo','ascendente.py',510),
  ('TIPO -> _float','TIPO',1,'p_tipo','ascendente.py',511),
  ('TIPO -> _struct identificador','TIPO',2,'p_tipo','ascendente.py',512),
  ('TIPO -> _void','TIPO',1,'p_tipo','ascendente.py',513),
]
