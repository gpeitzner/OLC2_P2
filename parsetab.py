
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftcomarightNIVEL14rightNIVEL13leftorleftandleftplecaleftelevadoleftetleftequivaledistintoleftmayormenormayor_igualmenor_igualleftdesplazamiento_izquierdodesplazamiento_derecholeftmasmenosleftasteriscodivisionporcentajerightNIVEL2leftparentesis_abreparentesis_cierracorchete_abrecorchete_cierra_break _case _char _continue _default _do _double _else _float _for _goto _if _int _printf _return _scanf _sizeof _struct _switch _void _while and asterisco aumento cadena caracter coma corchete_abre corchete_cierra decimal decremento desplazamiento_derecho desplazamiento_izquierdo distinto division dos_puntos elevado entero equivale et exclamacion identificador igual llave_abre llave_cierra mas mayor mayor_igual menor menor_igual menos or parentesis_abre parentesis_cierra pleca porcentaje pregunta punto punto_coma virgulilla\n    INIT   :   CUERPO_GLOBAL\n    \n    CUERPO_GLOBAL   :   LISTA_GLOBAL\n    \n    CUERPO_GLOBAL   :\n    \n    LISTA_GLOBAL    :   LISTA_GLOBAL INSTRUCCION_GLOBAL\n    \n    LISTA_GLOBAL    :   INSTRUCCION_GLOBAL\n    \n    INSTRUCCION_GLOBAL  :   DECLARACION punto_coma\n                        |   ESTRUCTURA punto_coma\n                        |   FUNCION\n    \n    ESTRUCTURA  :   _struct identificador llave_abre CARACTERISTICAS llave_cierra\n    \n    CARACTERISTICAS :   LISTA_CARACTERISTICAS\n    \n    CARACTERISTICAS :\n    \n    LISTA_CARACTERISTICAS   :   LISTA_CARACTERISTICAS CARACTERISTICA\n    \n    LISTA_CARACTERISTICAS : CARACTERISTICA\n    \n    CARACTERISTICA  :   DECLARACION punto_coma\n    \n    FUNCION    :   TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    PARAMETROS  :   LISTA_PARAMETROS\n    \n    PARAMETROS  :\n    \n    LISTA_PARAMETROS    :   LISTA_PARAMETROS coma PARAMETRO\n    \n    LISTA_PARAMETROS    :   PARAMETRO\n    \n    PARAMETRO   :   TIPO identificador\n    \n    PARAMETRO   :   TIPO et identificador\n    \n    CUERPO_LOCAL    :   LISTA_LOCAL\n    \n    CUERPO_LOCAL    :\n    \n    LISTA_LOCAL :   LISTA_LOCAL INSTRUCCION_LOCAL\n    \n    LISTA_LOCAL :   INSTRUCCION_LOCAL\n    \n    INSTRUCCION_LOCAL   :   ETIQUETA\n                        |   SALTO\n                        |   DECLARACION punto_coma\n                        |   ASIGNACION punto_coma\n                        |   IF\n                        |   SWITCH\n                        |   WHILE\n                        |   DO\n                        |   FOR\n                        |   PRINT punto_coma\n                        |   METODO punto_coma\n\n    \n    PRINT   :   _printf parentesis_abre LISTA_EXPRESIONES parentesis_cierra\n    \n    INSTRUCCION_LOCAL   :   _continue punto_coma\n    \n    INSTRUCCION_LOCAL   :   _break punto_coma\n    \n    INSTRUCCION_LOCAL   :   _return EXPRESION punto_coma\n    \n    INSTRUCCION_LOCAL   :   _return punto_coma\n    \n    METODO  :   identificador parentesis_abre EXPRESIONES parentesis_cierra \n    \n    ETIQUETA    :   identificador dos_puntos\n    \n    SALTO   :   _goto identificador punto_coma\n    \n    DECLARACION :   TIPO LISTA_DECLARACION\n    \n    LISTA_DECLARACION   :   LISTA_DECLARACION coma DECLARACION_FINAL\n    \n    LISTA_DECLARACION   :   DECLARACION_FINAL\n    \n    DECLARACION_FINAL   :   identificador INDICES\n    \n    DECLARACION_FINAL   :   identificador INDICES igual EXPRESION\n    \n    INDICES :   ACCESOS\n    \n    INDICES :\n    \n    ACCESOS :   ACCESOS ACCESO\n    \n    ACCESOS :   ACCESO\n    \n    ACCESO  :   corchete_abre EXPRESION corchete_cierra \n    \n    ACCESO : corchete_abre corchete_cierra\n    \n    ASIGNACION  :   identificador INDICES COMPUESTO EXPRESION \n    \n    ASIGNACION  :   identificador INDICES punto identificador INDICES COMPUESTO EXPRESION \n    \n    ASIGNACION  :   identificador aumento %prec NIVEL2\n    \n    ASIGNACION  :   aumento identificador %prec NIVEL2\n    \n    ASIGNACION  :   identificador decremento %prec NIVEL2\n    \n    ASIGNACION  :   decremento identificador %prec NIVEL2\n    \n    COMPUESTO   :   igual %prec NIVEL14\n                |   mas igual %prec NIVEL14\n                |   menos igual %prec NIVEL14\n                |   asterisco igual %prec NIVEL14\n                |   division igual %prec NIVEL14\n                |   porcentaje igual %prec NIVEL14\n                |   desplazamiento_izquierdo igual %prec NIVEL14\n                |   desplazamiento_derecho igual %prec NIVEL14\n                |   et igual %prec NIVEL14\n                |   elevado igual %prec NIVEL14\n                |   pleca igual %prec NIVEL14\n    \n    IF  :   _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    IF  :   _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSE\n    \n    IF  :   _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIF IF_FINAL\n    \n    IF_FINAL    :   ELSEIF  IF_FINAL\n    \n    IF_FINAL    :   ELSE\n    \n    IF_FINAL    :   \n    \n    ELSEIF  :   _else _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    ELSE    :   _else llave_abre CUERPO_LOCAL llave_cierra\n    \n    SWITCH  :   _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra\n    \n    CASES   :   LISTA_CASE\n    \n    CASES   :\n    \n    LISTA_CASE  :   LISTA_CASE CASE\n    \n    LISTA_CASE  :   CASE\n    \n    CASE    :   _case EXPRESION dos_puntos CUERPO_LOCAL\n    \n    DEFAULT_CASE    :   _default dos_puntos CUERPO_LOCAL\n    \n    DEFAULT_CASE    :\n    \n    WHILE   :   _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    DO  :   _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma\n    \n    FOR :   _for parentesis_abre INICIO_FOR punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    INICIO_FOR  :   DECLARACION\n                |   ASIGNACION\n    \n    EXPRESION   :   EXPRESION mas EXPRESION \n                |   EXPRESION menos EXPRESION\n                |   EXPRESION asterisco EXPRESION\n                |   EXPRESION division EXPRESION \n                |   EXPRESION porcentaje EXPRESION \n    \n    EXPRESION   :   EXPRESION equivale EXPRESION \n                |   EXPRESION distinto EXPRESION\n                |   EXPRESION mayor EXPRESION \n                |   EXPRESION menor EXPRESION \n                |   EXPRESION mayor_igual EXPRESION \n                |   EXPRESION menor_igual EXPRESION\n    \n    EXPRESION   :   EXPRESION and EXPRESION \n                |   EXPRESION or EXPRESION \n    \n    EXPRESION   :   EXPRESION desplazamiento_izquierdo EXPRESION \n                |   EXPRESION desplazamiento_derecho EXPRESION \n                |   EXPRESION et EXPRESION\n                |   EXPRESION pleca EXPRESION\n                |   EXPRESION elevado EXPRESION\n    \n    EXPRESION   :   EXPRESION pregunta EXPRESION dos_puntos EXPRESION %prec NIVEL13\n    \n    EXPRESION   :   menos EXPRESION %prec NIVEL2\n                |   exclamacion EXPRESION %prec NIVEL2\n                |   virgulilla EXPRESION %prec NIVEL2\n    \n    EXPRESION   :   et identificador %prec NIVEL2\n    \n    EXPRESION   :   METODO\n    \n    EXPRESION   :   parentesis_abre EXPRESION parentesis_cierra\n    \n    EXPRESION   :   identificador INDICES punto identificador INDICES\n    \n    EXPRESION   :   identificador ACCESOS\n    \n    EXPRESION   :   llave_abre EXPRESIONES llave_cierra\n    \n    EXPRESION   :   _sizeof parentesis_abre TIPO parentesis_cierra %prec NIVEL2\n    \n    EXPRESION   :   identificador aumento %prec NIVEL2\n    \n    EXPRESION   :   aumento identificador %prec NIVEL2\n    \n    EXPRESION   :   identificador decremento %prec NIVEL2\n    \n    EXPRESION   :   decremento identificador %prec NIVEL2\n    \n    EXPRESION   :   _scanf parentesis_abre parentesis_cierra\n    \n    EXPRESION   :   parentesis_abre TIPO parentesis_cierra EXPRESION %prec NIVEL2\n    EXPRESION  :   caracterEXPRESION  :   cadenaEXPRESION  :   enteroEXPRESION  :   decimalEXPRESION  :   identificador\n    EXPRESIONES :   LISTA_EXPRESIONES\n    \n    EXPRESIONES :\n    \n    LISTA_EXPRESIONES   :   LISTA_EXPRESIONES coma EXPRESION\n    \n    LISTA_EXPRESIONES   :   EXPRESION\n    \n    TIPO    :   _int\n            |   _char\n            |   _double\n            |   _float\n            |   _void\n    \n    TIPO    :   _struct identificador\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,7,15,16,17,175,],[-3,0,-1,-2,-5,-8,-4,-6,-7,-15,]),'_struct':([0,3,4,7,15,16,17,23,28,46,57,58,64,101,106,107,109,140,141,142,143,146,147,148,149,150,171,175,176,177,178,179,180,181,182,184,191,192,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[9,9,-5,-8,-4,-6,-7,35,35,35,35,-13,35,35,-12,-14,35,35,-25,-26,-27,-30,-31,-32,-33,-34,-43,-15,-24,-28,-29,-35,-36,-38,-39,-41,35,35,-40,-44,35,35,-73,-89,-74,-78,-81,35,35,-78,-75,-77,35,-90,35,-76,-80,-91,35,-79,]),'_int':([0,3,4,7,15,16,17,23,28,46,57,58,64,101,106,107,109,140,141,142,143,146,147,148,149,150,171,175,176,177,178,179,180,181,182,184,191,192,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[10,10,-5,-8,-4,-6,-7,10,10,10,10,-13,10,10,-12,-14,10,10,-25,-26,-27,-30,-31,-32,-33,-34,-43,-15,-24,-28,-29,-35,-36,-38,-39,-41,10,10,-40,-44,10,10,-73,-89,-74,-78,-81,10,10,-78,-75,-77,10,-90,10,-76,-80,-91,10,-79,]),'_char':([0,3,4,7,15,16,17,23,28,46,57,58,64,101,106,107,109,140,141,142,143,146,147,148,149,150,171,175,176,177,178,179,180,181,182,184,191,192,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[11,11,-5,-8,-4,-6,-7,11,11,11,11,-13,11,11,-12,-14,11,11,-25,-26,-27,-30,-31,-32,-33,-34,-43,-15,-24,-28,-29,-35,-36,-38,-39,-41,11,11,-40,-44,11,11,-73,-89,-74,-78,-81,11,11,-78,-75,-77,11,-90,11,-76,-80,-91,11,-79,]),'_double':([0,3,4,7,15,16,17,23,28,46,57,58,64,101,106,107,109,140,141,142,143,146,147,148,149,150,171,175,176,177,178,179,180,181,182,184,191,192,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[12,12,-5,-8,-4,-6,-7,12,12,12,12,-13,12,12,-12,-14,12,12,-25,-26,-27,-30,-31,-32,-33,-34,-43,-15,-24,-28,-29,-35,-36,-38,-39,-41,12,12,-40,-44,12,12,-73,-89,-74,-78,-81,12,12,-78,-75,-77,12,-90,12,-76,-80,-91,12,-79,]),'_float':([0,3,4,7,15,16,17,23,28,46,57,58,64,101,106,107,109,140,141,142,143,146,147,148,149,150,171,175,176,177,178,179,180,181,182,184,191,192,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[13,13,-5,-8,-4,-6,-7,13,13,13,13,-13,13,13,-12,-14,13,13,-25,-26,-27,-30,-31,-32,-33,-34,-43,-15,-24,-28,-29,-35,-36,-38,-39,-41,13,13,-40,-44,13,13,-73,-89,-74,-78,-81,13,13,-78,-75,-77,13,-90,13,-76,-80,-91,13,-79,]),'_void':([0,3,4,7,15,16,17,23,28,46,57,58,64,101,106,107,109,140,141,142,143,146,147,148,149,150,171,175,176,177,178,179,180,181,182,184,191,192,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[14,14,-5,-8,-4,-6,-7,14,14,14,14,-13,14,14,-12,-14,14,14,-25,-26,-27,-30,-31,-32,-33,-34,-43,-15,-24,-28,-29,-35,-36,-38,-39,-41,14,14,-40,-44,14,14,-73,-89,-74,-78,-81,14,14,-78,-75,-77,14,-90,14,-76,-80,-91,14,-79,]),'punto_coma':([5,6,18,19,20,24,25,26,29,30,37,39,44,45,52,53,54,55,59,66,67,87,88,89,90,92,93,94,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,137,144,145,151,152,153,154,155,166,167,168,170,173,174,183,185,186,187,194,195,215,216,217,220,237,243,253,268,],[16,17,-45,-51,-47,-48,-50,-53,-46,-51,-52,-55,-133,-117,-129,-130,-131,-132,107,-49,-54,-113,-116,-114,-115,-120,-123,-125,-124,-126,-9,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-118,-121,-127,177,178,179,180,181,182,184,-51,-42,-128,-122,-58,-60,209,210,-59,-61,-112,-119,236,-93,-92,-56,-37,252,-57,278,]),'identificador':([8,9,10,11,12,13,14,21,22,27,31,35,36,40,41,42,43,46,47,49,50,60,62,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,109,130,133,135,140,141,142,143,146,147,148,149,150,155,156,157,158,165,171,176,177,178,179,180,181,182,184,188,189,190,191,192,193,196,197,198,209,210,222,223,224,225,226,227,228,229,230,231,236,239,241,244,249,251,252,254,259,262,263,265,266,267,270,271,272,274,278,279,280,282,284,286,288,290,],[19,21,-138,-139,-140,-141,-142,-143,30,44,61,65,44,44,88,44,44,44,44,102,103,30,108,-143,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,138,166,44,44,138,-25,-26,-27,-30,-31,-32,-33,-34,44,185,186,187,44,-43,-24,-28,-29,-35,-36,-38,-39,-41,44,44,44,138,218,44,44,221,-62,-40,-44,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,44,138,138,44,44,44,218,-73,-89,-74,-78,-81,138,138,-78,-75,-77,138,-90,138,-76,44,-80,-91,138,-79,]),'et':([10,11,12,13,14,25,26,27,31,36,37,38,39,40,42,43,44,45,46,47,52,53,54,55,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,137,138,155,165,166,167,168,169,170,172,183,188,189,190,193,194,195,196,198,211,212,213,218,220,221,222,223,224,225,226,227,228,229,230,231,236,238,243,244,249,251,253,258,260,282,285,],[-138,-139,-140,-141,-142,-50,-53,41,62,41,-52,83,-55,41,41,41,-133,-117,41,41,-129,-130,-131,-132,-143,83,-54,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-113,-116,-114,-115,-120,-123,-125,41,83,83,-124,-126,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,83,83,-107,-108,-109,83,83,83,-118,41,-121,41,-127,-51,41,41,-51,-42,-128,83,-122,206,83,41,41,41,41,83,-119,41,-62,83,83,83,-51,83,-51,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,41,206,83,41,41,41,83,83,83,41,83,]),'parentesis_cierra':([10,11,12,13,14,23,25,26,32,33,34,37,39,44,45,52,53,54,55,61,65,67,87,88,89,90,92,93,94,95,96,97,99,100,102,103,104,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,132,134,136,137,166,167,168,169,170,173,174,186,187,194,195,211,212,213,219,220,253,260,261,285,],[-138,-139,-140,-141,-142,-17,-50,-53,63,-16,-19,-52,-55,-133,-117,-129,-130,-131,-132,-20,-143,-54,-113,-116,-114,-115,-120,-123,-125,-135,132,133,-134,-137,-124,-126,137,-21,-18,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,167,-118,-121,170,-127,-51,-42,-128,-136,-122,-58,-60,-59,-61,-112,-119,232,233,234,237,-56,-57,268,269,287,]),'coma':([18,19,20,24,25,26,29,30,33,34,37,39,44,45,52,53,54,55,61,66,67,87,88,89,90,92,93,94,99,100,102,103,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,137,166,167,168,169,170,194,195,219,],[22,-51,-47,-48,-50,-53,-46,-51,64,-19,-52,-55,-133,-117,-129,-130,-131,-132,-20,-49,-54,-113,-116,-114,-115,-120,-123,-125,135,-137,-124,-126,-21,-18,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-118,-121,-127,-51,-42,-128,-136,-122,-112,-119,135,]),'parentesis_abre':([19,27,36,40,42,43,44,46,47,48,51,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,133,135,138,155,159,160,161,163,164,165,188,189,190,193,196,198,222,223,224,225,226,227,228,229,230,231,236,242,244,249,251,275,282,],[23,46,46,46,46,46,95,46,46,101,104,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,95,46,188,189,190,192,193,46,46,46,46,46,46,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,46,251,46,46,46,282,46,]),'igual':([19,24,25,26,30,37,39,67,138,172,199,200,201,202,203,204,205,206,207,208,218,221,238,],[-51,36,-50,-53,-51,-52,-55,-54,-51,198,222,223,224,225,226,227,228,229,230,231,-51,-51,198,]),'corchete_abre':([19,25,26,30,37,39,44,67,92,138,166,218,221,],[27,27,-53,27,-52,-55,27,-54,27,27,27,27,27,]),'llave_abre':([21,27,36,40,42,43,46,47,63,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,133,135,155,162,165,188,189,190,193,196,198,222,223,224,225,226,227,228,229,230,231,232,233,234,236,244,249,251,264,269,273,282,287,],[28,47,47,47,47,47,47,47,109,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,191,47,47,47,47,47,47,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,239,240,241,47,47,47,47,274,279,274,47,288,]),'punto':([25,26,37,39,44,67,91,92,138,172,218,],[-50,-53,-52,-55,-51,-54,130,-50,-51,197,-51,]),'mas':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,138,166,167,168,169,170,172,183,194,195,211,212,213,218,220,221,238,243,253,258,260,285,],[-50,-53,-52,68,-55,-133,-117,-129,-130,-131,-132,68,-54,-113,-116,-114,-115,-120,-123,-125,68,68,-124,-126,-94,-95,-96,-97,-98,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-118,-121,-127,-51,-51,-42,-128,68,-122,199,68,68,-119,68,68,68,-51,68,-51,199,68,68,68,68,68,]),'menos':([25,26,27,36,37,38,39,40,42,43,44,45,46,47,52,53,54,55,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,137,138,155,165,166,167,168,169,170,172,183,188,189,190,193,194,195,196,198,211,212,213,218,220,221,222,223,224,225,226,227,228,229,230,231,236,238,243,244,249,251,253,258,260,282,285,],[-50,-53,40,40,-52,69,-55,40,40,40,-133,-117,40,40,-129,-130,-131,-132,69,-54,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-113,-116,-114,-115,-120,-123,-125,40,69,69,-124,-126,-94,-95,-96,-97,-98,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-118,40,-121,40,-127,-51,40,40,-51,-42,-128,69,-122,200,69,40,40,40,40,69,-119,40,-62,69,69,69,-51,69,-51,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,40,200,69,40,40,40,69,69,69,40,69,]),'asterisco':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,138,166,167,168,169,170,172,183,194,195,211,212,213,218,220,221,238,243,253,258,260,285,],[-50,-53,-52,70,-55,-133,-117,-129,-130,-131,-132,70,-54,-113,-116,-114,-115,-120,-123,-125,70,70,-124,-126,70,70,-96,-97,-98,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-118,-121,-127,-51,-51,-42,-128,70,-122,201,70,70,-119,70,70,70,-51,70,-51,201,70,70,70,70,70,]),'division':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,138,166,167,168,169,170,172,183,194,195,211,212,213,218,220,221,238,243,253,258,260,285,],[-50,-53,-52,71,-55,-133,-117,-129,-130,-131,-132,71,-54,-113,-116,-114,-115,-120,-123,-125,71,71,-124,-126,71,71,-96,-97,-98,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-118,-121,-127,-51,-51,-42,-128,71,-122,202,71,71,-119,71,71,71,-51,71,-51,202,71,71,71,71,71,]),'porcentaje':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,138,166,167,168,169,170,172,183,194,195,211,212,213,218,220,221,238,243,253,258,260,285,],[-50,-53,-52,72,-55,-133,-117,-129,-130,-131,-132,72,-54,-113,-116,-114,-115,-120,-123,-125,72,72,-124,-126,72,72,-96,-97,-98,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-118,-121,-127,-51,-51,-42,-128,72,-122,203,72,72,-119,72,72,72,-51,72,-51,203,72,72,72,72,72,]),'desplazamiento_izquierdo':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,138,166,167,168,169,170,172,183,194,195,211,212,213,218,220,221,238,243,253,258,260,285,],[-50,-53,-52,81,-55,-133,-117,-129,-130,-131,-132,81,-54,-113,-116,-114,-115,-120,-123,-125,81,81,-124,-126,-94,-95,-96,-97,-98,81,81,81,81,81,81,81,81,-107,-108,81,81,81,81,-118,-121,-127,-51,-51,-42,-128,81,-122,204,81,81,-119,81,81,81,-51,81,-51,204,81,81,81,81,81,]),'desplazamiento_derecho':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,138,166,167,168,169,170,172,183,194,195,211,212,213,218,220,221,238,243,253,258,260,285,],[-50,-53,-52,82,-55,-133,-117,-129,-130,-131,-132,82,-54,-113,-116,-114,-115,-120,-123,-125,82,82,-124,-126,-94,-95,-96,-97,-98,82,82,82,82,82,82,82,82,-107,-108,82,82,82,82,-118,-121,-127,-51,-51,-42,-128,82,-122,205,82,82,-119,82,82,82,-51,82,-51,205,82,82,82,82,82,]),'elevado':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,138,166,167,168,169,170,172,183,194,195,211,212,213,218,220,221,238,243,253,258,260,285,],[-50,-53,-52,85,-55,-133,-117,-129,-130,-131,-132,85,-54,-113,-116,-114,-115,-120,-123,-125,85,85,-124,-126,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,85,85,-107,-108,-109,85,-111,85,-118,-121,-127,-51,-51,-42,-128,85,-122,207,85,85,-119,85,85,85,-51,85,-51,207,85,85,85,85,85,]),'pleca':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,138,166,167,168,169,170,172,183,194,195,211,212,213,218,220,221,238,243,253,258,260,285,],[-50,-53,-52,84,-55,-133,-117,-129,-130,-131,-132,84,-54,-113,-116,-114,-115,-120,-123,-125,84,84,-124,-126,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,84,84,-107,-108,-109,-110,-111,84,-118,-121,-127,-51,-51,-42,-128,84,-122,208,84,84,-119,84,84,84,-51,84,-51,208,84,84,84,84,84,]),'corchete_cierra':([25,26,27,37,38,39,44,45,52,53,54,55,67,87,88,89,90,92,93,94,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,137,166,167,168,170,194,195,],[-50,-53,39,-52,67,-55,-133,-117,-129,-130,-131,-132,-54,-113,-116,-114,-115,-120,-123,-125,-124,-126,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-118,-121,-127,-51,-42,-128,-122,-112,-119,]),'equivale':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,166,167,168,169,170,183,194,195,211,212,213,220,243,253,258,260,285,],[-50,-53,-52,73,-55,-133,-117,-129,-130,-131,-132,73,-54,-113,-116,-114,-115,-120,-123,-125,73,73,-124,-126,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,73,73,-107,-108,73,73,73,73,-118,-121,-127,-51,-42,-128,73,-122,73,73,-119,73,73,73,73,73,73,73,73,73,]),'distinto':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,166,167,168,169,170,183,194,195,211,212,213,220,243,253,258,260,285,],[-50,-53,-52,74,-55,-133,-117,-129,-130,-131,-132,74,-54,-113,-116,-114,-115,-120,-123,-125,74,74,-124,-126,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,74,74,-107,-108,74,74,74,74,-118,-121,-127,-51,-42,-128,74,-122,74,74,-119,74,74,74,74,74,74,74,74,74,]),'mayor':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,166,167,168,169,170,183,194,195,211,212,213,220,243,253,258,260,285,],[-50,-53,-52,75,-55,-133,-117,-129,-130,-131,-132,75,-54,-113,-116,-114,-115,-120,-123,-125,75,75,-124,-126,-94,-95,-96,-97,-98,75,75,-101,-102,-103,-104,75,75,-107,-108,75,75,75,75,-118,-121,-127,-51,-42,-128,75,-122,75,75,-119,75,75,75,75,75,75,75,75,75,]),'menor':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,166,167,168,169,170,183,194,195,211,212,213,220,243,253,258,260,285,],[-50,-53,-52,76,-55,-133,-117,-129,-130,-131,-132,76,-54,-113,-116,-114,-115,-120,-123,-125,76,76,-124,-126,-94,-95,-96,-97,-98,76,76,-101,-102,-103,-104,76,76,-107,-108,76,76,76,76,-118,-121,-127,-51,-42,-128,76,-122,76,76,-119,76,76,76,76,76,76,76,76,76,]),'mayor_igual':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,166,167,168,169,170,183,194,195,211,212,213,220,243,253,258,260,285,],[-50,-53,-52,77,-55,-133,-117,-129,-130,-131,-132,77,-54,-113,-116,-114,-115,-120,-123,-125,77,77,-124,-126,-94,-95,-96,-97,-98,77,77,-101,-102,-103,-104,77,77,-107,-108,77,77,77,77,-118,-121,-127,-51,-42,-128,77,-122,77,77,-119,77,77,77,77,77,77,77,77,77,]),'menor_igual':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,166,167,168,169,170,183,194,195,211,212,213,220,243,253,258,260,285,],[-50,-53,-52,78,-55,-133,-117,-129,-130,-131,-132,78,-54,-113,-116,-114,-115,-120,-123,-125,78,78,-124,-126,-94,-95,-96,-97,-98,78,78,-101,-102,-103,-104,78,78,-107,-108,78,78,78,78,-118,-121,-127,-51,-42,-128,78,-122,78,78,-119,78,78,78,78,78,78,78,78,78,]),'and':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,166,167,168,169,170,183,194,195,211,212,213,220,243,253,258,260,285,],[-50,-53,-52,79,-55,-133,-117,-129,-130,-131,-132,79,-54,-113,-116,-114,-115,-120,-123,-125,79,79,-124,-126,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,79,-107,-108,-109,-110,-111,79,-118,-121,-127,-51,-42,-128,79,-122,79,79,-119,79,79,79,79,79,79,79,79,79,]),'or':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,166,167,168,169,170,183,194,195,211,212,213,220,243,253,258,260,285,],[-50,-53,-52,80,-55,-133,-117,-129,-130,-131,-132,80,-54,-113,-116,-114,-115,-120,-123,-125,80,80,-124,-126,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,80,-118,-121,-127,-51,-42,-128,80,-122,80,80,-119,80,80,80,80,80,80,80,80,80,]),'pregunta':([25,26,37,38,39,44,45,52,53,54,55,66,67,87,88,89,90,92,93,94,96,100,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,166,167,168,169,170,183,194,195,211,212,213,220,243,253,258,260,285,],[-50,-53,-52,86,-55,-133,-117,-129,-130,-131,-132,86,-54,-113,-116,-114,-115,-120,-123,-125,86,86,-124,-126,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,86,-118,-121,-127,-51,-42,-128,86,-122,86,-112,-119,86,86,86,86,86,86,86,86,86,]),'llave_cierra':([25,26,28,37,39,44,45,47,52,53,54,55,56,57,58,67,87,88,89,90,92,93,94,98,99,100,102,103,106,107,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,134,137,139,140,141,142,143,146,147,148,149,150,166,167,168,169,170,171,176,177,178,179,180,181,182,184,191,194,195,209,210,214,239,240,241,245,246,247,248,250,254,255,257,259,262,263,265,266,267,270,271,272,274,276,277,278,279,280,281,283,284,286,288,289,290,],[-50,-53,-11,-52,-55,-133,-117,-135,-129,-130,-131,-132,105,-10,-13,-54,-113,-116,-114,-115,-120,-123,-125,134,-134,-137,-124,-126,-12,-14,-23,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-118,-121,-127,175,-22,-25,-26,-27,-30,-31,-32,-33,-34,-51,-42,-128,-136,-122,-43,-24,-28,-29,-35,-36,-38,-39,-41,-23,-112,-119,-40,-44,235,-23,-83,-23,254,-88,-82,-85,259,-73,265,-84,-89,-74,-78,-81,-23,-23,-78,-75,-77,-23,-87,-86,-90,-23,-76,284,286,-80,-91,-23,290,-79,]),'dos_puntos':([25,26,37,39,44,45,52,53,54,55,67,87,88,89,90,92,93,94,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,134,137,138,166,167,168,170,194,195,256,258,],[-50,-53,-52,-55,-133,-117,-129,-130,-131,-132,-54,-113,-116,-114,-115,-120,-123,-125,-124,-126,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,165,-118,-121,-127,171,-51,-42,-128,-122,-112,-119,266,267,]),'exclamacion':([27,36,40,42,43,46,47,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,133,135,155,165,188,189,190,193,196,198,222,223,224,225,226,227,228,229,230,231,236,244,249,251,282,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,42,42,42,42,42,]),'virgulilla':([27,36,40,42,43,46,47,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,133,135,155,165,188,189,190,193,196,198,222,223,224,225,226,227,228,229,230,231,236,244,249,251,282,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,43,43,43,43,43,]),'_sizeof':([27,36,40,42,43,46,47,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,133,135,155,165,188,189,190,193,196,198,222,223,224,225,226,227,228,229,230,231,236,244,249,251,282,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,48,48,48,48,48,]),'aumento':([27,36,40,42,43,44,46,47,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,109,133,135,138,140,141,142,143,146,147,148,149,150,155,165,171,176,177,178,179,180,181,182,184,188,189,190,191,192,193,196,198,209,210,218,222,223,224,225,226,227,228,229,230,231,236,239,241,244,249,251,252,254,259,262,263,265,266,267,270,271,272,274,278,279,280,282,284,286,288,290,],[49,49,49,49,49,93,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,157,49,49,173,157,-25,-26,-27,-30,-31,-32,-33,-34,49,49,-43,-24,-28,-29,-35,-36,-38,-39,-41,49,49,49,157,157,49,49,-62,-40,-44,173,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,49,157,157,49,49,49,157,-73,-89,-74,-78,-81,157,157,-78,-75,-77,157,-90,157,-76,49,-80,-91,157,-79,]),'decremento':([27,36,40,42,43,44,46,47,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,109,133,135,138,140,141,142,143,146,147,148,149,150,155,165,171,176,177,178,179,180,181,182,184,188,189,190,191,192,193,196,198,209,210,218,222,223,224,225,226,227,228,229,230,231,236,239,241,244,249,251,252,254,259,262,263,265,266,267,270,271,272,274,278,279,280,282,284,286,288,290,],[50,50,50,50,50,94,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,158,50,50,174,158,-25,-26,-27,-30,-31,-32,-33,-34,50,50,-43,-24,-28,-29,-35,-36,-38,-39,-41,50,50,50,158,158,50,50,-62,-40,-44,174,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,50,158,158,50,50,50,158,-73,-89,-74,-78,-81,158,158,-78,-75,-77,158,-90,158,-76,50,-80,-91,158,-79,]),'_scanf':([27,36,40,42,43,46,47,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,133,135,155,165,188,189,190,193,196,198,222,223,224,225,226,227,228,229,230,231,236,244,249,251,282,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,51,51,51,51,51,]),'caracter':([27,36,40,42,43,46,47,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,133,135,155,165,188,189,190,193,196,198,222,223,224,225,226,227,228,229,230,231,236,244,249,251,282,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,52,52,52,52,52,]),'cadena':([27,36,40,42,43,46,47,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,133,135,155,165,188,189,190,193,196,198,222,223,224,225,226,227,228,229,230,231,236,244,249,251,282,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,53,53,53,53,53,]),'entero':([27,36,40,42,43,46,47,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,133,135,155,165,188,189,190,193,196,198,222,223,224,225,226,227,228,229,230,231,236,244,249,251,282,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,54,54,54,54,54,]),'decimal':([27,36,40,42,43,46,47,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,133,135,155,165,188,189,190,193,196,198,222,223,224,225,226,227,228,229,230,231,236,244,249,251,282,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,55,55,55,55,55,]),'_continue':([109,140,141,142,143,146,147,148,149,150,171,176,177,178,179,180,181,182,184,191,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[153,153,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,153,-40,-44,153,153,-73,-89,-74,-78,-81,153,153,-78,-75,-77,153,-90,153,-76,-80,-91,153,-79,]),'_break':([109,140,141,142,143,146,147,148,149,150,171,176,177,178,179,180,181,182,184,191,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[154,154,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,154,-40,-44,154,154,-73,-89,-74,-78,-81,154,154,-78,-75,-77,154,-90,154,-76,-80,-91,154,-79,]),'_return':([109,140,141,142,143,146,147,148,149,150,171,176,177,178,179,180,181,182,184,191,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[155,155,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,155,-40,-44,155,155,-73,-89,-74,-78,-81,155,155,-78,-75,-77,155,-90,155,-76,-80,-91,155,-79,]),'_goto':([109,140,141,142,143,146,147,148,149,150,171,176,177,178,179,180,181,182,184,191,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[156,156,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,156,-40,-44,156,156,-73,-89,-74,-78,-81,156,156,-78,-75,-77,156,-90,156,-76,-80,-91,156,-79,]),'_if':([109,140,141,142,143,146,147,148,149,150,171,176,177,178,179,180,181,182,184,191,209,210,239,241,254,259,262,263,264,265,266,267,270,271,272,273,274,278,279,280,284,286,288,290,],[159,159,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,159,-40,-44,159,159,-73,-89,-74,-78,275,-81,159,159,-78,-75,-77,275,159,-90,159,-76,-80,-91,159,-79,]),'_switch':([109,140,141,142,143,146,147,148,149,150,171,176,177,178,179,180,181,182,184,191,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[160,160,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,160,-40,-44,160,160,-73,-89,-74,-78,-81,160,160,-78,-75,-77,160,-90,160,-76,-80,-91,160,-79,]),'_while':([109,140,141,142,143,146,147,148,149,150,171,176,177,178,179,180,181,182,184,191,209,210,235,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[161,161,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,161,-40,-44,242,161,161,-73,-89,-74,-78,-81,161,161,-78,-75,-77,161,-90,161,-76,-80,-91,161,-79,]),'_do':([109,140,141,142,143,146,147,148,149,150,171,176,177,178,179,180,181,182,184,191,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[162,162,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,162,-40,-44,162,162,-73,-89,-74,-78,-81,162,162,-78,-75,-77,162,-90,162,-76,-80,-91,162,-79,]),'_for':([109,140,141,142,143,146,147,148,149,150,171,176,177,178,179,180,181,182,184,191,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[163,163,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,163,-40,-44,163,163,-73,-89,-74,-78,-81,163,163,-78,-75,-77,163,-90,163,-76,-80,-91,163,-79,]),'_printf':([109,140,141,142,143,146,147,148,149,150,171,176,177,178,179,180,181,182,184,191,209,210,239,241,254,259,262,263,265,266,267,270,271,272,274,278,279,280,284,286,288,290,],[164,164,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,164,-40,-44,164,164,-73,-89,-74,-78,-81,164,164,-78,-75,-77,164,-90,164,-76,-80,-91,164,-79,]),'_case':([140,141,142,143,146,147,148,149,150,171,176,177,178,179,180,181,182,184,209,210,240,247,248,254,257,259,262,263,265,267,270,271,272,277,278,280,284,286,290,],[-22,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,-40,-44,249,249,-85,-73,-84,-89,-74,-78,-81,-23,-78,-75,-77,-86,-90,-76,-80,-91,-79,]),'_default':([140,141,142,143,146,147,148,149,150,171,176,177,178,179,180,181,182,184,209,210,240,246,247,248,254,257,259,262,263,265,267,270,271,272,277,278,280,284,286,290,],[-22,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,-40,-44,-83,256,-82,-85,-73,-84,-89,-74,-78,-81,-23,-78,-75,-77,-86,-90,-76,-80,-91,-79,]),'_else':([254,263,270,290,],[264,273,273,-79,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'CUERPO_GLOBAL':([0,],[2,]),'LISTA_GLOBAL':([0,],[3,]),'INSTRUCCION_GLOBAL':([0,3,],[4,15,]),'DECLARACION':([0,3,28,57,109,140,191,192,239,241,266,267,274,279,288,],[5,5,59,59,144,144,144,217,144,144,144,144,144,144,144,]),'ESTRUCTURA':([0,3,],[6,6,]),'FUNCION':([0,3,],[7,7,]),'TIPO':([0,3,23,28,46,57,64,101,109,140,191,192,239,241,266,267,274,279,288,],[8,8,31,60,97,60,31,136,60,60,60,60,60,60,60,60,60,60,60,]),'LISTA_DECLARACION':([8,60,],[18,18,]),'DECLARACION_FINAL':([8,22,60,],[20,29,20,]),'INDICES':([19,30,44,138,166,218,221,],[24,24,91,172,195,172,238,]),'ACCESOS':([19,30,44,138,166,218,221,],[25,25,92,25,25,25,25,]),'ACCESO':([19,25,30,44,92,138,166,218,221,],[26,37,26,26,37,26,26,26,26,]),'PARAMETROS':([23,],[32,]),'LISTA_PARAMETROS':([23,],[33,]),'PARAMETRO':([23,64,],[34,110,]),'EXPRESION':([27,36,40,42,43,46,47,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,133,135,155,165,188,189,190,193,196,236,244,249,251,282,],[38,66,87,89,90,96,100,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,100,168,169,183,194,211,212,213,100,220,243,253,258,260,285,]),'METODO':([27,36,40,42,43,46,47,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,95,109,133,135,140,155,165,188,189,190,191,193,196,236,239,241,244,249,251,266,267,274,279,282,288,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,152,45,45,152,45,45,45,45,45,152,45,45,45,152,152,45,45,45,152,152,152,152,45,152,]),'CARACTERISTICAS':([28,],[56,]),'LISTA_CARACTERISTICAS':([28,],[57,]),'CARACTERISTICA':([28,57,],[58,106,]),'EXPRESIONES':([47,95,],[98,131,]),'LISTA_EXPRESIONES':([47,95,193,],[99,99,219,]),'CUERPO_LOCAL':([109,191,239,241,266,267,274,279,288,],[139,214,245,250,276,277,281,283,289,]),'LISTA_LOCAL':([109,191,239,241,266,267,274,279,288,],[140,140,140,140,140,140,140,140,140,]),'INSTRUCCION_LOCAL':([109,140,191,239,241,266,267,274,279,288,],[141,176,141,141,141,141,141,141,141,141,]),'ETIQUETA':([109,140,191,239,241,266,267,274,279,288,],[142,142,142,142,142,142,142,142,142,142,]),'SALTO':([109,140,191,239,241,266,267,274,279,288,],[143,143,143,143,143,143,143,143,143,143,]),'ASIGNACION':([109,140,191,192,239,241,252,266,267,274,279,288,],[145,145,145,216,145,145,261,145,145,145,145,145,]),'IF':([109,140,191,239,241,266,267,274,279,288,],[146,146,146,146,146,146,146,146,146,146,]),'SWITCH':([109,140,191,239,241,266,267,274,279,288,],[147,147,147,147,147,147,147,147,147,147,]),'WHILE':([109,140,191,239,241,266,267,274,279,288,],[148,148,148,148,148,148,148,148,148,148,]),'DO':([109,140,191,239,241,266,267,274,279,288,],[149,149,149,149,149,149,149,149,149,149,]),'FOR':([109,140,191,239,241,266,267,274,279,288,],[150,150,150,150,150,150,150,150,150,150,]),'PRINT':([109,140,191,239,241,266,267,274,279,288,],[151,151,151,151,151,151,151,151,151,151,]),'COMPUESTO':([172,238,],[196,244,]),'INICIO_FOR':([192,],[215,]),'CASES':([240,],[246,]),'LISTA_CASE':([240,],[247,]),'CASE':([240,247,],[248,257,]),'DEFAULT_CASE':([246,],[255,]),'ELSE':([254,263,270,],[262,272,272,]),'ELSEIF':([254,263,270,],[263,270,270,]),'IF_FINAL':([263,270,],[271,280,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> CUERPO_GLOBAL','INIT',1,'p_init','ascendente.py',183),
  ('CUERPO_GLOBAL -> LISTA_GLOBAL','CUERPO_GLOBAL',1,'p_cuerpo_global','ascendente.py',190),
  ('CUERPO_GLOBAL -> <empty>','CUERPO_GLOBAL',0,'p_cuerpo_global_vacio','ascendente.py',197),
  ('LISTA_GLOBAL -> LISTA_GLOBAL INSTRUCCION_GLOBAL','LISTA_GLOBAL',2,'p_lista_global_lista','ascendente.py',204),
  ('LISTA_GLOBAL -> INSTRUCCION_GLOBAL','LISTA_GLOBAL',1,'p_lista_global_instruccion','ascendente.py',212),
  ('INSTRUCCION_GLOBAL -> DECLARACION punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',219),
  ('INSTRUCCION_GLOBAL -> ESTRUCTURA punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',220),
  ('INSTRUCCION_GLOBAL -> FUNCION','INSTRUCCION_GLOBAL',1,'p_instruccion_global','ascendente.py',221),
  ('ESTRUCTURA -> _struct identificador llave_abre CARACTERISTICAS llave_cierra','ESTRUCTURA',5,'p_estructura','ascendente.py',228),
  ('CARACTERISTICAS -> LISTA_CARACTERISTICAS','CARACTERISTICAS',1,'p_caracteristicas','ascendente.py',235),
  ('CARACTERISTICAS -> <empty>','CARACTERISTICAS',0,'p_caracteristicas_vacio','ascendente.py',242),
  ('LISTA_CARACTERISTICAS -> LISTA_CARACTERISTICAS CARACTERISTICA','LISTA_CARACTERISTICAS',2,'p_lista_caracteristicas_lista','ascendente.py',249),
  ('LISTA_CARACTERISTICAS -> CARACTERISTICA','LISTA_CARACTERISTICAS',1,'p_lista_caracteristicas_caracteristica','ascendente.py',257),
  ('CARACTERISTICA -> DECLARACION punto_coma','CARACTERISTICA',2,'p_caracteristica','ascendente.py',264),
  ('FUNCION -> TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FUNCION',8,'p_funcion','ascendente.py',271),
  ('PARAMETROS -> LISTA_PARAMETROS','PARAMETROS',1,'p_parametros','ascendente.py',278),
  ('PARAMETROS -> <empty>','PARAMETROS',0,'p_parametros_vacio','ascendente.py',285),
  ('LISTA_PARAMETROS -> LISTA_PARAMETROS coma PARAMETRO','LISTA_PARAMETROS',3,'p_lista_parametros_lista','ascendente.py',292),
  ('LISTA_PARAMETROS -> PARAMETRO','LISTA_PARAMETROS',1,'p_lista_parametros_parametro','ascendente.py',300),
  ('PARAMETRO -> TIPO identificador','PARAMETRO',2,'p_parametro','ascendente.py',307),
  ('PARAMETRO -> TIPO et identificador','PARAMETRO',3,'p_parametro_apuntador','ascendente.py',314),
  ('CUERPO_LOCAL -> LISTA_LOCAL','CUERPO_LOCAL',1,'p_cuerpo_local','ascendente.py',321),
  ('CUERPO_LOCAL -> <empty>','CUERPO_LOCAL',0,'p_cuerpo_local_vacio','ascendente.py',328),
  ('LISTA_LOCAL -> LISTA_LOCAL INSTRUCCION_LOCAL','LISTA_LOCAL',2,'p_lista_local','ascendente.py',335),
  ('LISTA_LOCAL -> INSTRUCCION_LOCAL','LISTA_LOCAL',1,'p_lista_local_instruccion','ascendente.py',343),
  ('INSTRUCCION_LOCAL -> ETIQUETA','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',350),
  ('INSTRUCCION_LOCAL -> SALTO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',351),
  ('INSTRUCCION_LOCAL -> DECLARACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',352),
  ('INSTRUCCION_LOCAL -> ASIGNACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',353),
  ('INSTRUCCION_LOCAL -> IF','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',354),
  ('INSTRUCCION_LOCAL -> SWITCH','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',355),
  ('INSTRUCCION_LOCAL -> WHILE','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',356),
  ('INSTRUCCION_LOCAL -> DO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',357),
  ('INSTRUCCION_LOCAL -> FOR','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',358),
  ('INSTRUCCION_LOCAL -> PRINT punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',359),
  ('INSTRUCCION_LOCAL -> METODO punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',360),
  ('PRINT -> _printf parentesis_abre LISTA_EXPRESIONES parentesis_cierra','PRINT',4,'p_instruccion_local_print','ascendente.py',368),
  ('INSTRUCCION_LOCAL -> _continue punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local_continue','ascendente.py',375),
  ('INSTRUCCION_LOCAL -> _break punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local_break','ascendente.py',382),
  ('INSTRUCCION_LOCAL -> _return EXPRESION punto_coma','INSTRUCCION_LOCAL',3,'p_instruccion_local_return','ascendente.py',389),
  ('INSTRUCCION_LOCAL -> _return punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local_return_vacio','ascendente.py',396),
  ('METODO -> identificador parentesis_abre EXPRESIONES parentesis_cierra','METODO',4,'p_metodo','ascendente.py',403),
  ('ETIQUETA -> identificador dos_puntos','ETIQUETA',2,'p_etiqueta','ascendente.py',410),
  ('SALTO -> _goto identificador punto_coma','SALTO',3,'p_salto','ascendente.py',417),
  ('DECLARACION -> TIPO LISTA_DECLARACION','DECLARACION',2,'p_declaracion','ascendente.py',424),
  ('LISTA_DECLARACION -> LISTA_DECLARACION coma DECLARACION_FINAL','LISTA_DECLARACION',3,'p_lista_declaracion_lista','ascendente.py',431),
  ('LISTA_DECLARACION -> DECLARACION_FINAL','LISTA_DECLARACION',1,'p_lista_declaracion_declaracion','ascendente.py',439),
  ('DECLARACION_FINAL -> identificador INDICES','DECLARACION_FINAL',2,'p_declaracion_final','ascendente.py',446),
  ('DECLARACION_FINAL -> identificador INDICES igual EXPRESION','DECLARACION_FINAL',4,'p_declaracion_final_expresion','ascendente.py',453),
  ('INDICES -> ACCESOS','INDICES',1,'p_indices','ascendente.py',460),
  ('INDICES -> <empty>','INDICES',0,'p_indices_vacio','ascendente.py',467),
  ('ACCESOS -> ACCESOS ACCESO','ACCESOS',2,'p_accesos_lista','ascendente.py',474),
  ('ACCESOS -> ACCESO','ACCESOS',1,'p_accesos_acceso','ascendente.py',482),
  ('ACCESO -> corchete_abre EXPRESION corchete_cierra','ACCESO',3,'p_acceso','ascendente.py',489),
  ('ACCESO -> corchete_abre corchete_cierra','ACCESO',2,'p_acceso_vacio','ascendente.py',496),
  ('ASIGNACION -> identificador INDICES COMPUESTO EXPRESION','ASIGNACION',4,'p_asignacion_normal','ascendente.py',503),
  ('ASIGNACION -> identificador INDICES punto identificador INDICES COMPUESTO EXPRESION','ASIGNACION',7,'p_asignacion_estructura','ascendente.py',511),
  ('ASIGNACION -> identificador aumento','ASIGNACION',2,'p_asignacion_aumento_post','ascendente.py',519),
  ('ASIGNACION -> aumento identificador','ASIGNACION',2,'p_asignacion_aumento_pre','ascendente.py',526),
  ('ASIGNACION -> identificador decremento','ASIGNACION',2,'p_asignacion_decremento_post','ascendente.py',533),
  ('ASIGNACION -> decremento identificador','ASIGNACION',2,'p_asignacion_decremento_pre','ascendente.py',540),
  ('COMPUESTO -> igual','COMPUESTO',1,'p_compuesto','ascendente.py',547),
  ('COMPUESTO -> mas igual','COMPUESTO',2,'p_compuesto','ascendente.py',548),
  ('COMPUESTO -> menos igual','COMPUESTO',2,'p_compuesto','ascendente.py',549),
  ('COMPUESTO -> asterisco igual','COMPUESTO',2,'p_compuesto','ascendente.py',550),
  ('COMPUESTO -> division igual','COMPUESTO',2,'p_compuesto','ascendente.py',551),
  ('COMPUESTO -> porcentaje igual','COMPUESTO',2,'p_compuesto','ascendente.py',552),
  ('COMPUESTO -> desplazamiento_izquierdo igual','COMPUESTO',2,'p_compuesto','ascendente.py',553),
  ('COMPUESTO -> desplazamiento_derecho igual','COMPUESTO',2,'p_compuesto','ascendente.py',554),
  ('COMPUESTO -> et igual','COMPUESTO',2,'p_compuesto','ascendente.py',555),
  ('COMPUESTO -> elevado igual','COMPUESTO',2,'p_compuesto','ascendente.py',556),
  ('COMPUESTO -> pleca igual','COMPUESTO',2,'p_compuesto','ascendente.py',557),
  ('IF -> _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','IF',7,'p_if','ascendente.py',564),
  ('IF -> _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSE','IF',8,'p_if_else','ascendente.py',571),
  ('IF -> _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIF IF_FINAL','IF',9,'p_if_elseif','ascendente.py',578),
  ('IF_FINAL -> ELSEIF IF_FINAL','IF_FINAL',2,'p_if_final_elseif','ascendente.py',591),
  ('IF_FINAL -> ELSE','IF_FINAL',1,'p_if_final_else','ascendente.py',598),
  ('IF_FINAL -> <empty>','IF_FINAL',0,'p_if_final_vacio','ascendente.py',605),
  ('ELSEIF -> _else _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','ELSEIF',8,'p_elseif','ascendente.py',612),
  ('ELSE -> _else llave_abre CUERPO_LOCAL llave_cierra','ELSE',4,'p_else','ascendente.py',619),
  ('SWITCH -> _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra','SWITCH',8,'p_switch','ascendente.py',626),
  ('CASES -> LISTA_CASE','CASES',1,'p_cases','ascendente.py',633),
  ('CASES -> <empty>','CASES',0,'p_cases_vacio','ascendente.py',640),
  ('LISTA_CASE -> LISTA_CASE CASE','LISTA_CASE',2,'p_lista_case_lista','ascendente.py',647),
  ('LISTA_CASE -> CASE','LISTA_CASE',1,'p_lista_case_case','ascendente.py',655),
  ('CASE -> _case EXPRESION dos_puntos CUERPO_LOCAL','CASE',4,'p_case','ascendente.py',662),
  ('DEFAULT_CASE -> _default dos_puntos CUERPO_LOCAL','DEFAULT_CASE',3,'p_default_case','ascendente.py',669),
  ('DEFAULT_CASE -> <empty>','DEFAULT_CASE',0,'p_default_case_vacio','ascendente.py',676),
  ('WHILE -> _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','WHILE',7,'p_while','ascendente.py',683),
  ('DO -> _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma','DO',9,'p_do','ascendente.py',690),
  ('FOR -> _for parentesis_abre INICIO_FOR punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FOR',11,'p_for','ascendente.py',697),
  ('INICIO_FOR -> DECLARACION','INICIO_FOR',1,'p_','ascendente.py',704),
  ('INICIO_FOR -> ASIGNACION','INICIO_FOR',1,'p_','ascendente.py',705),
  ('EXPRESION -> EXPRESION mas EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',712),
  ('EXPRESION -> EXPRESION menos EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',713),
  ('EXPRESION -> EXPRESION asterisco EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',714),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',715),
  ('EXPRESION -> EXPRESION porcentaje EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',716),
  ('EXPRESION -> EXPRESION equivale EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',723),
  ('EXPRESION -> EXPRESION distinto EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',724),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',725),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',726),
  ('EXPRESION -> EXPRESION mayor_igual EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',727),
  ('EXPRESION -> EXPRESION menor_igual EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',728),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_expresion_logica','ascendente.py',735),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_expresion_logica','ascendente.py',736),
  ('EXPRESION -> EXPRESION desplazamiento_izquierdo EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',743),
  ('EXPRESION -> EXPRESION desplazamiento_derecho EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',744),
  ('EXPRESION -> EXPRESION et EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',745),
  ('EXPRESION -> EXPRESION pleca EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',746),
  ('EXPRESION -> EXPRESION elevado EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',747),
  ('EXPRESION -> EXPRESION pregunta EXPRESION dos_puntos EXPRESION','EXPRESION',5,'p_expresion_ternaria','ascendente.py',754),
  ('EXPRESION -> menos EXPRESION','EXPRESION',2,'p_expresion_unaria','ascendente.py',761),
  ('EXPRESION -> exclamacion EXPRESION','EXPRESION',2,'p_expresion_unaria','ascendente.py',762),
  ('EXPRESION -> virgulilla EXPRESION','EXPRESION',2,'p_expresion_unaria','ascendente.py',763),
  ('EXPRESION -> et identificador','EXPRESION',2,'p_expresion_referencia','ascendente.py',770),
  ('EXPRESION -> METODO','EXPRESION',1,'p_expresion_metodo','ascendente.py',777),
  ('EXPRESION -> parentesis_abre EXPRESION parentesis_cierra','EXPRESION',3,'p_expresion_parentesis','ascendente.py',784),
  ('EXPRESION -> identificador INDICES punto identificador INDICES','EXPRESION',5,'p_expresion_estructura','ascendente.py',791),
  ('EXPRESION -> identificador ACCESOS','EXPRESION',2,'p_expresion_identificador_arreglo','ascendente.py',798),
  ('EXPRESION -> llave_abre EXPRESIONES llave_cierra','EXPRESION',3,'p_expresion_expresiones','ascendente.py',805),
  ('EXPRESION -> _sizeof parentesis_abre TIPO parentesis_cierra','EXPRESION',4,'p_expresion_sizeof','ascendente.py',812),
  ('EXPRESION -> identificador aumento','EXPRESION',2,'p_expresion_aumento_post','ascendente.py',819),
  ('EXPRESION -> aumento identificador','EXPRESION',2,'p_expresion_aumento_pre','ascendente.py',826),
  ('EXPRESION -> identificador decremento','EXPRESION',2,'p_expresion_decremento_post','ascendente.py',833),
  ('EXPRESION -> decremento identificador','EXPRESION',2,'p_expresion_decremento_pre','ascendente.py',840),
  ('EXPRESION -> _scanf parentesis_abre parentesis_cierra','EXPRESION',3,'p_expresion_scanf','ascendente.py',847),
  ('EXPRESION -> parentesis_abre TIPO parentesis_cierra EXPRESION','EXPRESION',4,'p_expresion_casteo','ascendente.py',854),
  ('EXPRESION -> caracter','EXPRESION',1,'p_expresion_caracter','ascendente.py',860),
  ('EXPRESION -> cadena','EXPRESION',1,'p_expresion_cadena','ascendente.py',865),
  ('EXPRESION -> entero','EXPRESION',1,'p_expresion_entero','ascendente.py',870),
  ('EXPRESION -> decimal','EXPRESION',1,'p_expresion_decimal','ascendente.py',875),
  ('EXPRESION -> identificador','EXPRESION',1,'p_expresion_identificador','ascendente.py',880),
  ('EXPRESIONES -> LISTA_EXPRESIONES','EXPRESIONES',1,'p_expresiones','ascendente.py',886),
  ('EXPRESIONES -> <empty>','EXPRESIONES',0,'p_expresiones_vacio','ascendente.py',893),
  ('LISTA_EXPRESIONES -> LISTA_EXPRESIONES coma EXPRESION','LISTA_EXPRESIONES',3,'p_lista_expresiones_lista','ascendente.py',900),
  ('LISTA_EXPRESIONES -> EXPRESION','LISTA_EXPRESIONES',1,'p_lista_expresiones_expresion','ascendente.py',908),
  ('TIPO -> _int','TIPO',1,'p_tipo','ascendente.py',915),
  ('TIPO -> _char','TIPO',1,'p_tipo','ascendente.py',916),
  ('TIPO -> _double','TIPO',1,'p_tipo','ascendente.py',917),
  ('TIPO -> _float','TIPO',1,'p_tipo','ascendente.py',918),
  ('TIPO -> _void','TIPO',1,'p_tipo','ascendente.py',919),
  ('TIPO -> _struct identificador','TIPO',2,'p_tipo_struct','ascendente.py',926),
]
