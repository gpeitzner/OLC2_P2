
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftcomarightNIVEL14rightNIVEL13leftNIVEL12leftNIVEL11leftNIVEL10leftNIVEL9leftNIVEL8leftNIVEL7leftNIVEL6leftNIVEL5leftNIVEL4leftNIVEL3rightNIVEL2leftNIVEL1_break _case _char _continue _default _do _double _else _elseif _float _for _goto _if _int _malloc _return _sizeof _struct _switch _void _while and asterisco aumento cadena caracter coma corchete_abre corchete_cierra decimal decremento desplazamiento_derecho desplazamiento_izquierdo distinto division dos_puntos elevado entero equivale et exclamacion identificador igual llave_abre llave_cierra mas mayor mayor_igual menor menor_igual menos or parentesis_abre parentesis_cierra pleca porcentaje pregunta punto punto_coma virgulilla\n    INIT   :   CUERPO_GLOBAL\n    \n    CUERPO_GLOBAL   :   LISTA_GLOBAL\n                    |   \n    \n    LISTA_GLOBAL    :   LISTA_GLOBAL INSTRUCCION_GLOBAL\n                    |   INSTRUCCION_GLOBAL\n    \n    INSTRUCCION_GLOBAL  :   DECLARACION punto_coma\n                        |   ESTRUCTURA punto_coma\n                        |   FUNCION\n    \n    ESTRUCTURA  :   _struct identificador llave_abre CARACTERISTICAS llave_cierra\n    \n    CARACTERISTICAS :   LISTA_CARACTERISTICAS\n                    |   \n    \n    LISTA_CARACTERISTICAS   :   LISTA_CARACTERISTICAS punto_coma CARACTERISTICA\n                            |   CARACTERISTICA\n    \n    CARACTERISTICA  :   TIPO identificador\n    \n    FUNCION    :   TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    PARAMETROS  :   LISTA_PARAMETROS\n                |\n    \n    LISTA_PARAMETROS    :   LISTA_PARAMETROS coma PARAMETRO\n                        |   PARAMETRO\n    \n    PARAMETRO   :   TIPO identificador\n                |   TIPO et identificador\n    \n    CUERPO_LOCAL    :   LISTA_LOCAL\n                    |\n    \n    LISTA_LOCAL :   LISTA_LOCAL INSTRUCCION_LOCAL\n                |   INSTRUCCION_LOCAL\n    \n    INSTRUCCION_LOCAL   :   ETIQUETA\n                        |   SALTO\n                        |   DECLARACION punto_coma\n                        |   ASIGNACION punto_coma\n                        |   IF\n                        |   SWITCH\n                        |   WHILE\n                        |   DO\n                        |   FOR\n                        |   _continue punto_coma\n                        |   _break punto_coma\n                        |   _return EXPRESION punto_coma\n    \n    ETIQUETA    :   identificador dos_puntos\n    \n    SALTO   :   _goto identificador punto_coma\n    \n    DECLARACION :   TIPO LISTA_DECLARACION\n    \n    LISTA_DECLARACION   :   LISTA_DECLARACION coma DECLARACION_FINAL\n                        |   DECLARACION_FINAL\n    \n    DECLARACION_FINAL   :   identificador INDICES igual EXPRESION\n                        |   identificador INDICES\n    \n    INDICES :   ACCESOS\n            |\n    \n    ACCESOS :   ACCESOS ACCESO\n            |   ACCESO\n    \n    ACCESO  :   corchete_abre EXPRESION corchete_cierra %prec NIVEL1\n            |   corchete_abre corchete_cierra %prec NIVEL1\n    \n    ASIGNACION  :   identificador INDICES COMPUESTO EXPRESION \n                |   identificador INDICES punto identificador COMPUESTO EXPRESION \n                |   identificador aumento %prec NIVEL2\n                |   identificador decremento %prec NIVEL2\n    \n    COMPUESTO   :   igual %prec NIVEL14\n                |   mas igual %prec NIVEL14\n                |   asterisco igual %prec NIVEL14\n                |   division igual %prec NIVEL14\n                |   porcentaje igual %prec NIVEL14\n                |   menor menor igual %prec NIVEL14\n                |   mayor mayor igual %prec NIVEL14\n                |   et igual %prec NIVEL14\n                |   elevado igual %prec NIVEL14\n                |   pleca igual %prec NIVEL14\n    \n    IF  :   _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE\n    \n    ELSEIFS     :   LISTA_ELSEIF\n                |   \n    \n    LISTA_ELSEIF    :   LISTA_ELSEIF ELSEIF\n                    |   ELSEIF\n    \n    ELSEIF  :   _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    ELSE    :   _else llave_abre CUERPO_LOCAL llave_cierra\n    \n    SWITCH  :   _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra\n    \n    CASES   :   LISTA_CASE\n            |\n    \n    LISTA_CASE  :   LISTA_CASE CASE\n                |   CASE\n    \n    CASE    :   _case EXPRESION dos_puntos CUERPO_LOCAL\n    \n    DEFAULT_CASE    :   _default dos_puntos CUERPO_LOCAL\n    \n    WHILE   :   _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    DO  :   _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma\n    \n    FOR :   _for parentesis_abre DECLARACION punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    EXPRESION   :   EXPRESION mas EXPRESION %prec NIVEL4\n                |   EXPRESION menos EXPRESION %prec NIVEL4\n                |   EXPRESION asterisco EXPRESION %prec NIVEL3\n                |   EXPRESION division EXPRESION %prec NIVEL3\n                |   EXPRESION porcentaje EXPRESION %prec NIVEL3\n                |   EXPRESION equivale EXPRESION %prec NIVEL7\n                |   EXPRESION distinto EXPRESION %prec NIVEL7\n                |   EXPRESION mayor EXPRESION %prec NIVEL6\n                |   EXPRESION menor EXPRESION %prec NIVEL6\n                |   EXPRESION mayor_igual EXPRESION %prec NIVEL6\n                |   EXPRESION menor_igual EXPRESION %prec NIVEL6\n                |   EXPRESION and EXPRESION %prec NIVEL11\n                |   EXPRESION or EXPRESION %prec NIVEL12\n                |   EXPRESION desplazamiento_izquierdo EXPRESION %prec NIVEL5\n                |   EXPRESION desplazamiento_derecho mayor EXPRESION %prec NIVEL5\n                |   EXPRESION et EXPRESION %prec NIVEL8\n                |   EXPRESION pleca EXPRESION %prec NIVEL10\n                |   EXPRESION elevado EXPRESION %prec NIVEL9\n                |   EXPRESION pregunta EXPRESION dos_puntos EXPRESION %prec NIVEL13\n                |   menos EXPRESION %prec NIVEL2\n                |   exclamacion EXPRESION %prec NIVEL2\n                |   virgulilla EXPRESION %prec NIVEL2\n                |   parentesis_abre EXPRESION parentesis_cierra %prec NIVEL1\n                |   parentesis_abre TIPO asterisco parentesis_cierra _malloc parentesis_abre _sizeof parentesis_abre TIPO parentesis_cierra parentesis_cierra\n                |   identificador parentesis_abre EXPRESIONES parentesis_cierra\n                |   identificador punto identificador\n                |   identificador ACCESOS\n                |   et identificador %prec NIVEL2\n                |   llave_abre EXPRESIONES llave_cierra\n                |   caracter\n                |   cadena\n                |   entero\n                |   decimal\n                |   identificador\n    \n    EXPRESIONES :   LISTA_EXPRESIONES\n                |\n    \n    LISTA_EXPRESIONES   :   LISTA_EXPRESIONES coma EXPRESION\n                        |   EXPRESION\n    \n    TIPO    :   _int\n            |   _char\n            |   _double\n            |   _float\n            |   _struct identificador\n            |   _void\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,7,15,16,17,157,],[-3,0,-1,-2,-5,-8,-4,-6,-7,-15,]),'_struct':([0,3,4,7,15,16,17,23,28,44,58,94,97,128,129,130,131,134,135,136,137,138,153,157,158,159,160,161,162,168,169,184,185,212,214,217,233,242,243,244,248,254,255,256,261,262,263,],[9,9,-5,-8,-4,-6,-7,35,35,35,35,35,35,35,-25,-26,-27,-30,-31,-32,-33,-34,-38,-15,-24,-28,-29,-35,-36,35,35,-37,-39,35,35,35,-79,-72,35,35,-65,-80,35,35,-81,-71,35,]),'_int':([0,3,4,7,15,16,17,23,28,44,58,94,97,128,129,130,131,134,135,136,137,138,153,157,158,159,160,161,162,168,169,184,185,212,214,217,233,242,243,244,248,254,255,256,261,262,263,],[10,10,-5,-8,-4,-6,-7,10,10,10,10,10,10,10,-25,-26,-27,-30,-31,-32,-33,-34,-38,-15,-24,-28,-29,-35,-36,10,10,-37,-39,10,10,10,-79,-72,10,10,-65,-80,10,10,-81,-71,10,]),'_char':([0,3,4,7,15,16,17,23,28,44,58,94,97,128,129,130,131,134,135,136,137,138,153,157,158,159,160,161,162,168,169,184,185,212,214,217,233,242,243,244,248,254,255,256,261,262,263,],[11,11,-5,-8,-4,-6,-7,11,11,11,11,11,11,11,-25,-26,-27,-30,-31,-32,-33,-34,-38,-15,-24,-28,-29,-35,-36,11,11,-37,-39,11,11,11,-79,-72,11,11,-65,-80,11,11,-81,-71,11,]),'_double':([0,3,4,7,15,16,17,23,28,44,58,94,97,128,129,130,131,134,135,136,137,138,153,157,158,159,160,161,162,168,169,184,185,212,214,217,233,242,243,244,248,254,255,256,261,262,263,],[12,12,-5,-8,-4,-6,-7,12,12,12,12,12,12,12,-25,-26,-27,-30,-31,-32,-33,-34,-38,-15,-24,-28,-29,-35,-36,12,12,-37,-39,12,12,12,-79,-72,12,12,-65,-80,12,12,-81,-71,12,]),'_float':([0,3,4,7,15,16,17,23,28,44,58,94,97,128,129,130,131,134,135,136,137,138,153,157,158,159,160,161,162,168,169,184,185,212,214,217,233,242,243,244,248,254,255,256,261,262,263,],[13,13,-5,-8,-4,-6,-7,13,13,13,13,13,13,13,-25,-26,-27,-30,-31,-32,-33,-34,-38,-15,-24,-28,-29,-35,-36,13,13,-37,-39,13,13,13,-79,-72,13,13,-65,-80,13,13,-81,-71,13,]),'_void':([0,3,4,7,15,16,17,23,28,44,58,94,97,128,129,130,131,134,135,136,137,138,153,157,158,159,160,161,162,168,169,184,185,212,214,217,233,242,243,244,248,254,255,256,261,262,263,],[14,14,-5,-8,-4,-6,-7,14,14,14,14,14,14,14,-25,-26,-27,-30,-31,-32,-33,-34,-38,-15,-24,-28,-29,-35,-36,14,14,-37,-39,14,14,14,-79,-72,14,14,-65,-80,14,14,-81,-71,14,]),'punto_coma':([5,6,18,19,20,24,25,26,29,30,37,39,45,47,48,49,50,52,53,60,61,81,82,83,84,89,93,95,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,118,121,122,124,132,133,139,140,148,151,155,156,163,164,170,190,192,216,218,245,247,],[16,17,-40,-46,-42,-44,-45,-48,-41,-46,-47,-50,-115,-111,-112,-113,-114,94,-13,-43,-49,-101,-109,-102,-103,-108,-9,-14,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,-104,-107,-110,-12,159,160,161,162,-96,-106,-53,-54,184,185,-100,207,-51,226,-52,254,-105,]),'identificador':([8,9,10,11,12,13,14,21,22,27,31,35,36,40,41,42,43,44,46,54,56,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,87,88,97,113,123,125,128,129,130,131,134,135,136,137,138,141,142,149,153,158,159,160,161,162,165,166,167,168,172,173,174,184,185,194,195,196,197,200,201,202,207,209,210,211,212,214,223,225,226,233,242,243,244,248,251,254,255,256,261,262,263,],[19,21,-120,-121,-122,-123,-125,-124,30,45,55,59,45,45,82,45,45,45,45,95,96,-124,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,121,126,45,45,30,126,-25,-26,-27,-30,-31,-32,-33,-34,45,164,45,-38,-24,-28,-29,-35,-36,45,45,45,126,45,193,-55,-37,-39,-56,-57,-58,-59,-62,-63,-64,45,45,-60,-61,126,126,45,45,236,-79,-72,126,126,-65,45,-80,126,126,-81,-71,126,]),'et':([10,11,12,13,14,25,26,27,31,36,37,38,39,40,42,43,44,45,46,47,48,49,50,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,87,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,122,123,126,141,148,149,151,152,154,163,165,166,167,170,172,174,186,187,188,192,193,194,195,196,197,200,201,202,207,209,210,211,216,218,223,225,232,234,236,247,251,257,],[-120,-121,-122,-123,-125,-45,-48,41,56,41,-47,77,-50,41,41,41,41,-115,41,-111,-112,-113,-114,-124,77,-49,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-101,-109,-102,-103,77,41,-108,77,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,41,-97,-98,-99,77,-104,-107,-110,41,-46,41,-96,41,-106,77,181,77,41,41,41,-100,41,-55,77,77,77,77,181,-56,-57,-58,-59,-62,-63,-64,41,41,-60,-61,77,77,41,41,77,77,-46,-105,41,77,]),'asterisco':([10,11,12,13,14,25,26,37,38,39,45,47,48,49,50,59,60,61,81,82,83,84,85,86,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,126,148,151,152,154,163,170,186,187,188,192,193,216,218,232,234,236,247,257,],[-120,-121,-122,-123,-125,-45,-48,-47,64,-50,-115,-111,-112,-113,-114,-124,64,-49,-101,-109,-102,-103,64,119,-108,64,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,64,-104,-107,-110,-46,-96,-106,64,176,64,-100,64,64,64,64,176,64,64,64,64,-46,-105,64,]),'parentesis_cierra':([10,11,12,13,14,23,26,32,33,34,37,39,45,47,48,49,50,55,59,61,81,82,83,84,85,87,89,91,92,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,118,119,120,121,122,148,151,152,155,156,170,186,187,188,192,218,227,234,235,237,247,257,],[-120,-121,-122,-123,-125,-17,-48,57,-16,-19,-47,-50,-115,-111,-112,-113,-114,-20,-124,-49,-101,-109,-102,-103,118,-117,-108,-116,-119,-21,-18,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,-104,150,151,-107,-110,-96,-106,-118,-53,-54,-100,203,204,205,-51,-52,237,245,246,247,-105,260,]),'coma':([18,19,20,24,25,26,29,30,33,34,37,39,45,47,48,49,50,55,60,61,81,82,83,84,89,91,92,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,118,121,122,148,151,152,170,247,],[22,-46,-42,-44,-45,-48,-41,-46,58,-19,-47,-50,-115,-111,-112,-113,-114,-20,-43,-49,-101,-109,-102,-103,-108,123,-119,-21,-18,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,-104,-107,-110,-96,-106,-118,-100,-105,]),'parentesis_abre':([19,27,36,40,42,43,44,45,46,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,87,113,123,141,143,144,145,147,149,165,166,167,171,172,174,194,195,196,197,200,201,202,207,208,209,210,211,215,223,225,241,251,],[23,44,44,44,44,44,44,87,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,165,166,167,169,44,44,44,44,191,44,-55,-56,-57,-58,-59,-62,-63,-64,44,217,44,-60,-61,225,44,44,251,44,]),'igual':([19,24,25,26,30,37,39,61,126,154,175,176,177,178,181,182,183,193,198,199,236,],[-46,36,-45,-48,-46,-47,-50,-49,-46,174,194,195,196,197,200,201,202,174,210,211,-46,]),'corchete_abre':([19,25,26,30,37,39,45,61,89,126,236,],[27,27,-48,27,-47,-50,27,-49,27,27,27,]),'llave_abre':([21,27,36,40,42,43,44,46,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,87,113,123,141,146,149,165,166,167,172,174,194,195,196,197,200,201,202,203,204,205,207,209,210,211,223,225,246,249,251,260,],[28,46,46,46,46,46,46,46,97,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,168,46,46,46,46,46,-55,-56,-57,-58,-59,-62,-63,-64,212,213,214,46,46,-60,-61,46,46,255,256,46,263,]),'punto':([25,26,37,39,45,61,126,154,236,],[-45,-48,-47,-50,88,-49,-46,173,-46,]),'mas':([25,26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,126,148,151,152,154,163,170,186,187,188,192,193,216,218,232,234,236,247,257,],[-45,-48,-47,62,-50,-115,-111,-112,-113,-114,62,-49,-101,-109,-102,-103,62,-108,62,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,62,-104,-107,-110,-46,-96,-106,62,175,62,-100,62,62,62,62,175,62,62,62,62,-46,-105,62,]),'division':([25,26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,126,148,151,152,154,163,170,186,187,188,192,193,216,218,232,234,236,247,257,],[-45,-48,-47,65,-50,-115,-111,-112,-113,-114,65,-49,-101,-109,-102,-103,65,-108,65,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,65,-104,-107,-110,-46,-96,-106,65,177,65,-100,65,65,65,65,177,65,65,65,65,-46,-105,65,]),'porcentaje':([25,26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,126,148,151,152,154,163,170,186,187,188,192,193,216,218,232,234,236,247,257,],[-45,-48,-47,66,-50,-115,-111,-112,-113,-114,66,-49,-101,-109,-102,-103,66,-108,66,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,66,-104,-107,-110,-46,-96,-106,66,178,66,-100,66,66,66,66,178,66,66,66,66,-46,-105,66,]),'menor':([25,26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,126,148,151,152,154,163,170,179,186,187,188,192,193,216,218,232,234,236,247,257,],[-45,-48,-47,70,-50,-115,-111,-112,-113,-114,70,-49,-101,-109,-102,-103,70,-108,70,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,70,-104,-107,-110,-46,-96,-106,70,179,70,-100,198,70,70,70,70,179,70,70,70,70,-46,-105,70,]),'mayor':([25,26,37,38,39,45,47,48,49,50,60,61,76,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,126,148,151,152,154,163,170,180,186,187,188,192,193,216,218,232,234,236,247,257,],[-45,-48,-47,69,-50,-115,-111,-112,-113,-114,69,-49,113,-101,-109,-102,-103,69,-108,69,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,69,-104,-107,-110,-46,-96,-106,69,180,69,-100,199,69,69,69,69,180,69,69,69,69,-46,-105,69,]),'elevado':([25,26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,126,148,151,152,154,163,170,186,187,188,192,193,216,218,232,234,236,247,257,],[-45,-48,-47,79,-50,-115,-111,-112,-113,-114,79,-49,-101,-109,-102,-103,79,-108,79,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,79,-104,-107,-110,-46,-96,-106,79,182,79,-100,79,79,79,79,182,79,79,79,79,-46,-105,79,]),'pleca':([25,26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,126,148,151,152,154,163,170,186,187,188,192,193,216,218,232,234,236,247,257,],[-45,-48,-47,78,-50,-115,-111,-112,-113,-114,78,-49,-101,-109,-102,-103,78,-108,78,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,78,-104,-107,-110,-46,-96,-106,78,183,78,-100,78,78,78,78,183,78,78,78,78,-46,-105,78,]),'corchete_cierra':([26,27,37,38,39,45,47,48,49,50,61,81,82,83,84,89,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,118,121,122,148,151,170,247,],[-48,39,-47,61,-50,-115,-111,-112,-113,-114,-49,-101,-109,-102,-103,-108,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,-104,-107,-110,-96,-106,-100,-105,]),'menos':([26,27,36,37,38,39,40,42,43,44,45,46,47,48,49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,87,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,122,123,141,148,149,151,152,163,165,166,167,170,172,174,186,187,188,192,194,195,196,197,200,201,202,207,209,210,211,216,218,223,225,232,234,247,251,257,],[-48,40,40,-47,63,-50,40,40,40,40,-115,40,-111,-112,-113,-114,63,-49,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-101,-109,-102,-103,63,40,-108,63,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,40,-97,-98,-99,63,-104,-107,-110,40,40,-96,40,-106,63,63,40,40,40,-100,40,-55,63,63,63,63,-56,-57,-58,-59,-62,-63,-64,40,40,-60,-61,63,63,40,40,63,63,-105,40,63,]),'equivale':([26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,148,151,152,163,170,186,187,188,192,216,218,232,234,247,257,],[-48,-47,67,-50,-115,-111,-112,-113,-114,67,-49,-101,-109,-102,-103,67,-108,67,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,67,-104,-107,-110,-96,-106,67,67,-100,67,67,67,67,67,67,67,67,-105,67,]),'distinto':([26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,148,151,152,163,170,186,187,188,192,216,218,232,234,247,257,],[-48,-47,68,-50,-115,-111,-112,-113,-114,68,-49,-101,-109,-102,-103,68,-108,68,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,68,-104,-107,-110,-96,-106,68,68,-100,68,68,68,68,68,68,68,68,-105,68,]),'mayor_igual':([26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,148,151,152,163,170,186,187,188,192,216,218,232,234,247,257,],[-48,-47,71,-50,-115,-111,-112,-113,-114,71,-49,-101,-109,-102,-103,71,-108,71,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,71,-104,-107,-110,-96,-106,71,71,-100,71,71,71,71,71,71,71,71,-105,71,]),'menor_igual':([26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,148,151,152,163,170,186,187,188,192,216,218,232,234,247,257,],[-48,-47,72,-50,-115,-111,-112,-113,-114,72,-49,-101,-109,-102,-103,72,-108,72,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,72,-104,-107,-110,-96,-106,72,72,-100,72,72,72,72,72,72,72,72,-105,72,]),'and':([26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,148,151,152,163,170,186,187,188,192,216,218,232,234,247,257,],[-48,-47,73,-50,-115,-111,-112,-113,-114,73,-49,-101,-109,-102,-103,73,-108,73,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,73,-104,-107,-110,-96,-106,73,73,-100,73,73,73,73,73,73,73,73,-105,73,]),'or':([26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,148,151,152,163,170,186,187,188,192,216,218,232,234,247,257,],[-48,-47,74,-50,-115,-111,-112,-113,-114,74,-49,-101,-109,-102,-103,74,-108,74,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,74,-104,-107,-110,-96,-106,74,74,-100,74,74,74,74,74,74,74,74,-105,74,]),'desplazamiento_izquierdo':([26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,148,151,152,163,170,186,187,188,192,216,218,232,234,247,257,],[-48,-47,75,-50,-115,-111,-112,-113,-114,75,-49,-101,-109,-102,-103,75,-108,75,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,75,-104,-107,-110,-96,-106,75,75,-100,75,75,75,75,75,75,75,75,-105,75,]),'desplazamiento_derecho':([26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,148,151,152,163,170,186,187,188,192,216,218,232,234,247,257,],[-48,-47,76,-50,-115,-111,-112,-113,-114,76,-49,-101,-109,-102,-103,76,-108,76,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,76,-104,-107,-110,-96,-106,76,76,-100,76,76,76,76,76,76,76,76,-105,76,]),'pregunta':([26,37,38,39,45,47,48,49,50,60,61,81,82,83,84,85,89,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,148,151,152,163,170,186,187,188,192,216,218,232,234,247,257,],[-48,-47,80,-50,-115,-111,-112,-113,-114,80,-49,-101,-109,-102,-103,80,-108,80,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,80,-104,-107,-110,-96,-106,80,80,-100,80,80,80,80,80,80,80,80,-105,80,]),'llave_cierra':([26,28,37,39,45,46,47,48,49,50,51,52,53,61,81,82,83,84,89,90,91,92,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,118,121,122,124,127,128,129,130,131,134,135,136,137,138,148,151,152,153,158,159,160,161,162,168,170,184,185,189,212,214,219,224,229,233,242,243,247,248,252,254,255,256,258,259,261,262,263,264,],[-48,-11,-47,-50,-115,-117,-111,-112,-113,-114,93,-10,-13,-49,-101,-109,-102,-103,-108,122,-116,-119,-14,-23,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,-104,-107,-110,-12,157,-22,-25,-26,-27,-30,-31,-32,-33,-34,-96,-106,-118,-38,-24,-28,-29,-35,-36,-23,-100,-37,-39,206,-23,-23,228,233,242,-79,-72,-23,-105,-65,-78,-80,-23,-23,261,262,-81,-71,-23,265,]),'dos_puntos':([26,37,39,45,47,48,49,50,61,81,82,83,84,89,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,121,122,126,148,151,170,230,232,247,],[-48,-47,-50,-115,-111,-112,-113,-114,-49,-101,-109,-102,-103,-108,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-97,-98,-99,149,-104,-107,-110,153,-96,-106,-100,243,244,-105,]),'exclamacion':([27,36,40,42,43,44,46,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,87,113,123,141,149,165,166,167,172,174,194,195,196,197,200,201,202,207,209,210,211,223,225,251,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-55,-56,-57,-58,-59,-62,-63,-64,42,42,-60,-61,42,42,42,]),'virgulilla':([27,36,40,42,43,44,46,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,87,113,123,141,149,165,166,167,172,174,194,195,196,197,200,201,202,207,209,210,211,223,225,251,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-55,-56,-57,-58,-59,-62,-63,-64,43,43,-60,-61,43,43,43,]),'caracter':([27,36,40,42,43,44,46,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,87,113,123,141,149,165,166,167,172,174,194,195,196,197,200,201,202,207,209,210,211,223,225,251,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-55,-56,-57,-58,-59,-62,-63,-64,47,47,-60,-61,47,47,47,]),'cadena':([27,36,40,42,43,44,46,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,87,113,123,141,149,165,166,167,172,174,194,195,196,197,200,201,202,207,209,210,211,223,225,251,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-55,-56,-57,-58,-59,-62,-63,-64,48,48,-60,-61,48,48,48,]),'entero':([27,36,40,42,43,44,46,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,87,113,123,141,149,165,166,167,172,174,194,195,196,197,200,201,202,207,209,210,211,223,225,251,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-55,-56,-57,-58,-59,-62,-63,-64,49,49,-60,-61,49,49,49,]),'decimal':([27,36,40,42,43,44,46,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,87,113,123,141,149,165,166,167,172,174,194,195,196,197,200,201,202,207,209,210,211,223,225,251,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-55,-56,-57,-58,-59,-62,-63,-64,50,50,-60,-61,50,50,50,]),'_continue':([97,128,129,130,131,134,135,136,137,138,153,158,159,160,161,162,168,184,185,212,214,233,242,243,244,248,254,255,256,261,262,263,],[139,139,-25,-26,-27,-30,-31,-32,-33,-34,-38,-24,-28,-29,-35,-36,139,-37,-39,139,139,-79,-72,139,139,-65,-80,139,139,-81,-71,139,]),'_break':([97,128,129,130,131,134,135,136,137,138,153,158,159,160,161,162,168,184,185,212,214,233,242,243,244,248,254,255,256,261,262,263,],[140,140,-25,-26,-27,-30,-31,-32,-33,-34,-38,-24,-28,-29,-35,-36,140,-37,-39,140,140,-79,-72,140,140,-65,-80,140,140,-81,-71,140,]),'_return':([97,128,129,130,131,134,135,136,137,138,153,158,159,160,161,162,168,184,185,212,214,233,242,243,244,248,254,255,256,261,262,263,],[141,141,-25,-26,-27,-30,-31,-32,-33,-34,-38,-24,-28,-29,-35,-36,141,-37,-39,141,141,-79,-72,141,141,-65,-80,141,141,-81,-71,141,]),'_goto':([97,128,129,130,131,134,135,136,137,138,153,158,159,160,161,162,168,184,185,212,214,233,242,243,244,248,254,255,256,261,262,263,],[142,142,-25,-26,-27,-30,-31,-32,-33,-34,-38,-24,-28,-29,-35,-36,142,-37,-39,142,142,-79,-72,142,142,-65,-80,142,142,-81,-71,142,]),'_if':([97,128,129,130,131,134,135,136,137,138,153,158,159,160,161,162,168,184,185,212,214,233,242,243,244,248,254,255,256,261,262,263,],[143,143,-25,-26,-27,-30,-31,-32,-33,-34,-38,-24,-28,-29,-35,-36,143,-37,-39,143,143,-79,-72,143,143,-65,-80,143,143,-81,-71,143,]),'_switch':([97,128,129,130,131,134,135,136,137,138,153,158,159,160,161,162,168,184,185,212,214,233,242,243,244,248,254,255,256,261,262,263,],[144,144,-25,-26,-27,-30,-31,-32,-33,-34,-38,-24,-28,-29,-35,-36,144,-37,-39,144,144,-79,-72,144,144,-65,-80,144,144,-81,-71,144,]),'_while':([97,128,129,130,131,134,135,136,137,138,153,158,159,160,161,162,168,184,185,206,212,214,233,242,243,244,248,254,255,256,261,262,263,],[145,145,-25,-26,-27,-30,-31,-32,-33,-34,-38,-24,-28,-29,-35,-36,145,-37,-39,215,145,145,-79,-72,145,145,-65,-80,145,145,-81,-71,145,]),'_do':([97,128,129,130,131,134,135,136,137,138,153,158,159,160,161,162,168,184,185,212,214,233,242,243,244,248,254,255,256,261,262,263,],[146,146,-25,-26,-27,-30,-31,-32,-33,-34,-38,-24,-28,-29,-35,-36,146,-37,-39,146,146,-79,-72,146,146,-65,-80,146,146,-81,-71,146,]),'_for':([97,128,129,130,131,134,135,136,137,138,153,158,159,160,161,162,168,184,185,212,214,233,242,243,244,248,254,255,256,261,262,263,],[147,147,-25,-26,-27,-30,-31,-32,-33,-34,-38,-24,-28,-29,-35,-36,147,-37,-39,147,147,-79,-72,147,147,-65,-80,147,147,-81,-71,147,]),'aumento':([126,236,],[155,155,]),'decremento':([126,236,],[156,156,]),'_case':([128,129,130,131,134,135,136,137,138,153,158,159,160,161,162,184,185,213,221,222,231,233,242,244,248,253,254,261,262,],[-22,-25,-26,-27,-30,-31,-32,-33,-34,-38,-24,-28,-29,-35,-36,-37,-39,223,223,-76,-75,-79,-72,-23,-65,-77,-80,-81,-71,]),'_default':([128,129,130,131,134,135,136,137,138,153,158,159,160,161,162,184,185,213,220,221,222,231,233,242,244,248,253,254,261,262,],[-22,-25,-26,-27,-30,-31,-32,-33,-34,-38,-24,-28,-29,-35,-36,-37,-39,-74,230,-73,-76,-75,-79,-72,-23,-65,-77,-80,-81,-71,]),'_malloc':([150,],[171,]),'_sizeof':([191,],[208,]),'_else':([228,238,239,240,250,265,],[-67,249,-66,-69,-68,-70,]),'_elseif':([228,239,240,250,265,],[241,241,-69,-68,-70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'CUERPO_GLOBAL':([0,],[2,]),'LISTA_GLOBAL':([0,],[3,]),'INSTRUCCION_GLOBAL':([0,3,],[4,15,]),'DECLARACION':([0,3,97,128,168,169,212,214,243,244,255,256,263,],[5,5,132,132,132,190,132,132,132,132,132,132,132,]),'ESTRUCTURA':([0,3,],[6,6,]),'FUNCION':([0,3,],[7,7,]),'TIPO':([0,3,23,28,44,58,94,97,128,168,169,212,214,217,243,244,255,256,263,],[8,8,31,54,86,31,54,125,125,125,125,125,125,227,125,125,125,125,125,]),'LISTA_DECLARACION':([8,125,],[18,18,]),'DECLARACION_FINAL':([8,22,125,],[20,29,20,]),'INDICES':([19,30,126,236,],[24,24,154,154,]),'ACCESOS':([19,30,45,126,236,],[25,25,89,25,25,]),'ACCESO':([19,25,30,45,89,126,236,],[26,37,26,26,37,26,26,]),'PARAMETROS':([23,],[32,]),'LISTA_PARAMETROS':([23,],[33,]),'PARAMETRO':([23,58,],[34,98,]),'EXPRESION':([27,36,40,42,43,44,46,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,87,113,123,141,149,165,166,167,172,207,209,223,225,251,],[38,60,81,83,84,85,92,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,92,148,152,163,170,186,187,188,192,216,218,232,234,257,]),'CARACTERISTICAS':([28,],[51,]),'LISTA_CARACTERISTICAS':([28,],[52,]),'CARACTERISTICA':([28,94,],[53,124,]),'EXPRESIONES':([46,87,],[90,120,]),'LISTA_EXPRESIONES':([46,87,],[91,91,]),'CUERPO_LOCAL':([97,168,212,214,243,244,255,256,263,],[127,189,219,224,252,253,258,259,264,]),'LISTA_LOCAL':([97,168,212,214,243,244,255,256,263,],[128,128,128,128,128,128,128,128,128,]),'INSTRUCCION_LOCAL':([97,128,168,212,214,243,244,255,256,263,],[129,158,129,129,129,129,129,129,129,129,]),'ETIQUETA':([97,128,168,212,214,243,244,255,256,263,],[130,130,130,130,130,130,130,130,130,130,]),'SALTO':([97,128,168,212,214,243,244,255,256,263,],[131,131,131,131,131,131,131,131,131,131,]),'ASIGNACION':([97,128,168,212,214,226,243,244,255,256,263,],[133,133,133,133,133,235,133,133,133,133,133,]),'IF':([97,128,168,212,214,243,244,255,256,263,],[134,134,134,134,134,134,134,134,134,134,]),'SWITCH':([97,128,168,212,214,243,244,255,256,263,],[135,135,135,135,135,135,135,135,135,135,]),'WHILE':([97,128,168,212,214,243,244,255,256,263,],[136,136,136,136,136,136,136,136,136,136,]),'DO':([97,128,168,212,214,243,244,255,256,263,],[137,137,137,137,137,137,137,137,137,137,]),'FOR':([97,128,168,212,214,243,244,255,256,263,],[138,138,138,138,138,138,138,138,138,138,]),'COMPUESTO':([154,193,],[172,209,]),'CASES':([213,],[220,]),'LISTA_CASE':([213,],[221,]),'CASE':([213,221,],[222,231,]),'DEFAULT_CASE':([220,],[229,]),'ELSEIFS':([228,],[238,]),'LISTA_ELSEIF':([228,],[239,]),'ELSEIF':([228,239,],[240,250,]),'ELSE':([238,],[248,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> CUERPO_GLOBAL','INIT',1,'p_init','ascendente.py',178),
  ('CUERPO_GLOBAL -> LISTA_GLOBAL','CUERPO_GLOBAL',1,'p_cuerpo_global','ascendente.py',184),
  ('CUERPO_GLOBAL -> <empty>','CUERPO_GLOBAL',0,'p_cuerpo_global','ascendente.py',185),
  ('LISTA_GLOBAL -> LISTA_GLOBAL INSTRUCCION_GLOBAL','LISTA_GLOBAL',2,'p_lista_global','ascendente.py',191),
  ('LISTA_GLOBAL -> INSTRUCCION_GLOBAL','LISTA_GLOBAL',1,'p_lista_global','ascendente.py',192),
  ('INSTRUCCION_GLOBAL -> DECLARACION punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',198),
  ('INSTRUCCION_GLOBAL -> ESTRUCTURA punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',199),
  ('INSTRUCCION_GLOBAL -> FUNCION','INSTRUCCION_GLOBAL',1,'p_instruccion_global','ascendente.py',200),
  ('ESTRUCTURA -> _struct identificador llave_abre CARACTERISTICAS llave_cierra','ESTRUCTURA',5,'p_estructura','ascendente.py',206),
  ('CARACTERISTICAS -> LISTA_CARACTERISTICAS','CARACTERISTICAS',1,'p_caracteristicas','ascendente.py',212),
  ('CARACTERISTICAS -> <empty>','CARACTERISTICAS',0,'p_caracteristicas','ascendente.py',213),
  ('LISTA_CARACTERISTICAS -> LISTA_CARACTERISTICAS punto_coma CARACTERISTICA','LISTA_CARACTERISTICAS',3,'p_lista_caracteristicas','ascendente.py',219),
  ('LISTA_CARACTERISTICAS -> CARACTERISTICA','LISTA_CARACTERISTICAS',1,'p_lista_caracteristicas','ascendente.py',220),
  ('CARACTERISTICA -> TIPO identificador','CARACTERISTICA',2,'p_caracteristica','ascendente.py',226),
  ('FUNCION -> TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FUNCION',8,'p_funcion','ascendente.py',232),
  ('PARAMETROS -> LISTA_PARAMETROS','PARAMETROS',1,'p_parametros','ascendente.py',238),
  ('PARAMETROS -> <empty>','PARAMETROS',0,'p_parametros','ascendente.py',239),
  ('LISTA_PARAMETROS -> LISTA_PARAMETROS coma PARAMETRO','LISTA_PARAMETROS',3,'p_lista_parametros','ascendente.py',245),
  ('LISTA_PARAMETROS -> PARAMETRO','LISTA_PARAMETROS',1,'p_lista_parametros','ascendente.py',246),
  ('PARAMETRO -> TIPO identificador','PARAMETRO',2,'p_parametro','ascendente.py',252),
  ('PARAMETRO -> TIPO et identificador','PARAMETRO',3,'p_parametro','ascendente.py',253),
  ('CUERPO_LOCAL -> LISTA_LOCAL','CUERPO_LOCAL',1,'p_cuerpo_local','ascendente.py',259),
  ('CUERPO_LOCAL -> <empty>','CUERPO_LOCAL',0,'p_cuerpo_local','ascendente.py',260),
  ('LISTA_LOCAL -> LISTA_LOCAL INSTRUCCION_LOCAL','LISTA_LOCAL',2,'p_lista_local','ascendente.py',266),
  ('LISTA_LOCAL -> INSTRUCCION_LOCAL','LISTA_LOCAL',1,'p_lista_local','ascendente.py',267),
  ('INSTRUCCION_LOCAL -> ETIQUETA','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',273),
  ('INSTRUCCION_LOCAL -> SALTO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',274),
  ('INSTRUCCION_LOCAL -> DECLARACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',275),
  ('INSTRUCCION_LOCAL -> ASIGNACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',276),
  ('INSTRUCCION_LOCAL -> IF','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',277),
  ('INSTRUCCION_LOCAL -> SWITCH','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',278),
  ('INSTRUCCION_LOCAL -> WHILE','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',279),
  ('INSTRUCCION_LOCAL -> DO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',280),
  ('INSTRUCCION_LOCAL -> FOR','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',281),
  ('INSTRUCCION_LOCAL -> _continue punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',282),
  ('INSTRUCCION_LOCAL -> _break punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',283),
  ('INSTRUCCION_LOCAL -> _return EXPRESION punto_coma','INSTRUCCION_LOCAL',3,'p_instruccion_local','ascendente.py',284),
  ('ETIQUETA -> identificador dos_puntos','ETIQUETA',2,'p_etiqueta','ascendente.py',290),
  ('SALTO -> _goto identificador punto_coma','SALTO',3,'p_salto','ascendente.py',296),
  ('DECLARACION -> TIPO LISTA_DECLARACION','DECLARACION',2,'p_declaracion','ascendente.py',302),
  ('LISTA_DECLARACION -> LISTA_DECLARACION coma DECLARACION_FINAL','LISTA_DECLARACION',3,'p_lista_declaracion','ascendente.py',308),
  ('LISTA_DECLARACION -> DECLARACION_FINAL','LISTA_DECLARACION',1,'p_lista_declaracion','ascendente.py',309),
  ('DECLARACION_FINAL -> identificador INDICES igual EXPRESION','DECLARACION_FINAL',4,'p_declaracion_final','ascendente.py',315),
  ('DECLARACION_FINAL -> identificador INDICES','DECLARACION_FINAL',2,'p_declaracion_final','ascendente.py',316),
  ('INDICES -> ACCESOS','INDICES',1,'p_indices','ascendente.py',322),
  ('INDICES -> <empty>','INDICES',0,'p_indices','ascendente.py',323),
  ('ACCESOS -> ACCESOS ACCESO','ACCESOS',2,'p_accesos','ascendente.py',329),
  ('ACCESOS -> ACCESO','ACCESOS',1,'p_accesos','ascendente.py',330),
  ('ACCESO -> corchete_abre EXPRESION corchete_cierra','ACCESO',3,'p_acceso','ascendente.py',336),
  ('ACCESO -> corchete_abre corchete_cierra','ACCESO',2,'p_acceso','ascendente.py',337),
  ('ASIGNACION -> identificador INDICES COMPUESTO EXPRESION','ASIGNACION',4,'p_asignacion','ascendente.py',343),
  ('ASIGNACION -> identificador INDICES punto identificador COMPUESTO EXPRESION','ASIGNACION',6,'p_asignacion','ascendente.py',344),
  ('ASIGNACION -> identificador aumento','ASIGNACION',2,'p_asignacion','ascendente.py',345),
  ('ASIGNACION -> identificador decremento','ASIGNACION',2,'p_asignacion','ascendente.py',346),
  ('COMPUESTO -> igual','COMPUESTO',1,'p_compuesto','ascendente.py',352),
  ('COMPUESTO -> mas igual','COMPUESTO',2,'p_compuesto','ascendente.py',353),
  ('COMPUESTO -> asterisco igual','COMPUESTO',2,'p_compuesto','ascendente.py',354),
  ('COMPUESTO -> division igual','COMPUESTO',2,'p_compuesto','ascendente.py',355),
  ('COMPUESTO -> porcentaje igual','COMPUESTO',2,'p_compuesto','ascendente.py',356),
  ('COMPUESTO -> menor menor igual','COMPUESTO',3,'p_compuesto','ascendente.py',357),
  ('COMPUESTO -> mayor mayor igual','COMPUESTO',3,'p_compuesto','ascendente.py',358),
  ('COMPUESTO -> et igual','COMPUESTO',2,'p_compuesto','ascendente.py',359),
  ('COMPUESTO -> elevado igual','COMPUESTO',2,'p_compuesto','ascendente.py',360),
  ('COMPUESTO -> pleca igual','COMPUESTO',2,'p_compuesto','ascendente.py',361),
  ('IF -> _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE','IF',9,'p_if','ascendente.py',367),
  ('ELSEIFS -> LISTA_ELSEIF','ELSEIFS',1,'p_elseifs','ascendente.py',373),
  ('ELSEIFS -> <empty>','ELSEIFS',0,'p_elseifs','ascendente.py',374),
  ('LISTA_ELSEIF -> LISTA_ELSEIF ELSEIF','LISTA_ELSEIF',2,'p_lista_elseif','ascendente.py',380),
  ('LISTA_ELSEIF -> ELSEIF','LISTA_ELSEIF',1,'p_lista_elseif','ascendente.py',381),
  ('ELSEIF -> _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','ELSEIF',7,'p_elseif','ascendente.py',387),
  ('ELSE -> _else llave_abre CUERPO_LOCAL llave_cierra','ELSE',4,'p_else','ascendente.py',393),
  ('SWITCH -> _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra','SWITCH',8,'p_switch','ascendente.py',399),
  ('CASES -> LISTA_CASE','CASES',1,'p_cases','ascendente.py',405),
  ('CASES -> <empty>','CASES',0,'p_cases','ascendente.py',406),
  ('LISTA_CASE -> LISTA_CASE CASE','LISTA_CASE',2,'p_lista_case','ascendente.py',412),
  ('LISTA_CASE -> CASE','LISTA_CASE',1,'p_lista_case','ascendente.py',413),
  ('CASE -> _case EXPRESION dos_puntos CUERPO_LOCAL','CASE',4,'p_case','ascendente.py',419),
  ('DEFAULT_CASE -> _default dos_puntos CUERPO_LOCAL','DEFAULT_CASE',3,'p_default_case','ascendente.py',425),
  ('WHILE -> _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','WHILE',7,'p_while','ascendente.py',431),
  ('DO -> _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma','DO',9,'p_do','ascendente.py',437),
  ('FOR -> _for parentesis_abre DECLARACION punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FOR',11,'p_for','ascendente.py',443),
  ('EXPRESION -> EXPRESION mas EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',449),
  ('EXPRESION -> EXPRESION menos EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',450),
  ('EXPRESION -> EXPRESION asterisco EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',451),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',452),
  ('EXPRESION -> EXPRESION porcentaje EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',453),
  ('EXPRESION -> EXPRESION equivale EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',454),
  ('EXPRESION -> EXPRESION distinto EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',455),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',456),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',457),
  ('EXPRESION -> EXPRESION mayor_igual EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',458),
  ('EXPRESION -> EXPRESION menor_igual EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',459),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',460),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',461),
  ('EXPRESION -> EXPRESION desplazamiento_izquierdo EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',462),
  ('EXPRESION -> EXPRESION desplazamiento_derecho mayor EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',463),
  ('EXPRESION -> EXPRESION et EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',464),
  ('EXPRESION -> EXPRESION pleca EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',465),
  ('EXPRESION -> EXPRESION elevado EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',466),
  ('EXPRESION -> EXPRESION pregunta EXPRESION dos_puntos EXPRESION','EXPRESION',5,'p_expresion','ascendente.py',467),
  ('EXPRESION -> menos EXPRESION','EXPRESION',2,'p_expresion','ascendente.py',468),
  ('EXPRESION -> exclamacion EXPRESION','EXPRESION',2,'p_expresion','ascendente.py',469),
  ('EXPRESION -> virgulilla EXPRESION','EXPRESION',2,'p_expresion','ascendente.py',470),
  ('EXPRESION -> parentesis_abre EXPRESION parentesis_cierra','EXPRESION',3,'p_expresion','ascendente.py',471),
  ('EXPRESION -> parentesis_abre TIPO asterisco parentesis_cierra _malloc parentesis_abre _sizeof parentesis_abre TIPO parentesis_cierra parentesis_cierra','EXPRESION',11,'p_expresion','ascendente.py',472),
  ('EXPRESION -> identificador parentesis_abre EXPRESIONES parentesis_cierra','EXPRESION',4,'p_expresion','ascendente.py',473),
  ('EXPRESION -> identificador punto identificador','EXPRESION',3,'p_expresion','ascendente.py',474),
  ('EXPRESION -> identificador ACCESOS','EXPRESION',2,'p_expresion','ascendente.py',475),
  ('EXPRESION -> et identificador','EXPRESION',2,'p_expresion','ascendente.py',476),
  ('EXPRESION -> llave_abre EXPRESIONES llave_cierra','EXPRESION',3,'p_expresion','ascendente.py',477),
  ('EXPRESION -> caracter','EXPRESION',1,'p_expresion','ascendente.py',478),
  ('EXPRESION -> cadena','EXPRESION',1,'p_expresion','ascendente.py',479),
  ('EXPRESION -> entero','EXPRESION',1,'p_expresion','ascendente.py',480),
  ('EXPRESION -> decimal','EXPRESION',1,'p_expresion','ascendente.py',481),
  ('EXPRESION -> identificador','EXPRESION',1,'p_expresion','ascendente.py',482),
  ('EXPRESIONES -> LISTA_EXPRESIONES','EXPRESIONES',1,'p_expresiones','ascendente.py',488),
  ('EXPRESIONES -> <empty>','EXPRESIONES',0,'p_expresiones','ascendente.py',489),
  ('LISTA_EXPRESIONES -> LISTA_EXPRESIONES coma EXPRESION','LISTA_EXPRESIONES',3,'p_lista_expresiones','ascendente.py',495),
  ('LISTA_EXPRESIONES -> EXPRESION','LISTA_EXPRESIONES',1,'p_lista_expresiones','ascendente.py',496),
  ('TIPO -> _int','TIPO',1,'p_tipo','ascendente.py',502),
  ('TIPO -> _char','TIPO',1,'p_tipo','ascendente.py',503),
  ('TIPO -> _double','TIPO',1,'p_tipo','ascendente.py',504),
  ('TIPO -> _float','TIPO',1,'p_tipo','ascendente.py',505),
  ('TIPO -> _struct identificador','TIPO',2,'p_tipo','ascendente.py',506),
  ('TIPO -> _void','TIPO',1,'p_tipo','ascendente.py',507),
]
