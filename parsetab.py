
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftcomarightNIVEL14rightNIVEL13leftNIVEL12leftNIVEL11leftNIVEL10leftNIVEL9leftNIVEL8leftNIVEL7leftNIVEL6leftNIVEL5leftNIVEL4leftNIVEL3rightNIVEL2leftNIVEL1_break _case _char _continue _default _do _double _else _elseif _float _for _goto _if _int _return _sizeof _struct _switch _void _while and asterisco aumento cadena caracter coma corchete_abre corchete_cierra decimal decremento desplazamiento_derecho desplazamiento_izquierdo distinto division dos_puntos elevado entero equivale et exclamacion identificador igual llave_abre llave_cierra mas mayor mayor_igual menor menor_igual menos or parentesis_abre parentesis_cierra pleca porcentaje pregunta punto punto_coma virgulilla\n    INIT   :   CUERPO_GLOBAL\n    \n    CUERPO_GLOBAL   :   LISTA_GLOBAL\n    \n    CUERPO_GLOBAL   :\n    \n    LISTA_GLOBAL    :   LISTA_GLOBAL INSTRUCCION_GLOBAL\n    \n    LISTA_GLOBAL    :   INSTRUCCION_GLOBAL\n    \n    INSTRUCCION_GLOBAL  :   DECLARACION punto_coma\n                        |   ESTRUCTURA punto_coma\n                        |   FUNCION\n    \n    ESTRUCTURA  :   _struct identificador llave_abre CARACTERISTICAS llave_cierra\n    \n    CARACTERISTICAS :   LISTA_CARACTERISTICAS\n    \n    CARACTERISTICAS :\n    \n    LISTA_CARACTERISTICAS   :   LISTA_CARACTERISTICAS CARACTERISTICA\n    \n    LISTA_CARACTERISTICAS : CARACTERISTICA\n    \n    CARACTERISTICA  :   DECLARACION punto_coma\n    \n    FUNCION    :   TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    PARAMETROS  :   LISTA_PARAMETROS\n    \n    PARAMETROS  :\n    \n    LISTA_PARAMETROS    :   LISTA_PARAMETROS coma PARAMETRO\n    \n    LISTA_PARAMETROS    :   PARAMETRO\n    \n    PARAMETRO   :   TIPO identificador\n    \n    PARAMETRO   :   TIPO et identificador\n    \n    CUERPO_LOCAL    :   LISTA_LOCAL\n    \n    CUERPO_LOCAL    :\n    \n    LISTA_LOCAL :   LISTA_LOCAL INSTRUCCION_LOCAL\n    \n    LISTA_LOCAL :   INSTRUCCION_LOCAL\n    \n    INSTRUCCION_LOCAL   :   ETIQUETA\n                        |   SALTO\n                        |   DECLARACION punto_coma\n                        |   ASIGNACION punto_coma\n                        |   IF\n                        |   SWITCH\n                        |   WHILE\n                        |   DO\n                        |   FOR\n                        |   METODO punto_coma\n    \n    INSTRUCCION_LOCAL   :   _continue punto_coma\n    \n    INSTRUCCION_LOCAL   :   _break punto_coma\n    \n    INSTRUCCION_LOCAL   :   _return EXPRESION punto_coma\n    \n    INSTRUCCION_LOCAL   :   _return punto_coma\n    \n    METODO  :   identificador parentesis_abre EXPRESIONES parentesis_cierra \n    \n    ETIQUETA    :   identificador dos_puntos\n    \n    SALTO   :   _goto identificador punto_coma\n    \n    DECLARACION :   TIPO LISTA_DECLARACION\n    \n    LISTA_DECLARACION   :   LISTA_DECLARACION coma DECLARACION_FINAL\n    \n    LISTA_DECLARACION   :   DECLARACION_FINAL\n    \n    DECLARACION_FINAL   :   identificador INDICES\n    \n    DECLARACION_FINAL   :   identificador INDICES igual EXPRESION\n    \n    INDICES :   ACCESOS\n    \n    INDICES :\n    \n    ACCESOS :   ACCESOS ACCESO\n    \n    ACCESOS :   ACCESO\n    \n    ACCESO  :   corchete_abre EXPRESION corchete_cierra %prec NIVEL1\n    \n    ACCESO : corchete_abre corchete_cierra %prec NIVEL1\n    \n    ASIGNACION  :   identificador INDICES COMPUESTO EXPRESION \n    \n    ASIGNACION  :   identificador INDICES punto identificador COMPUESTO EXPRESION \n    \n    ASIGNACION  :   identificador aumento %prec NIVEL2\n    \n    ASIGNACION  :   identificador decremento %prec NIVEL2\n    \n    COMPUESTO   :   igual %prec NIVEL14\n                |   mas igual %prec NIVEL14\n                |   asterisco igual %prec NIVEL14\n                |   division igual %prec NIVEL14\n                |   porcentaje igual %prec NIVEL14\n                |   menor menor igual %prec NIVEL14\n                |   mayor mayor igual %prec NIVEL14\n                |   et igual %prec NIVEL14\n                |   elevado igual %prec NIVEL14\n                |   pleca igual %prec NIVEL14\n    \n    IF  :   _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE\n    \n    ELSEIFS :   LISTA_ELSEIF\n    \n    ELSEIFS :\n    \n    LISTA_ELSEIF    :   LISTA_ELSEIF ELSEIF\n    \n    LISTA_ELSEIF    :   ELSEIF\n    \n    ELSEIF  :   _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    ELSE    :   _else llave_abre CUERPO_LOCAL llave_cierra\n    \n    ELSE    :\n    \n    SWITCH  :   _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra\n    \n    CASES   :   LISTA_CASE\n    \n    CASES   :\n    \n    LISTA_CASE  :   LISTA_CASE CASE\n    \n    LISTA_CASE  :   CASE\n    \n    CASE    :   _case EXPRESION dos_puntos CUERPO_LOCAL\n    \n    DEFAULT_CASE    :   _default dos_puntos CUERPO_LOCAL\n    \n    WHILE   :   _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    DO  :   _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma\n    \n    FOR :   _for parentesis_abre DECLARACION punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    EXPRESION   :   EXPRESION mas EXPRESION %prec NIVEL4\n                |   EXPRESION menos EXPRESION %prec NIVEL4\n                |   EXPRESION asterisco EXPRESION %prec NIVEL3\n                |   EXPRESION division EXPRESION %prec NIVEL3\n                |   EXPRESION porcentaje EXPRESION %prec NIVEL3\n    \n    EXPRESION   :   EXPRESION equivale EXPRESION %prec NIVEL7\n                |   EXPRESION distinto EXPRESION %prec NIVEL7\n                |   EXPRESION mayor EXPRESION %prec NIVEL6\n                |   EXPRESION menor EXPRESION %prec NIVEL6\n                |   EXPRESION mayor_igual EXPRESION %prec NIVEL6\n                |   EXPRESION menor_igual EXPRESION %prec NIVEL6\n    \n    EXPRESION   :   EXPRESION and EXPRESION %prec NIVEL11\n                |   EXPRESION or EXPRESION %prec NIVEL12\n    \n    EXPRESION   :   EXPRESION desplazamiento_izquierdo EXPRESION %prec NIVEL5\n                |   EXPRESION desplazamiento_derecho mayor EXPRESION %prec NIVEL5\n                |   EXPRESION et EXPRESION %prec NIVEL8\n                |   EXPRESION pleca EXPRESION %prec NIVEL10\n                |   EXPRESION elevado EXPRESION %prec NIVEL9\n    \n    EXPRESION   :   EXPRESION pregunta EXPRESION dos_puntos EXPRESION %prec NIVEL13\n    \n    EXPRESION   :   menos EXPRESION %prec NIVEL2\n                |   exclamacion EXPRESION %prec NIVEL2\n                |   virgulilla EXPRESION %prec NIVEL2\n                |   et identificador %prec NIVEL2\n    \n    EXPRESION   :   METODO\n    \n    EXPRESION   :   parentesis_abre EXPRESION parentesis_cierra %prec NIVEL1\n    \n    EXPRESION   :   identificador punto identificador\n    \n    EXPRESION   :   identificador ACCESOS\n    \n    EXPRESION   :   identificador ACCESOS punto identificador\n    \n    EXPRESION   :   llave_abre EXPRESIONES llave_cierra\n    \n    EXPRESION   :   _sizeof parentesis_abre TIPO parentesis_cierra\n    EXPRESION  :   caracterEXPRESION  :   cadenaEXPRESION  :   enteroEXPRESION  :   decimalEXPRESION  :   identificador\n    EXPRESIONES :   LISTA_EXPRESIONES\n    \n    EXPRESIONES :\n    \n    LISTA_EXPRESIONES   :   LISTA_EXPRESIONES coma EXPRESION\n    \n    LISTA_EXPRESIONES   :   EXPRESION\n    \n    TIPO    :   _int\n            |   _char\n            |   _double\n            |   _float\n            |   _void\n    \n    TIPO    :   _struct identificador\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,7,15,16,17,161,],[-3,0,-1,-2,-5,-8,-4,-6,-7,-15,]),'_struct':([0,3,4,7,15,16,17,23,28,54,55,61,95,97,98,100,130,131,132,133,136,137,138,139,140,157,161,162,163,164,165,166,167,169,174,175,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[9,9,-5,-8,-4,-6,-7,35,35,35,-13,35,35,-12,-14,35,35,-25,-26,-27,-30,-31,-32,-33,-34,-41,-15,-24,-28,-29,-35,-36,-37,-39,35,35,-38,-42,35,35,-70,-83,-75,-69,-72,-76,35,35,-68,-71,-84,35,35,-85,-74,35,-73,]),'_int':([0,3,4,7,15,16,17,23,28,54,55,61,95,97,98,100,130,131,132,133,136,137,138,139,140,157,161,162,163,164,165,166,167,169,174,175,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[10,10,-5,-8,-4,-6,-7,10,10,10,-13,10,10,-12,-14,10,10,-25,-26,-27,-30,-31,-32,-33,-34,-41,-15,-24,-28,-29,-35,-36,-37,-39,10,10,-38,-42,10,10,-70,-83,-75,-69,-72,-76,10,10,-68,-71,-84,10,10,-85,-74,10,-73,]),'_char':([0,3,4,7,15,16,17,23,28,54,55,61,95,97,98,100,130,131,132,133,136,137,138,139,140,157,161,162,163,164,165,166,167,169,174,175,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[11,11,-5,-8,-4,-6,-7,11,11,11,-13,11,11,-12,-14,11,11,-25,-26,-27,-30,-31,-32,-33,-34,-41,-15,-24,-28,-29,-35,-36,-37,-39,11,11,-38,-42,11,11,-70,-83,-75,-69,-72,-76,11,11,-68,-71,-84,11,11,-85,-74,11,-73,]),'_double':([0,3,4,7,15,16,17,23,28,54,55,61,95,97,98,100,130,131,132,133,136,137,138,139,140,157,161,162,163,164,165,166,167,169,174,175,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[12,12,-5,-8,-4,-6,-7,12,12,12,-13,12,12,-12,-14,12,12,-25,-26,-27,-30,-31,-32,-33,-34,-41,-15,-24,-28,-29,-35,-36,-37,-39,12,12,-38,-42,12,12,-70,-83,-75,-69,-72,-76,12,12,-68,-71,-84,12,12,-85,-74,12,-73,]),'_float':([0,3,4,7,15,16,17,23,28,54,55,61,95,97,98,100,130,131,132,133,136,137,138,139,140,157,161,162,163,164,165,166,167,169,174,175,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[13,13,-5,-8,-4,-6,-7,13,13,13,-13,13,13,-12,-14,13,13,-25,-26,-27,-30,-31,-32,-33,-34,-41,-15,-24,-28,-29,-35,-36,-37,-39,13,13,-38,-42,13,13,-70,-83,-75,-69,-72,-76,13,13,-68,-71,-84,13,13,-85,-74,13,-73,]),'_void':([0,3,4,7,15,16,17,23,28,54,55,61,95,97,98,100,130,131,132,133,136,137,138,139,140,157,161,162,163,164,165,166,167,169,174,175,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[14,14,-5,-8,-4,-6,-7,14,14,14,-13,14,14,-12,-14,14,14,-25,-26,-27,-30,-31,-32,-33,-34,-41,-15,-24,-28,-29,-35,-36,-37,-39,14,14,-38,-42,14,14,-70,-83,-75,-69,-72,-76,14,14,-68,-71,-84,14,14,-85,-74,14,-73,]),'punto_coma':([5,6,18,19,20,24,25,26,29,30,37,39,44,45,49,50,51,52,56,63,64,84,85,86,87,89,96,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,121,124,125,134,135,141,142,143,144,151,153,154,156,159,160,168,170,176,195,196,219,220,245,],[16,17,-43,-49,-45,-46,-48,-51,-44,-49,-50,-53,-120,-109,-116,-117,-118,-119,98,-47,-52,-105,-108,-106,-107,-112,-9,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,-111,-110,-114,163,164,165,166,167,169,-100,-113,-40,-115,-56,-57,189,190,-104,211,-54,228,-55,253,]),'identificador':([8,9,10,11,12,13,14,21,22,27,31,35,36,40,41,42,43,46,47,57,59,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,88,90,100,116,122,126,130,131,132,133,136,137,138,139,140,144,145,152,157,162,163,164,165,166,167,169,171,172,173,174,177,178,179,189,190,198,199,200,201,204,205,206,211,212,213,214,215,217,225,227,228,229,234,238,239,240,242,243,244,247,249,250,253,254,255,260,261,262,264,],[19,21,-125,-126,-127,-128,-129,-130,30,44,58,62,44,44,85,44,44,44,44,30,99,-130,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,121,44,128,44,153,44,128,-25,-26,-27,-30,-31,-32,-33,-34,44,170,44,-41,-24,-28,-29,-35,-36,-37,-39,44,44,44,128,44,197,-58,-38,-42,-59,-60,-61,-62,-65,-66,-67,44,44,-63,-64,128,128,44,44,237,-70,-83,-75,-69,-72,-76,128,128,-68,-71,44,-84,128,128,-85,-74,128,-73,]),'et':([10,11,12,13,14,25,26,27,31,36,37,38,39,40,42,43,44,45,46,47,49,50,51,52,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,89,90,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,126,128,144,151,152,153,154,155,156,158,168,171,172,173,176,177,179,191,192,193,196,197,198,199,200,201,204,205,206,211,212,213,214,219,220,225,227,233,235,237,250,256,],[-125,-126,-127,-128,-129,-48,-51,41,59,41,-50,80,-53,41,41,41,-120,-109,41,41,-116,-117,-118,-119,-130,80,-52,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-105,-108,-106,-107,-112,41,80,80,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,41,-101,-102,-103,80,-111,-110,-114,41,-49,41,-100,41,-113,-40,80,-115,186,80,41,41,41,-104,41,-58,80,80,80,80,186,-59,-60,-61,-62,-65,-66,-67,41,41,-63,-64,80,80,41,41,80,80,-49,41,80,]),'parentesis_cierra':([10,11,12,13,14,23,26,32,33,34,37,39,44,45,49,50,51,52,58,62,64,84,85,86,87,89,90,91,93,94,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,121,123,124,125,127,151,153,154,155,156,159,160,176,191,192,193,196,220,235,236,256,],[-125,-126,-127,-128,-129,-17,-51,60,-16,-19,-50,-53,-120,-109,-116,-117,-118,-119,-20,-130,-52,-105,-108,-106,-107,-112,-122,124,-121,-124,-21,-18,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,-111,154,-110,-114,156,-100,-113,-40,-123,-115,-56,-57,-104,207,208,209,-54,-55,245,246,259,]),'coma':([18,19,20,24,25,26,29,30,33,34,37,39,44,45,49,50,51,52,58,63,64,84,85,86,87,89,93,94,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,121,124,125,151,153,154,155,156,176,],[22,-49,-45,-46,-48,-51,-44,-49,61,-19,-50,-53,-120,-109,-116,-117,-118,-119,-20,-47,-52,-105,-108,-106,-107,-112,126,-124,-21,-18,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,-111,-110,-114,-100,-113,-40,-123,-115,-104,]),'parentesis_abre':([19,27,36,40,42,43,44,46,47,48,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,128,144,146,147,148,150,152,171,172,173,177,179,198,199,200,201,204,205,206,211,212,213,214,218,225,227,241,250,],[23,46,46,46,46,46,90,46,46,95,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,90,46,171,172,173,175,46,46,46,46,46,-58,-59,-60,-61,-62,-65,-66,-67,46,46,-63,-64,227,46,46,250,46,]),'igual':([19,24,25,26,30,37,39,64,128,158,180,181,182,183,186,187,188,197,202,203,237,],[-49,36,-48,-51,-49,-50,-53,-52,-49,179,198,199,200,201,204,205,206,179,213,214,-49,]),'corchete_abre':([19,25,26,30,37,39,44,64,89,128,237,],[27,27,-51,27,-50,-53,27,-52,27,27,27,]),'llave_abre':([21,27,36,40,42,43,46,47,60,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,149,152,171,172,173,177,179,198,199,200,201,204,205,206,207,208,209,211,212,213,214,225,227,246,248,250,259,],[28,47,47,47,47,47,47,47,100,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,174,47,47,47,47,47,-58,-59,-60,-61,-62,-65,-66,-67,215,216,217,47,47,-63,-64,47,47,254,255,47,262,]),'punto':([25,26,37,39,44,64,89,128,158,237,],[-48,-51,-50,-53,88,-52,122,-49,178,-49,]),'mas':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,176,191,192,193,196,197,219,220,233,235,237,256,],[-48,-51,-50,65,-53,-120,-109,-116,-117,-118,-119,65,-52,-105,-108,-106,-107,-112,65,65,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,65,-111,-110,-114,-49,-100,-113,-40,65,-115,180,65,-104,65,65,65,65,180,65,65,65,65,-49,65,]),'asterisco':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,176,191,192,193,196,197,219,220,233,235,237,256,],[-48,-51,-50,67,-53,-120,-109,-116,-117,-118,-119,67,-52,-105,-108,-106,-107,-112,67,67,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,67,-111,-110,-114,-49,-100,-113,-40,67,-115,181,67,-104,67,67,67,67,181,67,67,67,67,-49,67,]),'division':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,176,191,192,193,196,197,219,220,233,235,237,256,],[-48,-51,-50,68,-53,-120,-109,-116,-117,-118,-119,68,-52,-105,-108,-106,-107,-112,68,68,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,68,-111,-110,-114,-49,-100,-113,-40,68,-115,182,68,-104,68,68,68,68,182,68,68,68,68,-49,68,]),'porcentaje':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,176,191,192,193,196,197,219,220,233,235,237,256,],[-48,-51,-50,69,-53,-120,-109,-116,-117,-118,-119,69,-52,-105,-108,-106,-107,-112,69,69,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,69,-111,-110,-114,-49,-100,-113,-40,69,-115,183,69,-104,69,69,69,69,183,69,69,69,69,-49,69,]),'menor':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,176,184,191,192,193,196,197,219,220,233,235,237,256,],[-48,-51,-50,73,-53,-120,-109,-116,-117,-118,-119,73,-52,-105,-108,-106,-107,-112,73,73,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,73,-111,-110,-114,-49,-100,-113,-40,73,-115,184,73,-104,202,73,73,73,73,184,73,73,73,73,-49,73,]),'mayor':([25,26,37,38,39,44,45,49,50,51,52,63,64,79,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,176,185,191,192,193,196,197,219,220,233,235,237,256,],[-48,-51,-50,72,-53,-120,-109,-116,-117,-118,-119,72,-52,116,-105,-108,-106,-107,-112,72,72,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,72,-111,-110,-114,-49,-100,-113,-40,72,-115,185,72,-104,203,72,72,72,72,185,72,72,72,72,-49,72,]),'elevado':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,176,191,192,193,196,197,219,220,233,235,237,256,],[-48,-51,-50,82,-53,-120,-109,-116,-117,-118,-119,82,-52,-105,-108,-106,-107,-112,82,82,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,82,-111,-110,-114,-49,-100,-113,-40,82,-115,187,82,-104,82,82,82,82,187,82,82,82,82,-49,82,]),'pleca':([25,26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,155,156,158,168,176,191,192,193,196,197,219,220,233,235,237,256,],[-48,-51,-50,81,-53,-120,-109,-116,-117,-118,-119,81,-52,-105,-108,-106,-107,-112,81,81,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,81,-111,-110,-114,-49,-100,-113,-40,81,-115,188,81,-104,81,81,81,81,188,81,81,81,81,-49,81,]),'corchete_cierra':([26,27,37,38,39,44,45,49,50,51,52,64,84,85,86,87,89,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,121,124,125,151,153,154,156,176,],[-51,39,-50,64,-53,-120,-109,-116,-117,-118,-119,-52,-105,-108,-106,-107,-112,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,-111,-110,-114,-100,-113,-40,-115,-104,]),'menos':([26,27,36,37,38,39,40,42,43,44,45,46,47,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,89,90,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,126,144,151,152,153,154,155,156,168,171,172,173,176,177,179,191,192,193,196,198,199,200,201,204,205,206,211,212,213,214,219,220,225,227,233,235,250,256,],[-51,40,40,-50,66,-53,40,40,40,-120,-109,40,40,-116,-117,-118,-119,66,-52,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-105,-108,-106,-107,-112,40,66,66,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,40,-101,-102,-103,66,-111,-110,-114,40,40,-100,40,-113,-40,66,-115,66,40,40,40,-104,40,-58,66,66,66,66,-59,-60,-61,-62,-65,-66,-67,40,40,-63,-64,66,66,40,40,66,66,40,66,]),'equivale':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,176,191,192,193,196,219,220,233,235,256,],[-51,-50,70,-53,-120,-109,-116,-117,-118,-119,70,-52,-105,-108,-106,-107,-112,70,70,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,70,-111,-110,-114,-100,-113,-40,70,-115,70,-104,70,70,70,70,70,70,70,70,70,]),'distinto':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,176,191,192,193,196,219,220,233,235,256,],[-51,-50,71,-53,-120,-109,-116,-117,-118,-119,71,-52,-105,-108,-106,-107,-112,71,71,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,71,-111,-110,-114,-100,-113,-40,71,-115,71,-104,71,71,71,71,71,71,71,71,71,]),'mayor_igual':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,176,191,192,193,196,219,220,233,235,256,],[-51,-50,74,-53,-120,-109,-116,-117,-118,-119,74,-52,-105,-108,-106,-107,-112,74,74,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,74,-111,-110,-114,-100,-113,-40,74,-115,74,-104,74,74,74,74,74,74,74,74,74,]),'menor_igual':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,176,191,192,193,196,219,220,233,235,256,],[-51,-50,75,-53,-120,-109,-116,-117,-118,-119,75,-52,-105,-108,-106,-107,-112,75,75,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,75,-111,-110,-114,-100,-113,-40,75,-115,75,-104,75,75,75,75,75,75,75,75,75,]),'and':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,176,191,192,193,196,219,220,233,235,256,],[-51,-50,76,-53,-120,-109,-116,-117,-118,-119,76,-52,-105,-108,-106,-107,-112,76,76,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,76,-111,-110,-114,-100,-113,-40,76,-115,76,-104,76,76,76,76,76,76,76,76,76,]),'or':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,176,191,192,193,196,219,220,233,235,256,],[-51,-50,77,-53,-120,-109,-116,-117,-118,-119,77,-52,-105,-108,-106,-107,-112,77,77,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,77,-111,-110,-114,-100,-113,-40,77,-115,77,-104,77,77,77,77,77,77,77,77,77,]),'desplazamiento_izquierdo':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,176,191,192,193,196,219,220,233,235,256,],[-51,-50,78,-53,-120,-109,-116,-117,-118,-119,78,-52,-105,-108,-106,-107,-112,78,78,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,78,-111,-110,-114,-100,-113,-40,78,-115,78,-104,78,78,78,78,78,78,78,78,78,]),'desplazamiento_derecho':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,176,191,192,193,196,219,220,233,235,256,],[-51,-50,79,-53,-120,-109,-116,-117,-118,-119,79,-52,-105,-108,-106,-107,-112,79,79,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,79,-111,-110,-114,-100,-113,-40,79,-115,79,-104,79,79,79,79,79,79,79,79,79,]),'pregunta':([26,37,38,39,44,45,49,50,51,52,63,64,84,85,86,87,89,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,151,153,154,155,156,168,176,191,192,193,196,219,220,233,235,256,],[-51,-50,83,-53,-120,-109,-116,-117,-118,-119,83,-52,-105,-108,-106,-107,-112,83,83,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,83,-111,-110,-114,-100,-113,-40,83,-115,83,-104,83,83,83,83,83,83,83,83,83,]),'llave_cierra':([26,28,37,39,44,45,47,49,50,51,52,53,54,55,64,84,85,86,87,89,92,93,94,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,121,124,125,129,130,131,132,133,136,137,138,139,140,151,153,154,155,156,157,162,163,164,165,166,167,169,174,176,189,190,194,215,217,221,226,229,230,234,238,239,240,242,243,247,249,251,253,254,255,257,258,260,261,262,263,264,],[-51,-11,-50,-53,-120,-109,-122,-116,-117,-118,-119,96,-10,-13,-52,-105,-108,-106,-107,-112,125,-121,-124,-12,-14,-23,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,-111,-110,-114,161,-22,-25,-26,-27,-30,-31,-32,-33,-34,-100,-113,-40,-123,-115,-41,-24,-28,-29,-35,-36,-37,-39,-23,-104,-38,-42,210,-23,-23,229,234,-70,242,-83,-75,-69,-72,-76,-23,-68,-71,-82,-84,-23,-23,260,261,-85,-74,-23,264,-73,]),'dos_puntos':([26,37,39,44,45,49,50,51,52,64,84,85,86,87,89,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,124,125,128,151,153,154,156,176,231,233,],[-51,-50,-53,-120,-109,-116,-117,-118,-119,-52,-105,-108,-106,-107,-112,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-101,-102,-103,152,-111,-110,-114,157,-100,-113,-40,-115,-104,243,244,]),'exclamacion':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,171,172,173,177,179,198,199,200,201,204,205,206,211,212,213,214,225,227,250,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-58,-59,-60,-61,-62,-65,-66,-67,42,42,-63,-64,42,42,42,]),'virgulilla':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,171,172,173,177,179,198,199,200,201,204,205,206,211,212,213,214,225,227,250,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-58,-59,-60,-61,-62,-65,-66,-67,43,43,-63,-64,43,43,43,]),'_sizeof':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,171,172,173,177,179,198,199,200,201,204,205,206,211,212,213,214,225,227,250,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-58,-59,-60,-61,-62,-65,-66,-67,48,48,-63,-64,48,48,48,]),'caracter':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,171,172,173,177,179,198,199,200,201,204,205,206,211,212,213,214,225,227,250,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-58,-59,-60,-61,-62,-65,-66,-67,49,49,-63,-64,49,49,49,]),'cadena':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,171,172,173,177,179,198,199,200,201,204,205,206,211,212,213,214,225,227,250,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-58,-59,-60,-61,-62,-65,-66,-67,50,50,-63,-64,50,50,50,]),'entero':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,171,172,173,177,179,198,199,200,201,204,205,206,211,212,213,214,225,227,250,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-58,-59,-60,-61,-62,-65,-66,-67,51,51,-63,-64,51,51,51,]),'decimal':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,171,172,173,177,179,198,199,200,201,204,205,206,211,212,213,214,225,227,250,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-58,-59,-60,-61,-62,-65,-66,-67,52,52,-63,-64,52,52,52,]),'_continue':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,169,174,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[142,142,-25,-26,-27,-30,-31,-32,-33,-34,-41,-24,-28,-29,-35,-36,-37,-39,142,-38,-42,142,142,-70,-83,-75,-69,-72,-76,142,142,-68,-71,-84,142,142,-85,-74,142,-73,]),'_break':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,169,174,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[143,143,-25,-26,-27,-30,-31,-32,-33,-34,-41,-24,-28,-29,-35,-36,-37,-39,143,-38,-42,143,143,-70,-83,-75,-69,-72,-76,143,143,-68,-71,-84,143,143,-85,-74,143,-73,]),'_return':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,169,174,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[144,144,-25,-26,-27,-30,-31,-32,-33,-34,-41,-24,-28,-29,-35,-36,-37,-39,144,-38,-42,144,144,-70,-83,-75,-69,-72,-76,144,144,-68,-71,-84,144,144,-85,-74,144,-73,]),'_goto':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,169,174,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[145,145,-25,-26,-27,-30,-31,-32,-33,-34,-41,-24,-28,-29,-35,-36,-37,-39,145,-38,-42,145,145,-70,-83,-75,-69,-72,-76,145,145,-68,-71,-84,145,145,-85,-74,145,-73,]),'_if':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,169,174,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[146,146,-25,-26,-27,-30,-31,-32,-33,-34,-41,-24,-28,-29,-35,-36,-37,-39,146,-38,-42,146,146,-70,-83,-75,-69,-72,-76,146,146,-68,-71,-84,146,146,-85,-74,146,-73,]),'_switch':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,169,174,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[147,147,-25,-26,-27,-30,-31,-32,-33,-34,-41,-24,-28,-29,-35,-36,-37,-39,147,-38,-42,147,147,-70,-83,-75,-69,-72,-76,147,147,-68,-71,-84,147,147,-85,-74,147,-73,]),'_while':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,169,174,189,190,210,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[148,148,-25,-26,-27,-30,-31,-32,-33,-34,-41,-24,-28,-29,-35,-36,-37,-39,148,-38,-42,218,148,148,-70,-83,-75,-69,-72,-76,148,148,-68,-71,-84,148,148,-85,-74,148,-73,]),'_do':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,169,174,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[149,149,-25,-26,-27,-30,-31,-32,-33,-34,-41,-24,-28,-29,-35,-36,-37,-39,149,-38,-42,149,149,-70,-83,-75,-69,-72,-76,149,149,-68,-71,-84,149,149,-85,-74,149,-73,]),'_for':([100,130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,169,174,189,190,215,217,229,234,238,239,240,242,243,244,247,249,253,254,255,260,261,262,264,],[150,150,-25,-26,-27,-30,-31,-32,-33,-34,-41,-24,-28,-29,-35,-36,-37,-39,150,-38,-42,150,150,-70,-83,-75,-69,-72,-76,150,150,-68,-71,-84,150,150,-85,-74,150,-73,]),'aumento':([128,237,],[159,159,]),'decremento':([128,237,],[160,160,]),'_case':([130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,169,189,190,216,223,224,229,232,234,238,239,240,242,244,247,249,252,253,260,261,264,],[-22,-25,-26,-27,-30,-31,-32,-33,-34,-41,-24,-28,-29,-35,-36,-37,-39,-38,-42,225,225,-80,-70,-79,-83,-75,-69,-72,-76,-23,-68,-71,-81,-84,-85,-74,-73,]),'_default':([130,131,132,133,136,137,138,139,140,157,162,163,164,165,166,167,169,189,190,216,222,223,224,229,232,234,238,239,240,242,244,247,249,252,253,260,261,264,],[-22,-25,-26,-27,-30,-31,-32,-33,-34,-41,-24,-28,-29,-35,-36,-37,-39,-38,-42,-78,231,-77,-80,-70,-79,-83,-75,-69,-72,-76,-23,-68,-71,-81,-84,-85,-74,-73,]),'_else':([229,238,239,240,249,264,],[-70,248,-69,-72,-71,-73,]),'_elseif':([229,239,240,249,264,],[241,241,-72,-71,-73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'CUERPO_GLOBAL':([0,],[2,]),'LISTA_GLOBAL':([0,],[3,]),'INSTRUCCION_GLOBAL':([0,3,],[4,15,]),'DECLARACION':([0,3,28,54,100,130,174,175,215,217,243,244,254,255,262,],[5,5,56,56,134,134,134,195,134,134,134,134,134,134,134,]),'ESTRUCTURA':([0,3,],[6,6,]),'FUNCION':([0,3,],[7,7,]),'TIPO':([0,3,23,28,54,61,95,100,130,174,175,215,217,243,244,254,255,262,],[8,8,31,57,57,31,127,57,57,57,57,57,57,57,57,57,57,57,]),'LISTA_DECLARACION':([8,57,],[18,18,]),'DECLARACION_FINAL':([8,22,57,],[20,29,20,]),'INDICES':([19,30,128,237,],[24,24,158,158,]),'ACCESOS':([19,30,44,128,237,],[25,25,89,25,25,]),'ACCESO':([19,25,30,44,89,128,237,],[26,37,26,26,37,26,26,]),'PARAMETROS':([23,],[32,]),'LISTA_PARAMETROS':([23,],[33,]),'PARAMETRO':([23,61,],[34,101,]),'EXPRESION':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,116,126,144,152,171,172,173,177,211,212,225,227,250,],[38,63,84,86,87,91,94,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,94,151,155,168,176,191,192,193,196,219,220,233,235,256,]),'METODO':([27,36,40,42,43,46,47,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,90,100,116,126,130,144,152,171,172,173,174,177,211,212,215,217,225,227,243,244,250,254,255,262,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,141,45,45,141,45,45,45,45,45,141,45,45,45,141,141,45,45,141,141,45,141,141,141,]),'CARACTERISTICAS':([28,],[53,]),'LISTA_CARACTERISTICAS':([28,],[54,]),'CARACTERISTICA':([28,54,],[55,97,]),'EXPRESIONES':([47,90,],[92,123,]),'LISTA_EXPRESIONES':([47,90,],[93,93,]),'CUERPO_LOCAL':([100,174,215,217,243,244,254,255,262,],[129,194,221,226,251,252,257,258,263,]),'LISTA_LOCAL':([100,174,215,217,243,244,254,255,262,],[130,130,130,130,130,130,130,130,130,]),'INSTRUCCION_LOCAL':([100,130,174,215,217,243,244,254,255,262,],[131,162,131,131,131,131,131,131,131,131,]),'ETIQUETA':([100,130,174,215,217,243,244,254,255,262,],[132,132,132,132,132,132,132,132,132,132,]),'SALTO':([100,130,174,215,217,243,244,254,255,262,],[133,133,133,133,133,133,133,133,133,133,]),'ASIGNACION':([100,130,174,215,217,228,243,244,254,255,262,],[135,135,135,135,135,236,135,135,135,135,135,]),'IF':([100,130,174,215,217,243,244,254,255,262,],[136,136,136,136,136,136,136,136,136,136,]),'SWITCH':([100,130,174,215,217,243,244,254,255,262,],[137,137,137,137,137,137,137,137,137,137,]),'WHILE':([100,130,174,215,217,243,244,254,255,262,],[138,138,138,138,138,138,138,138,138,138,]),'DO':([100,130,174,215,217,243,244,254,255,262,],[139,139,139,139,139,139,139,139,139,139,]),'FOR':([100,130,174,215,217,243,244,254,255,262,],[140,140,140,140,140,140,140,140,140,140,]),'COMPUESTO':([158,197,],[177,212,]),'CASES':([216,],[222,]),'LISTA_CASE':([216,],[223,]),'CASE':([216,223,],[224,232,]),'DEFAULT_CASE':([222,],[230,]),'ELSEIFS':([229,],[238,]),'LISTA_ELSEIF':([229,],[239,]),'ELSEIF':([229,239,],[240,249,]),'ELSE':([238,],[247,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> CUERPO_GLOBAL','INIT',1,'p_init','ascendente.py',179),
  ('CUERPO_GLOBAL -> LISTA_GLOBAL','CUERPO_GLOBAL',1,'p_cuerpo_global','ascendente.py',186),
  ('CUERPO_GLOBAL -> <empty>','CUERPO_GLOBAL',0,'p_cuerpo_global_vacio','ascendente.py',193),
  ('LISTA_GLOBAL -> LISTA_GLOBAL INSTRUCCION_GLOBAL','LISTA_GLOBAL',2,'p_lista_global_lista','ascendente.py',200),
  ('LISTA_GLOBAL -> INSTRUCCION_GLOBAL','LISTA_GLOBAL',1,'p_lista_global_instruccion','ascendente.py',208),
  ('INSTRUCCION_GLOBAL -> DECLARACION punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',215),
  ('INSTRUCCION_GLOBAL -> ESTRUCTURA punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',216),
  ('INSTRUCCION_GLOBAL -> FUNCION','INSTRUCCION_GLOBAL',1,'p_instruccion_global','ascendente.py',217),
  ('ESTRUCTURA -> _struct identificador llave_abre CARACTERISTICAS llave_cierra','ESTRUCTURA',5,'p_estructura','ascendente.py',224),
  ('CARACTERISTICAS -> LISTA_CARACTERISTICAS','CARACTERISTICAS',1,'p_caracteristicas','ascendente.py',231),
  ('CARACTERISTICAS -> <empty>','CARACTERISTICAS',0,'p_caracteristicas_vacio','ascendente.py',238),
  ('LISTA_CARACTERISTICAS -> LISTA_CARACTERISTICAS CARACTERISTICA','LISTA_CARACTERISTICAS',2,'p_lista_caracteristicas_lista','ascendente.py',245),
  ('LISTA_CARACTERISTICAS -> CARACTERISTICA','LISTA_CARACTERISTICAS',1,'p_lista_caracteristicas_caracteristica','ascendente.py',253),
  ('CARACTERISTICA -> DECLARACION punto_coma','CARACTERISTICA',2,'p_caracteristica','ascendente.py',260),
  ('FUNCION -> TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FUNCION',8,'p_funcion','ascendente.py',267),
  ('PARAMETROS -> LISTA_PARAMETROS','PARAMETROS',1,'p_parametros','ascendente.py',274),
  ('PARAMETROS -> <empty>','PARAMETROS',0,'p_parametros_vacio','ascendente.py',281),
  ('LISTA_PARAMETROS -> LISTA_PARAMETROS coma PARAMETRO','LISTA_PARAMETROS',3,'p_lista_parametros_lista','ascendente.py',288),
  ('LISTA_PARAMETROS -> PARAMETRO','LISTA_PARAMETROS',1,'p_lista_parametros_parametro','ascendente.py',296),
  ('PARAMETRO -> TIPO identificador','PARAMETRO',2,'p_parametro','ascendente.py',303),
  ('PARAMETRO -> TIPO et identificador','PARAMETRO',3,'p_parametro_apuntador','ascendente.py',310),
  ('CUERPO_LOCAL -> LISTA_LOCAL','CUERPO_LOCAL',1,'p_cuerpo_local','ascendente.py',317),
  ('CUERPO_LOCAL -> <empty>','CUERPO_LOCAL',0,'p_cuerpo_local_vacio','ascendente.py',324),
  ('LISTA_LOCAL -> LISTA_LOCAL INSTRUCCION_LOCAL','LISTA_LOCAL',2,'p_lista_local','ascendente.py',331),
  ('LISTA_LOCAL -> INSTRUCCION_LOCAL','LISTA_LOCAL',1,'p_lista_local_instruccion','ascendente.py',339),
  ('INSTRUCCION_LOCAL -> ETIQUETA','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',346),
  ('INSTRUCCION_LOCAL -> SALTO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',347),
  ('INSTRUCCION_LOCAL -> DECLARACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',348),
  ('INSTRUCCION_LOCAL -> ASIGNACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',349),
  ('INSTRUCCION_LOCAL -> IF','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',350),
  ('INSTRUCCION_LOCAL -> SWITCH','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',351),
  ('INSTRUCCION_LOCAL -> WHILE','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',352),
  ('INSTRUCCION_LOCAL -> DO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',353),
  ('INSTRUCCION_LOCAL -> FOR','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',354),
  ('INSTRUCCION_LOCAL -> METODO punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',355),
  ('INSTRUCCION_LOCAL -> _continue punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local_continue','ascendente.py',362),
  ('INSTRUCCION_LOCAL -> _break punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local_break','ascendente.py',369),
  ('INSTRUCCION_LOCAL -> _return EXPRESION punto_coma','INSTRUCCION_LOCAL',3,'p_instruccion_local_return','ascendente.py',376),
  ('INSTRUCCION_LOCAL -> _return punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local_return_vacio','ascendente.py',383),
  ('METODO -> identificador parentesis_abre EXPRESIONES parentesis_cierra','METODO',4,'p_metodo','ascendente.py',390),
  ('ETIQUETA -> identificador dos_puntos','ETIQUETA',2,'p_etiqueta','ascendente.py',397),
  ('SALTO -> _goto identificador punto_coma','SALTO',3,'p_salto','ascendente.py',404),
  ('DECLARACION -> TIPO LISTA_DECLARACION','DECLARACION',2,'p_declaracion','ascendente.py',411),
  ('LISTA_DECLARACION -> LISTA_DECLARACION coma DECLARACION_FINAL','LISTA_DECLARACION',3,'p_lista_declaracion_lista','ascendente.py',418),
  ('LISTA_DECLARACION -> DECLARACION_FINAL','LISTA_DECLARACION',1,'p_lista_declaracion_declaracion','ascendente.py',426),
  ('DECLARACION_FINAL -> identificador INDICES','DECLARACION_FINAL',2,'p_declaracion_final','ascendente.py',433),
  ('DECLARACION_FINAL -> identificador INDICES igual EXPRESION','DECLARACION_FINAL',4,'p_declaracion_final_expresion','ascendente.py',440),
  ('INDICES -> ACCESOS','INDICES',1,'p_indices','ascendente.py',447),
  ('INDICES -> <empty>','INDICES',0,'p_indices_vacio','ascendente.py',454),
  ('ACCESOS -> ACCESOS ACCESO','ACCESOS',2,'p_accesos_lista','ascendente.py',461),
  ('ACCESOS -> ACCESO','ACCESOS',1,'p_accesos_acceso','ascendente.py',469),
  ('ACCESO -> corchete_abre EXPRESION corchete_cierra','ACCESO',3,'p_acceso','ascendente.py',476),
  ('ACCESO -> corchete_abre corchete_cierra','ACCESO',2,'p_acceso_vacio','ascendente.py',483),
  ('ASIGNACION -> identificador INDICES COMPUESTO EXPRESION','ASIGNACION',4,'p_asignacion_normal','ascendente.py',490),
  ('ASIGNACION -> identificador INDICES punto identificador COMPUESTO EXPRESION','ASIGNACION',6,'p_asignacion_estructura','ascendente.py',498),
  ('ASIGNACION -> identificador aumento','ASIGNACION',2,'p_asignacion_aumento','ascendente.py',506),
  ('ASIGNACION -> identificador decremento','ASIGNACION',2,'p_asignacion_decremento','ascendente.py',513),
  ('COMPUESTO -> igual','COMPUESTO',1,'p_compuesto','ascendente.py',520),
  ('COMPUESTO -> mas igual','COMPUESTO',2,'p_compuesto','ascendente.py',521),
  ('COMPUESTO -> asterisco igual','COMPUESTO',2,'p_compuesto','ascendente.py',522),
  ('COMPUESTO -> division igual','COMPUESTO',2,'p_compuesto','ascendente.py',523),
  ('COMPUESTO -> porcentaje igual','COMPUESTO',2,'p_compuesto','ascendente.py',524),
  ('COMPUESTO -> menor menor igual','COMPUESTO',3,'p_compuesto','ascendente.py',525),
  ('COMPUESTO -> mayor mayor igual','COMPUESTO',3,'p_compuesto','ascendente.py',526),
  ('COMPUESTO -> et igual','COMPUESTO',2,'p_compuesto','ascendente.py',527),
  ('COMPUESTO -> elevado igual','COMPUESTO',2,'p_compuesto','ascendente.py',528),
  ('COMPUESTO -> pleca igual','COMPUESTO',2,'p_compuesto','ascendente.py',529),
  ('IF -> _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE','IF',9,'p_if','ascendente.py',536),
  ('ELSEIFS -> LISTA_ELSEIF','ELSEIFS',1,'p_elseifs','ascendente.py',543),
  ('ELSEIFS -> <empty>','ELSEIFS',0,'p_elseifs_vacio','ascendente.py',550),
  ('LISTA_ELSEIF -> LISTA_ELSEIF ELSEIF','LISTA_ELSEIF',2,'p_lista_elseif_lista','ascendente.py',557),
  ('LISTA_ELSEIF -> ELSEIF','LISTA_ELSEIF',1,'p_lista_elseif_elseif','ascendente.py',565),
  ('ELSEIF -> _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','ELSEIF',7,'p_elseif','ascendente.py',572),
  ('ELSE -> _else llave_abre CUERPO_LOCAL llave_cierra','ELSE',4,'p_else','ascendente.py',579),
  ('ELSE -> <empty>','ELSE',0,'p_else_vacio','ascendente.py',586),
  ('SWITCH -> _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra','SWITCH',8,'p_switch','ascendente.py',593),
  ('CASES -> LISTA_CASE','CASES',1,'p_cases','ascendente.py',600),
  ('CASES -> <empty>','CASES',0,'p_cases_vacio','ascendente.py',607),
  ('LISTA_CASE -> LISTA_CASE CASE','LISTA_CASE',2,'p_lista_case_lista','ascendente.py',614),
  ('LISTA_CASE -> CASE','LISTA_CASE',1,'p_lista_case_case','ascendente.py',622),
  ('CASE -> _case EXPRESION dos_puntos CUERPO_LOCAL','CASE',4,'p_case','ascendente.py',629),
  ('DEFAULT_CASE -> _default dos_puntos CUERPO_LOCAL','DEFAULT_CASE',3,'p_default_case','ascendente.py',636),
  ('WHILE -> _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','WHILE',7,'p_while','ascendente.py',643),
  ('DO -> _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma','DO',9,'p_do','ascendente.py',650),
  ('FOR -> _for parentesis_abre DECLARACION punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FOR',11,'p_for','ascendente.py',657),
  ('EXPRESION -> EXPRESION mas EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',664),
  ('EXPRESION -> EXPRESION menos EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',665),
  ('EXPRESION -> EXPRESION asterisco EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',666),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',667),
  ('EXPRESION -> EXPRESION porcentaje EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',668),
  ('EXPRESION -> EXPRESION equivale EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',675),
  ('EXPRESION -> EXPRESION distinto EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',676),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',677),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',678),
  ('EXPRESION -> EXPRESION mayor_igual EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',679),
  ('EXPRESION -> EXPRESION menor_igual EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',680),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_expresion_logica','ascendente.py',687),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_expresion_logica','ascendente.py',688),
  ('EXPRESION -> EXPRESION desplazamiento_izquierdo EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',695),
  ('EXPRESION -> EXPRESION desplazamiento_derecho mayor EXPRESION','EXPRESION',4,'p_expresion_bit','ascendente.py',696),
  ('EXPRESION -> EXPRESION et EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',697),
  ('EXPRESION -> EXPRESION pleca EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',698),
  ('EXPRESION -> EXPRESION elevado EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',699),
  ('EXPRESION -> EXPRESION pregunta EXPRESION dos_puntos EXPRESION','EXPRESION',5,'p_expresion_ternaria','ascendente.py',706),
  ('EXPRESION -> menos EXPRESION','EXPRESION',2,'p_expresion_unaria','ascendente.py',713),
  ('EXPRESION -> exclamacion EXPRESION','EXPRESION',2,'p_expresion_unaria','ascendente.py',714),
  ('EXPRESION -> virgulilla EXPRESION','EXPRESION',2,'p_expresion_unaria','ascendente.py',715),
  ('EXPRESION -> et identificador','EXPRESION',2,'p_expresion_unaria','ascendente.py',716),
  ('EXPRESION -> METODO','EXPRESION',1,'p_expresion_metodo','ascendente.py',723),
  ('EXPRESION -> parentesis_abre EXPRESION parentesis_cierra','EXPRESION',3,'p_expresion_parentesis','ascendente.py',730),
  ('EXPRESION -> identificador punto identificador','EXPRESION',3,'p_expresion_estructura','ascendente.py',737),
  ('EXPRESION -> identificador ACCESOS','EXPRESION',2,'p_expresion_identificador_arreglo','ascendente.py',744),
  ('EXPRESION -> identificador ACCESOS punto identificador','EXPRESION',4,'p_expresion_arreglo_estructura','ascendente.py',751),
  ('EXPRESION -> llave_abre EXPRESIONES llave_cierra','EXPRESION',3,'p_expresion_expresiones','ascendente.py',758),
  ('EXPRESION -> _sizeof parentesis_abre TIPO parentesis_cierra','EXPRESION',4,'p_expresion_sizeof','ascendente.py',765),
  ('EXPRESION -> caracter','EXPRESION',1,'p_expresion_caracter','ascendente.py',771),
  ('EXPRESION -> cadena','EXPRESION',1,'p_expresion_cadena','ascendente.py',776),
  ('EXPRESION -> entero','EXPRESION',1,'p_expresion_entero','ascendente.py',781),
  ('EXPRESION -> decimal','EXPRESION',1,'p_expresion_decimal','ascendente.py',786),
  ('EXPRESION -> identificador','EXPRESION',1,'p_expresion_identificador','ascendente.py',791),
  ('EXPRESIONES -> LISTA_EXPRESIONES','EXPRESIONES',1,'p_expresiones','ascendente.py',797),
  ('EXPRESIONES -> <empty>','EXPRESIONES',0,'p_expresiones_vacio','ascendente.py',804),
  ('LISTA_EXPRESIONES -> LISTA_EXPRESIONES coma EXPRESION','LISTA_EXPRESIONES',3,'p_lista_expresiones_lista','ascendente.py',811),
  ('LISTA_EXPRESIONES -> EXPRESION','LISTA_EXPRESIONES',1,'p_lista_expresiones_expresion','ascendente.py',819),
  ('TIPO -> _int','TIPO',1,'p_tipo','ascendente.py',826),
  ('TIPO -> _char','TIPO',1,'p_tipo','ascendente.py',827),
  ('TIPO -> _double','TIPO',1,'p_tipo','ascendente.py',828),
  ('TIPO -> _float','TIPO',1,'p_tipo','ascendente.py',829),
  ('TIPO -> _void','TIPO',1,'p_tipo','ascendente.py',830),
  ('TIPO -> _struct identificador','TIPO',2,'p_tipo_struct','ascendente.py',837),
]
