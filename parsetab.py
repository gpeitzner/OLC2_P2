
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = '_break _case _char _continue _default _do _double _else _elseif _float _for _goto _if _int _malloc _return _sizeof _struct _switch _void _while asterisco cadena caracter coma corchete_abre corchete_cierra decimal division dos_puntos elevado entero et exclamacion identificador igual llave_abre llave_cierra mas mayor menor menos parentesis_abre parentesis_cierra pleca porcentaje pregunta punto punto_coma virgulilla\n    INIT   :   CUERPO_GLOBAL\n    \n    CUERPO_GLOBAL   :   LISTA_GLOBAL\n                    |   \n    \n    LISTA_GLOBAL    :   LISTA_GLOBAL INSTRUCCION_GLOBAL\n                    |   INSTRUCCION_GLOBAL\n    \n    INSTRUCCION_GLOBAL  :   DECLARACION punto_coma\n                        |   ESTRUCTURA punto_coma\n                        |   FUNCION\n    \n    ESTRUCTURA  :   _struct identificador llave_abre CARACTERISTICAS llave_cierra\n    \n    CARACTERISTICAS :   LISTA_CARACTERISTICAS\n                    |   \n    \n    LISTA_CARACTERISTICAS   :   LISTA_CARACTERISTICAS punto_coma CARACTERISTICA\n                            |   CARACTERISTICA\n    \n    FUNCION    :   TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    PARAMETROS  :   LISTA_PARAMETROS\n                |\n    \n    LISTA_PARAMETROS    :   LISTA_PARAMETROS coma CARACTERISTICA\n                        |   CARACTERISTICA\n    \n    CARACTERISTICA  :   TIPO IDENTIFICADORES\n    \n    IDENTIFICADORES :   asterisco asterisco identificador\n                    |   asterisco identificador\n                    |   identificador\n                    |   parentesis_abre IDENTIFICADORES parentesis_cierra\n    \n    CUERPO_LOCAL    :   LISTA_LOCAL\n                    |\n    \n    LISTA_LOCAL :   LISTA_LOCAL INSTRUCCION_LOCAL\n                |   INSTRUCCION_LOCAL\n    \n    INSTRUCCION_LOCAL   :   ETIQUETA\n                        |   SALTO\n                        |   DECLARACION punto_coma\n                        |   ASIGNACION punto_coma\n                        |   IF\n                        |   SWITCH\n                        |   WHILE\n                        |   DO\n                        |   FOR\n                        |   _continue punto_coma\n                        |   _break punto_coma\n                        |   _return EXPRESION punto_coma\n    \n    ETIQUETA    :   identificador dos_puntos\n    \n    SALTO   :   _goto identificador punto_coma\n    \n    DECLARACION :   TIPO LISTA_DECLARACION\n    \n    LISTA_DECLARACION   :   LISTA_DECLARACION coma DECLARACION_FINAL\n                        |   DECLARACION_FINAL\n    \n    DECLARACION_FINAL   :   IDENTIFICADORES INDICES igual EXPRESION\n                        |   IDENTIFICADORES INDICES\n    \n    INDICES :   ACCESOS\n            |\n    \n    ACCESOS :   ACCESOS ACCESO\n            |   ACCESO\n    \n    ACCESO  :   corchete_abre EXPRESION corchete_cierra\n            |   corchete_abre corchete_cierra\n    \n    ASIGNACION  :   IDENTIFICADORES INDICES COMPUESTO EXPRESION \n                |   IDENTIFICADORES INDICES punto identificador COMPUESTO EXPRESION \n                |   IDENTIFICADORES INDICES menos mayor identificador COMPUESTO EXPRESION \n                |   IDENTIFICADORES mas mas \n                |   IDENTIFICADORES menos menos \n    \n    COMPUESTO   :   igual\n                |   mas igual\n                |   asterisco igual\n                |   division igual\n                |   porcentaje igual\n                |   menor menor igual\n                |   mayor mayor igual\n                |   et igual\n                |   elevado igual\n                |   pleca igual\n    \n    IF  :   _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE\n    \n    ELSEIFS     :   LISTA_ELSEIF\n                |   \n    \n    LISTA_ELSEIF    :   LISTA_ELSEIF ELSEIF\n                    |   ELSEIF\n    \n    ELSEIF  :   _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    ELSE    :   _else llave_abre CUERPO_LOCAL llave_cierra\n    \n    SWITCH  :   _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra\n    \n    CASES   :   LISTA_CASE\n            |\n    \n    LISTA_CASE  :   LISTA_CASE CASE\n                |   CASE\n    \n    CASE    :   _case EXPRESION dos_puntos CUERPO_LOCAL\n    \n    DEFAULT_CASE    :   _default dos_puntos CUERPO_LOCAL\n    \n    WHILE   :   _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    DO  :   _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma\n    \n    FOR :   _for parentesis_abre DECLARACION punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    EXPRESION   :   EXPRESION mas EXPRESION\n                |   EXPRESION menos EXPRESION\n                |   EXPRESION asterisco EXPRESION\n                |   EXPRESION division EXPRESION\n                |   EXPRESION porcentaje EXPRESION\n                |   EXPRESION igual igual EXPRESION\n                |   EXPRESION exclamacion igual EXPRESION\n                |   EXPRESION mayor EXPRESION\n                |   EXPRESION menor EXPRESION\n                |   EXPRESION mayor igual EXPRESION\n                |   EXPRESION menor igual EXPRESION\n                |   EXPRESION et et EXPRESION\n                |   EXPRESION pleca pleca EXPRESION\n                |   EXPRESION menor menor EXPRESION\n                |   EXPRESION mayor mayor EXPRESION\n                |   EXPRESION et EXPRESION\n                |   EXPRESION elevado EXPRESION\n                |   EXPRESION pregunta EXPRESION dos_puntos EXPRESION\n                |   menos EXPRESION\n                |   exclamacion EXPRESION\n                |   virgulilla EXPRESION\n                |   parentesis_abre TIPO asterisco parentesis_cierra _malloc parentesis_abre _sizeof parentesis_abre TIPO parentesis_cierra parentesis_cierra\n                |   identificador\n                |   identificador parentesis_abre EXPRESIONES parentesis_cierra\n                |   identificador punto identificador\n                |   identificador ACCESOS\n                |   identificador menos mayor identificador\n                |   et identificador\n                |   llave_abre EXPRESIONES llave_cierra\n                |   caracter\n                |   cadena\n                |   entero\n                |   decimal\n    \n    EXPRESIONES :   LISTA_EXPRESIONES\n                |\n    \n    LISTA_EXPRESIONES   :   LISTA_EXPRESIONES coma EXPRESION\n                        |   EXPRESION\n    \n    TIPO    :   _int\n            |   _char\n            |   _double\n            |   _float\n            |   _struct identificador\n            |   _void\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,7,15,16,17,161,],[-3,0,-1,-2,-5,-8,-4,-6,-7,-14,]),'_struct':([0,3,4,7,15,16,17,26,35,51,64,94,95,125,126,127,128,131,132,133,134,135,160,161,162,163,164,165,166,175,176,179,180,224,226,229,247,255,256,257,261,267,268,269,274,275,276,],[9,9,-5,-8,-4,-6,-7,41,41,41,41,41,41,41,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,41,41,-39,-41,41,41,41,-82,-75,41,41,-68,-83,41,41,-84,-74,41,]),'_int':([0,3,4,7,15,16,17,26,35,51,64,94,95,125,126,127,128,131,132,133,134,135,160,161,162,163,164,165,166,175,176,179,180,224,226,229,247,255,256,257,261,267,268,269,274,275,276,],[10,10,-5,-8,-4,-6,-7,10,10,10,10,10,10,10,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,10,10,-39,-41,10,10,10,-82,-75,10,10,-68,-83,10,10,-84,-74,10,]),'_char':([0,3,4,7,15,16,17,26,35,51,64,94,95,125,126,127,128,131,132,133,134,135,160,161,162,163,164,165,166,175,176,179,180,224,226,229,247,255,256,257,261,267,268,269,274,275,276,],[11,11,-5,-8,-4,-6,-7,11,11,11,11,11,11,11,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,11,11,-39,-41,11,11,11,-82,-75,11,11,-68,-83,11,11,-84,-74,11,]),'_double':([0,3,4,7,15,16,17,26,35,51,64,94,95,125,126,127,128,131,132,133,134,135,160,161,162,163,164,165,166,175,176,179,180,224,226,229,247,255,256,257,261,267,268,269,274,275,276,],[12,12,-5,-8,-4,-6,-7,12,12,12,12,12,12,12,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,12,12,-39,-41,12,12,12,-82,-75,12,12,-68,-83,12,12,-84,-74,12,]),'_float':([0,3,4,7,15,16,17,26,35,51,64,94,95,125,126,127,128,131,132,133,134,135,160,161,162,163,164,165,166,175,176,179,180,224,226,229,247,255,256,257,261,267,268,269,274,275,276,],[13,13,-5,-8,-4,-6,-7,13,13,13,13,13,13,13,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,13,13,-39,-41,13,13,13,-82,-75,13,13,-68,-83,13,13,-84,-74,13,]),'_void':([0,3,4,7,15,16,17,26,35,51,64,94,95,125,126,127,128,131,132,133,134,135,160,161,162,163,164,165,166,175,176,179,180,224,226,229,247,255,256,257,261,267,268,269,274,275,276,],[14,14,-5,-8,-4,-6,-7,14,14,14,14,14,14,14,-27,-28,-29,-32,-33,-34,-35,-36,-40,-14,-26,-30,-31,-37,-38,14,14,-39,-41,14,14,14,-82,-75,14,14,-68,-83,14,14,-84,-74,14,]),'punto_coma':([5,6,18,19,21,22,28,29,30,31,34,36,42,44,46,52,54,55,56,57,58,60,61,62,66,67,81,82,83,84,88,93,97,98,99,100,101,104,107,110,113,117,119,121,129,130,136,137,146,147,148,149,150,151,152,153,154,157,158,167,168,177,194,195,200,202,228,230,241,258,260,],[16,17,-42,-22,-44,-48,-22,-46,-47,-50,-21,-43,-23,-49,-52,-107,-114,-115,-116,-117,-20,94,-13,-19,-45,-51,-103,-104,-112,-105,-110,-9,-85,-86,-87,-88,-89,-92,-93,-100,-101,-109,-113,-12,163,164,165,166,-90,-91,-99,-94,-98,-95,-96,-107,-97,-108,-111,179,180,-102,-57,-56,218,-53,239,-54,-55,267,-106,]),'identificador':([8,9,10,11,12,13,14,20,23,24,25,32,33,37,41,43,47,48,49,50,53,65,68,69,70,71,72,75,76,77,79,80,86,87,95,102,103,105,106,108,109,111,112,118,120,122,125,126,127,128,131,132,133,134,135,138,139,155,160,162,163,164,165,166,172,173,174,175,179,180,181,182,185,204,206,207,208,209,211,212,213,218,220,222,223,224,226,231,236,238,239,247,255,256,257,261,264,267,268,269,274,275,276,],[19,24,-122,-123,-124,-125,-127,28,34,-126,28,52,58,28,65,52,52,52,83,52,52,-126,52,52,52,52,52,52,52,52,52,52,52,117,123,52,52,52,52,52,52,153,52,158,52,28,123,-27,-28,-29,-32,-33,-34,-35,-36,52,168,52,-40,-26,-30,-31,-37,-38,52,52,52,123,-39,-41,52,203,-58,221,-59,-60,-61,-62,-65,-66,-67,52,52,-64,-63,123,123,52,52,52,28,-82,-75,123,123,-68,52,-83,123,123,-84,-74,123,]),'asterisco':([8,10,11,12,13,14,20,23,24,25,28,30,31,34,37,42,44,45,46,52,54,55,56,57,58,65,66,67,81,82,83,84,85,88,92,95,97,98,99,100,101,104,107,110,113,114,117,119,122,123,125,126,127,128,131,132,133,134,135,140,146,147,148,149,150,151,152,153,154,157,158,159,160,162,163,164,165,166,167,169,175,177,179,180,196,197,198,202,203,221,224,226,228,230,239,241,246,247,248,255,256,257,260,261,267,268,269,270,274,275,276,],[23,-122,-123,-124,-125,-127,23,33,-126,23,-22,-47,-50,-21,23,-23,-49,70,-52,-107,-114,-115,-116,-117,-20,-126,70,-51,70,70,-112,70,115,-110,70,23,70,70,70,70,70,70,70,70,70,70,-109,-113,23,-22,23,-27,-28,-29,-32,-33,-34,-35,-36,-48,70,70,70,70,70,70,70,-107,70,-108,-111,70,-40,-26,-30,-31,-37,-38,70,187,23,70,-39,-41,70,70,70,70,187,187,23,23,70,70,23,70,70,-82,70,-75,23,23,-106,-68,-83,23,23,70,-84,-74,23,]),'parentesis_abre':([8,10,11,12,13,14,19,20,24,25,32,37,43,47,48,50,52,53,65,68,69,70,71,72,75,76,77,79,80,86,95,102,103,105,106,108,109,111,112,120,122,125,126,127,128,131,132,133,134,135,138,141,142,143,145,153,155,160,162,163,164,165,166,172,173,174,175,178,179,180,181,185,206,207,208,209,211,212,213,218,219,220,222,223,224,226,227,231,236,238,239,247,254,255,256,257,261,264,267,268,269,274,275,276,],[20,-122,-123,-124,-125,-127,26,20,-126,20,51,20,51,51,51,51,86,51,-126,51,51,51,51,51,51,51,51,51,51,51,20,51,51,51,51,51,51,51,51,51,20,20,-27,-28,-29,-32,-33,-34,-35,-36,51,172,173,174,176,86,51,-40,-26,-30,-31,-37,-38,51,51,51,20,201,-39,-41,51,-58,-59,-60,-61,-62,-65,-66,-67,51,229,51,-64,-63,20,20,238,51,51,51,20,-82,264,-75,20,20,-68,51,-83,20,20,-84,-74,20,]),'parentesis_cierra':([10,11,12,13,14,26,27,28,31,34,38,39,40,42,44,46,52,54,55,56,57,58,62,65,67,81,82,83,84,86,88,91,92,96,97,98,99,100,101,104,107,110,113,115,116,117,119,146,147,148,149,150,151,152,153,154,157,158,159,177,194,195,196,197,198,202,230,240,241,248,249,250,260,270,],[-122,-123,-124,-125,-127,-16,42,-22,-50,-21,63,-15,-18,-23,-49,-52,-107,-114,-115,-116,-117,-20,-19,-126,-51,-103,-104,-112,-105,-119,-110,-118,-121,-17,-85,-86,-87,-88,-89,-92,-93,-100,-101,156,157,-109,-113,-90,-91,-99,-94,-98,-95,-96,-107,-97,-108,-111,-120,-102,-57,-56,214,215,216,-53,-54,250,-55,258,259,260,-106,273,]),'coma':([18,19,21,22,28,29,30,31,34,36,39,40,42,44,46,52,54,55,56,57,58,62,66,67,81,82,83,84,88,91,92,96,97,98,99,100,101,104,107,110,113,117,119,146,147,148,149,150,151,152,153,154,157,158,159,177,260,],[25,-22,-44,-48,-22,-46,-47,-50,-21,-43,64,-18,-23,-49,-52,-107,-114,-115,-116,-117,-20,-19,-45,-51,-103,-104,-112,-105,-110,120,-121,-17,-85,-86,-87,-88,-89,-92,-93,-100,-101,-109,-113,-90,-91,-99,-94,-98,-95,-96,-107,-97,-108,-111,-120,-102,-106,]),'corchete_abre':([19,22,28,30,31,34,42,44,46,52,58,67,88,123,140,153,],[-22,32,-22,32,-50,-21,-23,-49,-52,32,-20,-51,32,-22,32,32,]),'igual':([19,22,28,29,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,73,74,75,76,81,82,83,84,88,92,97,98,99,100,101,104,107,110,113,114,117,119,123,140,146,147,148,149,150,151,152,153,154,157,158,159,167,169,177,186,187,188,189,191,192,193,196,197,198,202,203,205,210,221,228,230,241,246,248,260,270,],[-22,-48,-22,43,-47,-50,-21,-23,-49,73,-52,-107,-114,-115,-116,-117,-20,73,-51,102,103,106,109,73,73,-112,73,-110,73,73,73,73,73,73,73,73,73,73,73,-109,-113,-22,-48,73,73,73,73,73,73,73,-107,73,-108,-111,73,73,185,73,206,207,208,209,211,212,213,73,73,73,73,185,222,223,185,73,73,73,73,73,-106,73,]),'llave_abre':([24,32,43,47,48,50,53,63,68,69,70,71,72,75,76,77,79,80,86,102,103,105,106,108,109,111,112,120,138,144,155,172,173,174,181,185,206,207,208,209,211,212,213,214,215,216,218,220,222,223,231,236,238,259,262,264,273,],[35,53,53,53,53,53,53,95,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,175,53,53,53,53,53,-58,-59,-60,-61,-62,-65,-66,-67,224,225,226,53,53,-64,-63,53,53,53,268,269,53,276,]),'llave_cierra':([28,31,34,35,42,44,46,52,53,54,55,56,57,58,59,60,61,62,67,81,82,83,84,88,90,91,92,95,97,98,99,100,101,104,107,110,113,117,119,121,124,125,126,127,128,131,132,133,134,135,146,147,148,149,150,151,152,153,154,157,158,159,160,162,163,164,165,166,175,177,179,180,199,224,226,232,237,243,247,255,256,260,261,265,267,268,269,271,272,274,275,276,277,],[-22,-50,-21,-11,-23,-49,-52,-107,-119,-114,-115,-116,-117,-20,93,-10,-13,-19,-51,-103,-104,-112,-105,-110,119,-118,-121,-25,-85,-86,-87,-88,-89,-92,-93,-100,-101,-109,-113,-12,161,-24,-27,-28,-29,-32,-33,-34,-35,-36,-90,-91,-99,-94,-98,-95,-96,-107,-97,-108,-111,-120,-40,-26,-30,-31,-37,-38,-25,-102,-39,-41,217,-25,-25,242,247,255,-82,-75,-25,-106,-68,-81,-83,-25,-25,274,275,-84,-74,-25,278,]),'mas':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,81,82,83,84,88,92,97,98,99,100,101,104,107,110,113,114,117,119,123,140,146,147,148,149,150,151,152,153,154,157,158,159,167,169,171,177,196,197,198,202,203,221,228,230,241,246,248,260,270,],[-22,-47,-50,-21,-23,-49,68,-52,-107,-114,-115,-116,-117,-20,68,-51,68,68,-112,68,-110,68,68,68,68,68,68,68,68,68,68,68,-109,-113,-22,171,68,68,68,68,68,68,68,-107,68,-108,-111,68,68,186,195,68,68,68,68,68,186,186,68,68,68,68,68,-106,68,]),'menos':([28,30,31,32,34,42,43,44,45,46,47,48,50,52,53,54,55,56,57,58,66,67,68,69,70,71,72,75,76,77,79,80,81,82,83,84,86,88,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,120,123,138,140,146,147,148,149,150,151,152,153,154,155,157,158,159,167,169,170,172,173,174,177,181,185,196,197,198,202,206,207,208,209,211,212,213,218,220,222,223,228,230,231,236,238,241,246,248,260,264,270,],[-22,-47,-50,47,-21,-23,47,-49,69,-52,47,47,47,89,47,-114,-115,-116,-117,-20,69,-51,47,47,47,47,47,47,47,47,47,47,69,69,-112,69,47,-110,69,69,69,69,69,69,47,47,69,47,47,69,47,47,69,47,47,69,69,-109,-113,47,-22,47,170,69,69,69,69,69,69,69,89,69,47,-108,-111,69,69,183,194,47,47,47,69,47,-58,69,69,69,69,-59,-60,-61,-62,-65,-66,-67,47,47,-64,-63,69,69,47,47,47,69,69,69,-106,47,69,]),'punto':([28,30,31,34,42,44,46,52,58,67,123,140,153,169,],[-22,-47,-50,-21,-23,-49,-52,87,-20,-51,-22,-48,87,182,]),'division':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,81,82,83,84,88,92,97,98,99,100,101,104,107,110,113,114,117,119,123,140,146,147,148,149,150,151,152,153,154,157,158,159,167,169,177,196,197,198,202,203,221,228,230,241,246,248,260,270,],[-22,-47,-50,-21,-23,-49,71,-52,-107,-114,-115,-116,-117,-20,71,-51,71,71,-112,71,-110,71,71,71,71,71,71,71,71,71,71,71,-109,-113,-22,-48,71,71,71,71,71,71,71,-107,71,-108,-111,71,71,188,71,71,71,71,71,188,188,71,71,71,71,71,-106,71,]),'porcentaje':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,81,82,83,84,88,92,97,98,99,100,101,104,107,110,113,114,117,119,123,140,146,147,148,149,150,151,152,153,154,157,158,159,167,169,177,196,197,198,202,203,221,228,230,241,246,248,260,270,],[-22,-47,-50,-21,-23,-49,72,-52,-107,-114,-115,-116,-117,-20,72,-51,72,72,-112,72,-110,72,72,72,72,72,72,72,72,72,72,72,-109,-113,-22,-48,72,72,72,72,72,72,72,-107,72,-108,-111,72,72,189,72,72,72,72,72,189,189,72,72,72,72,72,-106,72,]),'menor':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,76,81,82,83,84,88,92,97,98,99,100,101,104,107,110,113,114,117,119,123,140,146,147,148,149,150,151,152,153,154,157,158,159,167,169,177,190,196,197,198,202,203,221,228,230,241,246,248,260,270,],[-22,-47,-50,-21,-23,-49,76,-52,-107,-114,-115,-116,-117,-20,76,-51,108,76,76,-112,76,-110,76,76,76,76,76,76,76,76,76,76,76,-109,-113,-22,-48,76,76,76,76,76,76,76,-107,76,-108,-111,76,76,190,76,210,76,76,76,76,190,190,76,76,76,76,76,-106,76,]),'mayor':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,75,81,82,83,84,88,89,92,97,98,99,100,101,104,107,110,113,114,117,119,123,140,146,147,148,149,150,151,152,153,154,157,158,159,167,169,177,183,184,196,197,198,202,203,221,228,230,241,246,248,260,270,],[-22,-47,-50,-21,-23,-49,75,-52,-107,-114,-115,-116,-117,-20,75,-51,105,75,75,-112,75,-110,118,75,75,75,75,75,75,75,75,75,75,75,-109,-113,-22,-48,75,75,75,75,75,75,75,-107,75,-108,-111,75,75,184,75,204,205,75,75,75,75,184,184,75,75,75,75,75,-106,75,]),'et':([28,30,31,32,34,42,43,44,45,46,47,48,50,52,53,54,55,56,57,58,66,67,68,69,70,71,72,75,76,77,79,80,81,82,83,84,86,88,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,120,123,138,140,146,147,148,149,150,151,152,153,154,155,157,158,159,167,169,172,173,174,177,181,185,196,197,198,202,203,206,207,208,209,211,212,213,218,220,221,222,223,228,230,231,236,238,241,246,248,260,264,270,],[-22,-47,-50,49,-21,-23,49,-49,77,-52,49,49,49,-107,49,-114,-115,-116,-117,-20,77,-51,49,49,49,49,49,49,49,111,49,49,77,77,-112,77,49,-110,77,77,77,77,77,77,49,49,77,49,49,77,49,49,77,49,49,77,77,-109,-113,49,-22,49,-48,77,77,77,77,77,77,77,-107,77,49,-108,-111,77,77,191,49,49,49,77,49,-58,77,77,77,77,191,-59,-60,-61,-62,-65,-66,-67,49,49,191,-64,-63,77,77,49,49,49,77,77,77,-106,49,77,]),'elevado':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,81,82,83,84,88,92,97,98,99,100,101,104,107,110,113,114,117,119,123,140,146,147,148,149,150,151,152,153,154,157,158,159,167,169,177,196,197,198,202,203,221,228,230,241,246,248,260,270,],[-22,-47,-50,-21,-23,-49,79,-52,-107,-114,-115,-116,-117,-20,79,-51,79,79,-112,79,-110,79,79,79,79,79,79,79,79,79,79,79,-109,-113,-22,-48,79,79,79,79,79,79,79,-107,79,-108,-111,79,79,192,79,79,79,79,79,192,192,79,79,79,79,79,-106,79,]),'pleca':([28,30,31,34,42,44,45,46,52,54,55,56,57,58,66,67,78,81,82,83,84,88,92,97,98,99,100,101,104,107,110,113,114,117,119,123,140,146,147,148,149,150,151,152,153,154,157,158,159,167,169,177,196,197,198,202,203,221,228,230,241,246,248,260,270,],[-22,-47,-50,-21,-23,-49,78,-52,-107,-114,-115,-116,-117,-20,78,-51,112,78,78,-112,78,-110,78,78,78,78,78,78,78,78,78,78,78,-109,-113,-22,-48,78,78,78,78,78,78,78,-107,78,-108,-111,78,78,193,78,78,78,78,78,193,193,78,78,78,78,78,-106,78,]),'corchete_cierra':([31,32,44,45,46,52,54,55,56,57,67,81,82,83,84,88,97,98,99,100,101,104,107,110,113,117,119,146,147,148,149,150,151,152,153,154,157,158,177,260,],[-50,46,-49,67,-52,-107,-114,-115,-116,-117,-51,-103,-104,-112,-105,-110,-85,-86,-87,-88,-89,-92,-93,-100,-101,-109,-113,-90,-91,-99,-94,-98,-95,-96,-107,-97,-108,-111,-102,-106,]),'exclamacion':([31,32,43,44,45,46,47,48,50,52,53,54,55,56,57,66,67,68,69,70,71,72,75,76,77,79,80,81,82,83,84,86,88,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,119,120,138,146,147,148,149,150,151,152,153,154,155,157,158,159,167,172,173,174,177,181,185,196,197,198,202,206,207,208,209,211,212,213,218,220,222,223,228,230,231,236,238,241,246,248,260,264,270,],[-50,48,48,-49,74,-52,48,48,48,-107,48,-114,-115,-116,-117,74,-51,48,48,48,48,48,48,48,48,48,48,74,74,-112,74,48,-110,74,74,74,74,74,74,48,48,74,48,48,74,48,48,74,48,48,74,74,-109,-113,48,48,74,74,74,74,74,74,74,-107,74,48,-108,-111,74,74,48,48,48,74,48,-58,74,74,74,74,-59,-60,-61,-62,-65,-66,-67,48,48,-64,-63,74,74,48,48,48,74,74,74,-106,48,74,]),'pregunta':([31,44,45,46,52,54,55,56,57,66,67,81,82,83,84,88,92,97,98,99,100,101,104,107,110,113,114,117,119,146,147,148,149,150,151,152,153,154,157,158,159,167,177,196,197,198,202,228,230,241,246,248,260,270,],[-50,-49,80,-52,-107,-114,-115,-116,-117,80,-51,80,80,-112,80,-110,80,80,80,80,80,80,80,80,80,80,80,-109,-113,80,80,80,80,80,80,80,-107,80,-108,-111,80,80,80,80,80,80,80,80,80,80,80,80,-106,80,]),'dos_puntos':([31,44,46,52,54,55,56,57,67,81,82,83,84,88,97,98,99,100,101,104,107,110,113,114,117,119,123,146,147,148,149,150,151,152,153,154,157,158,177,244,246,260,],[-50,-49,-52,-107,-114,-115,-116,-117,-51,-103,-104,-112,-105,-110,-85,-86,-87,-88,-89,-92,-93,-100,-101,155,-109,-113,160,-90,-91,-99,-94,-98,-95,-96,-107,-97,-108,-111,-102,256,257,-106,]),'virgulilla':([32,43,47,48,50,53,68,69,70,71,72,75,76,77,79,80,86,102,103,105,106,108,109,111,112,120,138,155,172,173,174,181,185,206,207,208,209,211,212,213,218,220,222,223,231,236,238,264,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-58,-59,-60,-61,-62,-65,-66,-67,50,50,-64,-63,50,50,50,50,]),'caracter':([32,43,47,48,50,53,68,69,70,71,72,75,76,77,79,80,86,102,103,105,106,108,109,111,112,120,138,155,172,173,174,181,185,206,207,208,209,211,212,213,218,220,222,223,231,236,238,264,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-58,-59,-60,-61,-62,-65,-66,-67,54,54,-64,-63,54,54,54,54,]),'cadena':([32,43,47,48,50,53,68,69,70,71,72,75,76,77,79,80,86,102,103,105,106,108,109,111,112,120,138,155,172,173,174,181,185,206,207,208,209,211,212,213,218,220,222,223,231,236,238,264,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-58,-59,-60,-61,-62,-65,-66,-67,55,55,-64,-63,55,55,55,55,]),'entero':([32,43,47,48,50,53,68,69,70,71,72,75,76,77,79,80,86,102,103,105,106,108,109,111,112,120,138,155,172,173,174,181,185,206,207,208,209,211,212,213,218,220,222,223,231,236,238,264,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-58,-59,-60,-61,-62,-65,-66,-67,56,56,-64,-63,56,56,56,56,]),'decimal':([32,43,47,48,50,53,68,69,70,71,72,75,76,77,79,80,86,102,103,105,106,108,109,111,112,120,138,155,172,173,174,181,185,206,207,208,209,211,212,213,218,220,222,223,231,236,238,264,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-58,-59,-60,-61,-62,-65,-66,-67,57,57,-64,-63,57,57,57,57,]),'_continue':([95,125,126,127,128,131,132,133,134,135,160,162,163,164,165,166,175,179,180,224,226,247,255,256,257,261,267,268,269,274,275,276,],[136,136,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,136,-39,-41,136,136,-82,-75,136,136,-68,-83,136,136,-84,-74,136,]),'_break':([95,125,126,127,128,131,132,133,134,135,160,162,163,164,165,166,175,179,180,224,226,247,255,256,257,261,267,268,269,274,275,276,],[137,137,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,137,-39,-41,137,137,-82,-75,137,137,-68,-83,137,137,-84,-74,137,]),'_return':([95,125,126,127,128,131,132,133,134,135,160,162,163,164,165,166,175,179,180,224,226,247,255,256,257,261,267,268,269,274,275,276,],[138,138,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,138,-39,-41,138,138,-82,-75,138,138,-68,-83,138,138,-84,-74,138,]),'_goto':([95,125,126,127,128,131,132,133,134,135,160,162,163,164,165,166,175,179,180,224,226,247,255,256,257,261,267,268,269,274,275,276,],[139,139,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,139,-39,-41,139,139,-82,-75,139,139,-68,-83,139,139,-84,-74,139,]),'_if':([95,125,126,127,128,131,132,133,134,135,160,162,163,164,165,166,175,179,180,224,226,247,255,256,257,261,267,268,269,274,275,276,],[141,141,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,141,-39,-41,141,141,-82,-75,141,141,-68,-83,141,141,-84,-74,141,]),'_switch':([95,125,126,127,128,131,132,133,134,135,160,162,163,164,165,166,175,179,180,224,226,247,255,256,257,261,267,268,269,274,275,276,],[142,142,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,142,-39,-41,142,142,-82,-75,142,142,-68,-83,142,142,-84,-74,142,]),'_while':([95,125,126,127,128,131,132,133,134,135,160,162,163,164,165,166,175,179,180,217,224,226,247,255,256,257,261,267,268,269,274,275,276,],[143,143,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,143,-39,-41,227,143,143,-82,-75,143,143,-68,-83,143,143,-84,-74,143,]),'_do':([95,125,126,127,128,131,132,133,134,135,160,162,163,164,165,166,175,179,180,224,226,247,255,256,257,261,267,268,269,274,275,276,],[144,144,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,144,-39,-41,144,144,-82,-75,144,144,-68,-83,144,144,-84,-74,144,]),'_for':([95,125,126,127,128,131,132,133,134,135,160,162,163,164,165,166,175,179,180,224,226,247,255,256,257,261,267,268,269,274,275,276,],[145,145,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,145,-39,-41,145,145,-82,-75,145,145,-68,-83,145,145,-84,-74,145,]),'_case':([125,126,127,128,131,132,133,134,135,160,162,163,164,165,166,179,180,225,234,235,245,247,255,257,261,266,267,274,275,],[-24,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,-39,-41,236,236,-79,-78,-82,-75,-25,-68,-80,-83,-84,-74,]),'_default':([125,126,127,128,131,132,133,134,135,160,162,163,164,165,166,179,180,225,233,234,235,245,247,255,257,261,266,267,274,275,],[-24,-27,-28,-29,-32,-33,-34,-35,-36,-40,-26,-30,-31,-37,-38,-39,-41,-77,244,-76,-79,-78,-82,-75,-25,-68,-80,-83,-84,-74,]),'_malloc':([156,],[178,]),'_sizeof':([201,],[219,]),'_else':([242,251,252,253,263,278,],[-70,262,-69,-72,-71,-73,]),'_elseif':([242,252,253,263,278,],[254,254,-72,-71,-73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'CUERPO_GLOBAL':([0,],[2,]),'LISTA_GLOBAL':([0,],[3,]),'INSTRUCCION_GLOBAL':([0,3,],[4,15,]),'DECLARACION':([0,3,95,125,175,176,224,226,256,257,268,269,276,],[5,5,129,129,129,200,129,129,129,129,129,129,129,]),'ESTRUCTURA':([0,3,],[6,6,]),'FUNCION':([0,3,],[7,7,]),'TIPO':([0,3,26,35,51,64,94,95,125,175,176,224,226,229,256,257,268,269,276,],[8,8,37,37,85,37,37,122,122,122,122,122,122,240,122,122,122,122,122,]),'LISTA_DECLARACION':([8,122,],[18,18,]),'DECLARACION_FINAL':([8,25,122,],[21,36,21,]),'IDENTIFICADORES':([8,20,25,37,95,122,125,175,224,226,239,256,257,268,269,276,],[22,27,22,62,140,22,140,140,140,140,140,140,140,140,140,140,]),'INDICES':([22,140,],[29,169,]),'ACCESOS':([22,52,140,153,],[30,88,30,88,]),'ACCESO':([22,30,52,88,140,153,],[31,44,31,44,31,31,]),'PARAMETROS':([26,],[38,]),'LISTA_PARAMETROS':([26,],[39,]),'CARACTERISTICA':([26,35,64,94,],[40,61,96,121,]),'EXPRESION':([32,43,47,48,50,53,68,69,70,71,72,75,76,77,79,80,86,102,103,105,106,108,109,111,112,120,138,155,172,173,174,181,218,220,231,236,238,264,],[45,66,81,82,84,92,97,98,99,100,101,104,107,110,113,114,92,146,147,148,149,150,151,152,154,159,167,177,196,197,198,202,228,230,241,246,248,270,]),'CARACTERISTICAS':([35,],[59,]),'LISTA_CARACTERISTICAS':([35,],[60,]),'EXPRESIONES':([53,86,],[90,116,]),'LISTA_EXPRESIONES':([53,86,],[91,91,]),'CUERPO_LOCAL':([95,175,224,226,256,257,268,269,276,],[124,199,232,237,265,266,271,272,277,]),'LISTA_LOCAL':([95,175,224,226,256,257,268,269,276,],[125,125,125,125,125,125,125,125,125,]),'INSTRUCCION_LOCAL':([95,125,175,224,226,256,257,268,269,276,],[126,162,126,126,126,126,126,126,126,126,]),'ETIQUETA':([95,125,175,224,226,256,257,268,269,276,],[127,127,127,127,127,127,127,127,127,127,]),'SALTO':([95,125,175,224,226,256,257,268,269,276,],[128,128,128,128,128,128,128,128,128,128,]),'ASIGNACION':([95,125,175,224,226,239,256,257,268,269,276,],[130,130,130,130,130,249,130,130,130,130,130,]),'IF':([95,125,175,224,226,256,257,268,269,276,],[131,131,131,131,131,131,131,131,131,131,]),'SWITCH':([95,125,175,224,226,256,257,268,269,276,],[132,132,132,132,132,132,132,132,132,132,]),'WHILE':([95,125,175,224,226,256,257,268,269,276,],[133,133,133,133,133,133,133,133,133,133,]),'DO':([95,125,175,224,226,256,257,268,269,276,],[134,134,134,134,134,134,134,134,134,134,]),'FOR':([95,125,175,224,226,256,257,268,269,276,],[135,135,135,135,135,135,135,135,135,135,]),'COMPUESTO':([169,203,221,],[181,220,231,]),'CASES':([225,],[233,]),'LISTA_CASE':([225,],[234,]),'CASE':([225,234,],[235,245,]),'DEFAULT_CASE':([233,],[243,]),'ELSEIFS':([242,],[251,]),'LISTA_ELSEIF':([242,],[252,]),'ELSEIF':([242,252,],[253,263,]),'ELSE':([251,],[261,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> CUERPO_GLOBAL','INIT',1,'p_init','ascendente.py',154),
  ('CUERPO_GLOBAL -> LISTA_GLOBAL','CUERPO_GLOBAL',1,'p_cuerpo_global','ascendente.py',160),
  ('CUERPO_GLOBAL -> <empty>','CUERPO_GLOBAL',0,'p_cuerpo_global','ascendente.py',161),
  ('LISTA_GLOBAL -> LISTA_GLOBAL INSTRUCCION_GLOBAL','LISTA_GLOBAL',2,'p_lista_global','ascendente.py',167),
  ('LISTA_GLOBAL -> INSTRUCCION_GLOBAL','LISTA_GLOBAL',1,'p_lista_global','ascendente.py',168),
  ('INSTRUCCION_GLOBAL -> DECLARACION punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',174),
  ('INSTRUCCION_GLOBAL -> ESTRUCTURA punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',175),
  ('INSTRUCCION_GLOBAL -> FUNCION','INSTRUCCION_GLOBAL',1,'p_instruccion_global','ascendente.py',176),
  ('ESTRUCTURA -> _struct identificador llave_abre CARACTERISTICAS llave_cierra','ESTRUCTURA',5,'p_estructura','ascendente.py',182),
  ('CARACTERISTICAS -> LISTA_CARACTERISTICAS','CARACTERISTICAS',1,'p_caracteristicas','ascendente.py',188),
  ('CARACTERISTICAS -> <empty>','CARACTERISTICAS',0,'p_caracteristicas','ascendente.py',189),
  ('LISTA_CARACTERISTICAS -> LISTA_CARACTERISTICAS punto_coma CARACTERISTICA','LISTA_CARACTERISTICAS',3,'p_lista_caracteristicas','ascendente.py',195),
  ('LISTA_CARACTERISTICAS -> CARACTERISTICA','LISTA_CARACTERISTICAS',1,'p_lista_caracteristicas','ascendente.py',196),
  ('FUNCION -> TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FUNCION',8,'p_funcion','ascendente.py',202),
  ('PARAMETROS -> LISTA_PARAMETROS','PARAMETROS',1,'p_parametros','ascendente.py',208),
  ('PARAMETROS -> <empty>','PARAMETROS',0,'p_parametros','ascendente.py',209),
  ('LISTA_PARAMETROS -> LISTA_PARAMETROS coma CARACTERISTICA','LISTA_PARAMETROS',3,'p_lista_parametros','ascendente.py',215),
  ('LISTA_PARAMETROS -> CARACTERISTICA','LISTA_PARAMETROS',1,'p_lista_parametros','ascendente.py',216),
  ('CARACTERISTICA -> TIPO IDENTIFICADORES','CARACTERISTICA',2,'p_caracteristica','ascendente.py',222),
  ('IDENTIFICADORES -> asterisco asterisco identificador','IDENTIFICADORES',3,'p_identificadores','ascendente.py',228),
  ('IDENTIFICADORES -> asterisco identificador','IDENTIFICADORES',2,'p_identificadores','ascendente.py',229),
  ('IDENTIFICADORES -> identificador','IDENTIFICADORES',1,'p_identificadores','ascendente.py',230),
  ('IDENTIFICADORES -> parentesis_abre IDENTIFICADORES parentesis_cierra','IDENTIFICADORES',3,'p_identificadores','ascendente.py',231),
  ('CUERPO_LOCAL -> LISTA_LOCAL','CUERPO_LOCAL',1,'p_cuerpo_local','ascendente.py',237),
  ('CUERPO_LOCAL -> <empty>','CUERPO_LOCAL',0,'p_cuerpo_local','ascendente.py',238),
  ('LISTA_LOCAL -> LISTA_LOCAL INSTRUCCION_LOCAL','LISTA_LOCAL',2,'p_lista_local','ascendente.py',244),
  ('LISTA_LOCAL -> INSTRUCCION_LOCAL','LISTA_LOCAL',1,'p_lista_local','ascendente.py',245),
  ('INSTRUCCION_LOCAL -> ETIQUETA','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',251),
  ('INSTRUCCION_LOCAL -> SALTO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',252),
  ('INSTRUCCION_LOCAL -> DECLARACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',253),
  ('INSTRUCCION_LOCAL -> ASIGNACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',254),
  ('INSTRUCCION_LOCAL -> IF','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',255),
  ('INSTRUCCION_LOCAL -> SWITCH','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',256),
  ('INSTRUCCION_LOCAL -> WHILE','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',257),
  ('INSTRUCCION_LOCAL -> DO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',258),
  ('INSTRUCCION_LOCAL -> FOR','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',259),
  ('INSTRUCCION_LOCAL -> _continue punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',260),
  ('INSTRUCCION_LOCAL -> _break punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',261),
  ('INSTRUCCION_LOCAL -> _return EXPRESION punto_coma','INSTRUCCION_LOCAL',3,'p_instruccion_local','ascendente.py',262),
  ('ETIQUETA -> identificador dos_puntos','ETIQUETA',2,'p_etiqueta','ascendente.py',268),
  ('SALTO -> _goto identificador punto_coma','SALTO',3,'p_salto','ascendente.py',274),
  ('DECLARACION -> TIPO LISTA_DECLARACION','DECLARACION',2,'p_declaracion','ascendente.py',280),
  ('LISTA_DECLARACION -> LISTA_DECLARACION coma DECLARACION_FINAL','LISTA_DECLARACION',3,'p_lista_declaracion','ascendente.py',286),
  ('LISTA_DECLARACION -> DECLARACION_FINAL','LISTA_DECLARACION',1,'p_lista_declaracion','ascendente.py',287),
  ('DECLARACION_FINAL -> IDENTIFICADORES INDICES igual EXPRESION','DECLARACION_FINAL',4,'p_declaracion_final','ascendente.py',293),
  ('DECLARACION_FINAL -> IDENTIFICADORES INDICES','DECLARACION_FINAL',2,'p_declaracion_final','ascendente.py',294),
  ('INDICES -> ACCESOS','INDICES',1,'p_indices','ascendente.py',300),
  ('INDICES -> <empty>','INDICES',0,'p_indices','ascendente.py',301),
  ('ACCESOS -> ACCESOS ACCESO','ACCESOS',2,'p_accesos','ascendente.py',307),
  ('ACCESOS -> ACCESO','ACCESOS',1,'p_accesos','ascendente.py',308),
  ('ACCESO -> corchete_abre EXPRESION corchete_cierra','ACCESO',3,'p_acceso','ascendente.py',314),
  ('ACCESO -> corchete_abre corchete_cierra','ACCESO',2,'p_acceso','ascendente.py',315),
  ('ASIGNACION -> IDENTIFICADORES INDICES COMPUESTO EXPRESION','ASIGNACION',4,'p_asignacion','ascendente.py',321),
  ('ASIGNACION -> IDENTIFICADORES INDICES punto identificador COMPUESTO EXPRESION','ASIGNACION',6,'p_asignacion','ascendente.py',322),
  ('ASIGNACION -> IDENTIFICADORES INDICES menos mayor identificador COMPUESTO EXPRESION','ASIGNACION',7,'p_asignacion','ascendente.py',323),
  ('ASIGNACION -> IDENTIFICADORES mas mas','ASIGNACION',3,'p_asignacion','ascendente.py',324),
  ('ASIGNACION -> IDENTIFICADORES menos menos','ASIGNACION',3,'p_asignacion','ascendente.py',325),
  ('COMPUESTO -> igual','COMPUESTO',1,'p_compuesto','ascendente.py',331),
  ('COMPUESTO -> mas igual','COMPUESTO',2,'p_compuesto','ascendente.py',332),
  ('COMPUESTO -> asterisco igual','COMPUESTO',2,'p_compuesto','ascendente.py',333),
  ('COMPUESTO -> division igual','COMPUESTO',2,'p_compuesto','ascendente.py',334),
  ('COMPUESTO -> porcentaje igual','COMPUESTO',2,'p_compuesto','ascendente.py',335),
  ('COMPUESTO -> menor menor igual','COMPUESTO',3,'p_compuesto','ascendente.py',336),
  ('COMPUESTO -> mayor mayor igual','COMPUESTO',3,'p_compuesto','ascendente.py',337),
  ('COMPUESTO -> et igual','COMPUESTO',2,'p_compuesto','ascendente.py',338),
  ('COMPUESTO -> elevado igual','COMPUESTO',2,'p_compuesto','ascendente.py',339),
  ('COMPUESTO -> pleca igual','COMPUESTO',2,'p_compuesto','ascendente.py',340),
  ('IF -> _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE','IF',9,'p_if','ascendente.py',346),
  ('ELSEIFS -> LISTA_ELSEIF','ELSEIFS',1,'p_elseifs','ascendente.py',352),
  ('ELSEIFS -> <empty>','ELSEIFS',0,'p_elseifs','ascendente.py',353),
  ('LISTA_ELSEIF -> LISTA_ELSEIF ELSEIF','LISTA_ELSEIF',2,'p_lista_elseif','ascendente.py',359),
  ('LISTA_ELSEIF -> ELSEIF','LISTA_ELSEIF',1,'p_lista_elseif','ascendente.py',360),
  ('ELSEIF -> _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','ELSEIF',7,'p_elseif','ascendente.py',366),
  ('ELSE -> _else llave_abre CUERPO_LOCAL llave_cierra','ELSE',4,'p_else','ascendente.py',372),
  ('SWITCH -> _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra','SWITCH',8,'p_switch','ascendente.py',378),
  ('CASES -> LISTA_CASE','CASES',1,'p_cases','ascendente.py',384),
  ('CASES -> <empty>','CASES',0,'p_cases','ascendente.py',385),
  ('LISTA_CASE -> LISTA_CASE CASE','LISTA_CASE',2,'p_lista_case','ascendente.py',391),
  ('LISTA_CASE -> CASE','LISTA_CASE',1,'p_lista_case','ascendente.py',392),
  ('CASE -> _case EXPRESION dos_puntos CUERPO_LOCAL','CASE',4,'p_case','ascendente.py',398),
  ('DEFAULT_CASE -> _default dos_puntos CUERPO_LOCAL','DEFAULT_CASE',3,'p_default_case','ascendente.py',404),
  ('WHILE -> _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','WHILE',7,'p_while','ascendente.py',410),
  ('DO -> _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma','DO',9,'p_do','ascendente.py',416),
  ('FOR -> _for parentesis_abre DECLARACION punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FOR',11,'p_for','ascendente.py',422),
  ('EXPRESION -> EXPRESION mas EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',428),
  ('EXPRESION -> EXPRESION menos EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',429),
  ('EXPRESION -> EXPRESION asterisco EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',430),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',431),
  ('EXPRESION -> EXPRESION porcentaje EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',432),
  ('EXPRESION -> EXPRESION igual igual EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',433),
  ('EXPRESION -> EXPRESION exclamacion igual EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',434),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',435),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',436),
  ('EXPRESION -> EXPRESION mayor igual EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',437),
  ('EXPRESION -> EXPRESION menor igual EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',438),
  ('EXPRESION -> EXPRESION et et EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',439),
  ('EXPRESION -> EXPRESION pleca pleca EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',440),
  ('EXPRESION -> EXPRESION menor menor EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',441),
  ('EXPRESION -> EXPRESION mayor mayor EXPRESION','EXPRESION',4,'p_expresion','ascendente.py',442),
  ('EXPRESION -> EXPRESION et EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',443),
  ('EXPRESION -> EXPRESION elevado EXPRESION','EXPRESION',3,'p_expresion','ascendente.py',444),
  ('EXPRESION -> EXPRESION pregunta EXPRESION dos_puntos EXPRESION','EXPRESION',5,'p_expresion','ascendente.py',445),
  ('EXPRESION -> menos EXPRESION','EXPRESION',2,'p_expresion','ascendente.py',446),
  ('EXPRESION -> exclamacion EXPRESION','EXPRESION',2,'p_expresion','ascendente.py',447),
  ('EXPRESION -> virgulilla EXPRESION','EXPRESION',2,'p_expresion','ascendente.py',448),
  ('EXPRESION -> parentesis_abre TIPO asterisco parentesis_cierra _malloc parentesis_abre _sizeof parentesis_abre TIPO parentesis_cierra parentesis_cierra','EXPRESION',11,'p_expresion','ascendente.py',449),
  ('EXPRESION -> identificador','EXPRESION',1,'p_expresion','ascendente.py',450),
  ('EXPRESION -> identificador parentesis_abre EXPRESIONES parentesis_cierra','EXPRESION',4,'p_expresion','ascendente.py',451),
  ('EXPRESION -> identificador punto identificador','EXPRESION',3,'p_expresion','ascendente.py',452),
  ('EXPRESION -> identificador ACCESOS','EXPRESION',2,'p_expresion','ascendente.py',453),
  ('EXPRESION -> identificador menos mayor identificador','EXPRESION',4,'p_expresion','ascendente.py',454),
  ('EXPRESION -> et identificador','EXPRESION',2,'p_expresion','ascendente.py',455),
  ('EXPRESION -> llave_abre EXPRESIONES llave_cierra','EXPRESION',3,'p_expresion','ascendente.py',456),
  ('EXPRESION -> caracter','EXPRESION',1,'p_expresion','ascendente.py',457),
  ('EXPRESION -> cadena','EXPRESION',1,'p_expresion','ascendente.py',458),
  ('EXPRESION -> entero','EXPRESION',1,'p_expresion','ascendente.py',459),
  ('EXPRESION -> decimal','EXPRESION',1,'p_expresion','ascendente.py',460),
  ('EXPRESIONES -> LISTA_EXPRESIONES','EXPRESIONES',1,'p_expresiones','ascendente.py',466),
  ('EXPRESIONES -> <empty>','EXPRESIONES',0,'p_expresiones','ascendente.py',467),
  ('LISTA_EXPRESIONES -> LISTA_EXPRESIONES coma EXPRESION','LISTA_EXPRESIONES',3,'p_lista_expresiones','ascendente.py',473),
  ('LISTA_EXPRESIONES -> EXPRESION','LISTA_EXPRESIONES',1,'p_lista_expresiones','ascendente.py',474),
  ('TIPO -> _int','TIPO',1,'p_tipo','ascendente.py',480),
  ('TIPO -> _char','TIPO',1,'p_tipo','ascendente.py',481),
  ('TIPO -> _double','TIPO',1,'p_tipo','ascendente.py',482),
  ('TIPO -> _float','TIPO',1,'p_tipo','ascendente.py',483),
  ('TIPO -> _struct identificador','TIPO',2,'p_tipo','ascendente.py',484),
  ('TIPO -> _void','TIPO',1,'p_tipo','ascendente.py',485),
]
