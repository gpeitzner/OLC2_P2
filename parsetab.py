
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftcomarightNIVEL14rightNIVEL13leftorleftandleftplecaleftelevadoleftetleftequivaledistintoleftmayormenormayor_igualmenor_igualleftdesplazamiento_izquierdodesplazamiento_derecholeftmasmenosleftasteriscodivisionporcentajerightNIVEL2leftparentesis_abreparentesis_cierracorchete_abrecorchete_cierra_break _case _char _continue _default _do _double _else _elseif _float _for _goto _if _int _printf _return _scanf _sizeof _struct _switch _void _while and asterisco aumento cadena caracter coma corchete_abre corchete_cierra decimal decremento desplazamiento_derecho desplazamiento_izquierdo distinto division dos_puntos elevado entero equivale et exclamacion identificador igual llave_abre llave_cierra mas mayor mayor_igual menor menor_igual menos or parentesis_abre parentesis_cierra pleca porcentaje pregunta punto punto_coma virgulilla\n    INIT   :   CUERPO_GLOBAL\n    \n    CUERPO_GLOBAL   :   LISTA_GLOBAL\n    \n    CUERPO_GLOBAL   :\n    \n    LISTA_GLOBAL    :   LISTA_GLOBAL INSTRUCCION_GLOBAL\n    \n    LISTA_GLOBAL    :   INSTRUCCION_GLOBAL\n    \n    INSTRUCCION_GLOBAL  :   DECLARACION punto_coma\n                        |   ESTRUCTURA punto_coma\n                        |   FUNCION\n    \n    ESTRUCTURA  :   _struct identificador llave_abre CARACTERISTICAS llave_cierra\n    \n    CARACTERISTICAS :   LISTA_CARACTERISTICAS\n    \n    CARACTERISTICAS :\n    \n    LISTA_CARACTERISTICAS   :   LISTA_CARACTERISTICAS CARACTERISTICA\n    \n    LISTA_CARACTERISTICAS : CARACTERISTICA\n    \n    CARACTERISTICA  :   DECLARACION punto_coma\n    \n    FUNCION    :   TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    PARAMETROS  :   LISTA_PARAMETROS\n    \n    PARAMETROS  :\n    \n    LISTA_PARAMETROS    :   LISTA_PARAMETROS coma PARAMETRO\n    \n    LISTA_PARAMETROS    :   PARAMETRO\n    \n    PARAMETRO   :   TIPO identificador\n    \n    PARAMETRO   :   TIPO et identificador\n    \n    CUERPO_LOCAL    :   LISTA_LOCAL\n    \n    CUERPO_LOCAL    :\n    \n    LISTA_LOCAL :   LISTA_LOCAL INSTRUCCION_LOCAL\n    \n    LISTA_LOCAL :   INSTRUCCION_LOCAL\n    \n    INSTRUCCION_LOCAL   :   ETIQUETA\n                        |   SALTO\n                        |   DECLARACION punto_coma\n                        |   ASIGNACION punto_coma\n                        |   IF\n                        |   SWITCH\n                        |   WHILE\n                        |   DO\n                        |   FOR\n                        |   METODO punto_coma\n                        |   PRINT punto_coma\n    \n    PRINT   :   _printf parentesis_abre LISTA_EXPRESIONES parentesis_cierra\n    \n    INSTRUCCION_LOCAL   :   _continue punto_coma\n    \n    INSTRUCCION_LOCAL   :   _break punto_coma\n    \n    INSTRUCCION_LOCAL   :   _return EXPRESION punto_coma\n    \n    INSTRUCCION_LOCAL   :   _return punto_coma\n    \n    METODO  :   identificador parentesis_abre EXPRESIONES parentesis_cierra \n    \n    ETIQUETA    :   identificador dos_puntos\n    \n    SALTO   :   _goto identificador punto_coma\n    \n    DECLARACION :   TIPO LISTA_DECLARACION\n    \n    LISTA_DECLARACION   :   LISTA_DECLARACION coma DECLARACION_FINAL\n    \n    LISTA_DECLARACION   :   DECLARACION_FINAL\n    \n    DECLARACION_FINAL   :   identificador INDICES\n    \n    DECLARACION_FINAL   :   identificador INDICES igual EXPRESION\n    \n    INDICES :   ACCESOS\n    \n    INDICES :\n    \n    ACCESOS :   ACCESOS ACCESO\n    \n    ACCESOS :   ACCESO\n    \n    ACCESO  :   corchete_abre EXPRESION corchete_cierra \n    \n    ACCESO : corchete_abre corchete_cierra\n    \n    ASIGNACION  :   identificador INDICES COMPUESTO EXPRESION \n    \n    ASIGNACION  :   identificador INDICES punto identificador COMPUESTO EXPRESION \n    \n    ASIGNACION  :   identificador aumento %prec NIVEL2\n    \n    ASIGNACION  :   identificador decremento %prec NIVEL2\n    \n    COMPUESTO   :   igual %prec NIVEL14\n                |   mas igual %prec NIVEL14\n                |   asterisco igual %prec NIVEL14\n                |   division igual %prec NIVEL14\n                |   porcentaje igual %prec NIVEL14\n                |   desplazamiento_izquierdo igual %prec NIVEL14\n                |   desplazamiento_derecho igual %prec NIVEL14\n                |   et igual %prec NIVEL14\n                |   elevado igual %prec NIVEL14\n                |   pleca igual %prec NIVEL14\n    \n    IF  :   _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE\n    \n    ELSEIFS :   LISTA_ELSEIF\n    \n    ELSEIFS :\n    \n    LISTA_ELSEIF    :   LISTA_ELSEIF ELSEIF\n    \n    LISTA_ELSEIF    :   ELSEIF\n    \n    ELSEIF  :   _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    ELSE    :   _else llave_abre CUERPO_LOCAL llave_cierra\n    \n    ELSE    :\n    \n    SWITCH  :   _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra\n    \n    CASES   :   LISTA_CASE\n    \n    CASES   :\n    \n    LISTA_CASE  :   LISTA_CASE CASE\n    \n    LISTA_CASE  :   CASE\n    \n    CASE    :   _case EXPRESION dos_puntos CUERPO_LOCAL\n    \n    DEFAULT_CASE    :   _default dos_puntos CUERPO_LOCAL\n    \n    DEFAULT_CASE    :\n    \n    WHILE   :   _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    DO  :   _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma\n    \n    FOR :   _for parentesis_abre INICIO_FOR punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra\n    \n    INICIO_FOR  :   DECLARACION\n                |   ASIGNACION\n    \n    EXPRESION   :   EXPRESION mas EXPRESION \n                |   EXPRESION menos EXPRESION\n                |   EXPRESION asterisco EXPRESION\n                |   EXPRESION division EXPRESION \n                |   EXPRESION porcentaje EXPRESION \n    \n    EXPRESION   :   EXPRESION equivale EXPRESION \n                |   EXPRESION distinto EXPRESION\n                |   EXPRESION mayor EXPRESION \n                |   EXPRESION menor EXPRESION \n                |   EXPRESION mayor_igual EXPRESION \n                |   EXPRESION menor_igual EXPRESION\n    \n    EXPRESION   :   EXPRESION and EXPRESION \n                |   EXPRESION or EXPRESION \n    \n    EXPRESION   :   EXPRESION desplazamiento_izquierdo EXPRESION \n                |   EXPRESION desplazamiento_derecho EXPRESION \n                |   EXPRESION et EXPRESION\n                |   EXPRESION pleca EXPRESION\n                |   EXPRESION elevado EXPRESION\n    \n    EXPRESION   :   EXPRESION pregunta EXPRESION dos_puntos EXPRESION %prec NIVEL13\n    \n    EXPRESION   :   menos EXPRESION %prec NIVEL2\n                |   exclamacion EXPRESION %prec NIVEL2\n                |   virgulilla EXPRESION %prec NIVEL2\n    \n    EXPRESION   :   et identificador %prec NIVEL2\n    \n    EXPRESION   :   METODO\n    \n    EXPRESION   :   parentesis_abre EXPRESION parentesis_cierra\n    \n    EXPRESION   :   identificador punto identificador\n    \n    EXPRESION   :   identificador ACCESOS\n    \n    EXPRESION   :   identificador ACCESOS punto identificador\n    \n    EXPRESION   :   llave_abre EXPRESIONES llave_cierra\n    \n    EXPRESION   :   _sizeof parentesis_abre TIPO parentesis_cierra %prec NIVEL2\n    \n    EXPRESION   :   _scanf parentesis_abre parentesis_cierra\n    \n    EXPRESION   :   parentesis_abre TIPO parentesis_cierra EXPRESION %prec NIVEL2\n    EXPRESION  :   caracterEXPRESION  :   cadenaEXPRESION  :   enteroEXPRESION  :   decimalEXPRESION  :   identificador\n    EXPRESIONES :   LISTA_EXPRESIONES\n    \n    EXPRESIONES :\n    \n    LISTA_EXPRESIONES   :   LISTA_EXPRESIONES coma EXPRESION\n    \n    LISTA_EXPRESIONES   :   EXPRESION\n    \n    TIPO    :   _int\n            |   _char\n            |   _double\n            |   _float\n            |   _void\n    \n    TIPO    :   _struct identificador\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,7,15,16,17,168,],[-3,0,-1,-2,-5,-8,-4,-6,-7,-15,]),'_struct':([0,3,4,7,15,16,17,23,28,46,55,56,62,97,100,101,103,135,136,137,138,141,142,143,144,145,164,168,169,170,171,172,173,174,175,177,182,183,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[9,9,-5,-8,-4,-6,-7,35,35,35,35,-13,35,35,-12,-14,35,35,-25,-26,-27,-30,-31,-32,-33,-34,-43,-15,-24,-28,-29,-35,-36,-38,-39,-41,35,35,-40,-44,35,35,-72,-86,-77,-71,-74,-78,35,35,-70,-73,-87,35,35,-88,-76,35,-75,]),'_int':([0,3,4,7,15,16,17,23,28,46,55,56,62,97,100,101,103,135,136,137,138,141,142,143,144,145,164,168,169,170,171,172,173,174,175,177,182,183,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[10,10,-5,-8,-4,-6,-7,10,10,10,10,-13,10,10,-12,-14,10,10,-25,-26,-27,-30,-31,-32,-33,-34,-43,-15,-24,-28,-29,-35,-36,-38,-39,-41,10,10,-40,-44,10,10,-72,-86,-77,-71,-74,-78,10,10,-70,-73,-87,10,10,-88,-76,10,-75,]),'_char':([0,3,4,7,15,16,17,23,28,46,55,56,62,97,100,101,103,135,136,137,138,141,142,143,144,145,164,168,169,170,171,172,173,174,175,177,182,183,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[11,11,-5,-8,-4,-6,-7,11,11,11,11,-13,11,11,-12,-14,11,11,-25,-26,-27,-30,-31,-32,-33,-34,-43,-15,-24,-28,-29,-35,-36,-38,-39,-41,11,11,-40,-44,11,11,-72,-86,-77,-71,-74,-78,11,11,-70,-73,-87,11,11,-88,-76,11,-75,]),'_double':([0,3,4,7,15,16,17,23,28,46,55,56,62,97,100,101,103,135,136,137,138,141,142,143,144,145,164,168,169,170,171,172,173,174,175,177,182,183,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[12,12,-5,-8,-4,-6,-7,12,12,12,12,-13,12,12,-12,-14,12,12,-25,-26,-27,-30,-31,-32,-33,-34,-43,-15,-24,-28,-29,-35,-36,-38,-39,-41,12,12,-40,-44,12,12,-72,-86,-77,-71,-74,-78,12,12,-70,-73,-87,12,12,-88,-76,12,-75,]),'_float':([0,3,4,7,15,16,17,23,28,46,55,56,62,97,100,101,103,135,136,137,138,141,142,143,144,145,164,168,169,170,171,172,173,174,175,177,182,183,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[13,13,-5,-8,-4,-6,-7,13,13,13,13,-13,13,13,-12,-14,13,13,-25,-26,-27,-30,-31,-32,-33,-34,-43,-15,-24,-28,-29,-35,-36,-38,-39,-41,13,13,-40,-44,13,13,-72,-86,-77,-71,-74,-78,13,13,-70,-73,-87,13,13,-88,-76,13,-75,]),'_void':([0,3,4,7,15,16,17,23,28,46,55,56,62,97,100,101,103,135,136,137,138,141,142,143,144,145,164,168,169,170,171,172,173,174,175,177,182,183,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[14,14,-5,-8,-4,-6,-7,14,14,14,14,-13,14,14,-12,-14,14,14,-25,-26,-27,-30,-31,-32,-33,-34,-43,-15,-24,-28,-29,-35,-36,-38,-39,-41,14,14,-40,-44,14,14,-72,-86,-77,-71,-74,-78,14,14,-70,-73,-87,14,14,-88,-76,14,-75,]),'punto_coma':([5,6,18,19,20,24,25,26,29,30,37,39,44,45,50,51,52,53,57,64,65,85,86,87,88,90,99,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,127,129,132,139,140,146,147,148,149,150,159,160,161,163,166,167,176,178,185,204,205,206,209,225,231,232,256,],[16,17,-45,-51,-47,-48,-50,-53,-46,-51,-52,-55,-127,-114,-123,-124,-125,-126,101,-49,-54,-110,-113,-111,-112,-117,-9,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-116,-115,-119,-121,170,171,172,173,174,175,177,-118,-42,-122,-120,-58,-59,198,199,-109,224,-90,-89,-56,-37,240,-57,264,]),'identificador':([8,9,10,11,12,13,14,21,22,27,31,35,36,40,41,42,43,46,47,58,60,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,91,103,125,128,130,135,136,137,138,141,142,143,144,145,150,151,158,164,169,170,171,172,173,174,175,177,179,180,181,182,183,184,186,187,188,198,199,211,212,213,214,215,216,217,218,219,224,226,227,229,237,239,240,241,246,249,250,251,253,254,255,258,260,261,264,265,266,271,272,273,275,],[19,21,-132,-133,-134,-135,-136,-137,30,44,59,63,44,44,86,44,44,44,44,30,102,-137,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,124,44,133,159,44,44,133,-25,-26,-27,-30,-31,-32,-33,-34,44,178,44,-43,-24,-28,-29,-35,-36,-38,-39,-41,44,44,44,133,207,44,44,210,-60,-40,-44,-61,-62,-63,-64,-65,-66,-67,-68,-69,44,44,133,133,44,44,207,-72,-86,-77,-71,-74,-78,133,133,-70,-73,44,-87,133,133,-88,-76,133,-75,]),'et':([10,11,12,13,14,25,26,27,31,36,37,38,39,40,42,43,44,45,46,47,50,51,52,53,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,128,129,130,132,133,150,158,159,160,161,162,163,165,176,179,180,181,184,185,186,188,200,201,202,207,209,210,211,212,213,214,215,216,217,218,219,224,226,231,232,237,239,245,247,261,267,],[-132,-133,-134,-135,-136,-50,-53,41,60,41,-52,81,-55,41,41,41,-127,-114,41,41,-123,-124,-125,-126,-137,81,-54,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-110,-113,-111,-112,-117,41,81,81,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,81,81,-104,-105,-106,81,81,81,-116,-115,41,-119,41,-121,-51,41,41,-118,-42,-122,81,-120,195,81,41,41,41,41,81,41,-60,81,81,81,-51,81,195,-61,-62,-63,-64,-65,-66,-67,-68,-69,41,41,81,81,41,41,81,81,41,81,]),'parentesis_cierra':([10,11,12,13,14,23,26,32,33,34,37,39,44,45,50,51,52,53,59,63,65,85,86,87,88,90,91,92,93,95,96,98,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,127,129,131,132,159,160,161,162,163,166,167,185,200,201,202,208,209,232,247,248,267,],[-132,-133,-134,-135,-136,-17,-53,61,-16,-19,-52,-55,-127,-114,-123,-124,-125,-126,-20,-137,-54,-110,-113,-111,-112,-117,-129,127,128,-128,-131,132,-21,-18,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-116,160,-115,-119,163,-121,-118,-42,-122,-130,-120,-58,-59,-109,220,221,222,225,-56,-57,256,257,270,]),'coma':([18,19,20,24,25,26,29,30,33,34,37,39,44,45,50,51,52,53,59,64,65,85,86,87,88,90,95,96,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,127,129,132,159,160,161,162,163,185,208,],[22,-51,-47,-48,-50,-53,-46,-51,62,-19,-52,-55,-127,-114,-123,-124,-125,-126,-20,-49,-54,-110,-113,-111,-112,-117,130,-131,-21,-18,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-116,-115,-119,-121,-118,-42,-122,-130,-120,-109,130,]),'parentesis_abre':([19,27,36,40,42,43,44,46,47,48,49,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,128,130,133,150,152,153,154,156,157,158,179,180,181,184,186,188,211,212,213,214,215,216,217,218,219,224,226,230,237,239,252,261,],[23,46,46,46,46,46,91,46,46,97,98,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,91,46,179,180,181,183,184,46,46,46,46,46,46,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,46,46,239,46,46,261,46,]),'igual':([19,24,25,26,30,37,39,65,133,165,189,190,191,192,193,194,195,196,197,207,210,],[-51,36,-50,-53,-51,-52,-55,-54,-51,188,211,212,213,214,215,216,217,218,219,-51,188,]),'corchete_abre':([19,25,26,30,37,39,44,65,90,133,207,],[27,27,-53,27,-52,-55,27,-54,27,27,27,]),'llave_abre':([21,27,36,40,42,43,46,47,61,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,128,130,150,155,158,179,180,181,184,186,188,211,212,213,214,215,216,217,218,219,220,221,222,224,226,237,239,257,259,261,270,],[28,47,47,47,47,47,47,47,103,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,182,47,47,47,47,47,47,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,227,228,229,47,47,47,47,265,266,47,273,]),'punto':([25,26,37,39,44,65,90,133,165,207,],[-50,-53,-52,-55,89,-54,125,-51,187,-51,]),'mas':([25,26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,133,159,160,161,162,163,165,176,185,200,201,202,207,209,210,231,232,245,247,267,],[-50,-53,-52,66,-55,-127,-114,-123,-124,-125,-126,66,-54,-110,-113,-111,-112,-117,66,66,-91,-92,-93,-94,-95,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-116,-115,-119,-121,-51,-118,-42,-122,66,-120,189,66,66,66,66,66,-51,66,189,66,66,66,66,66,]),'asterisco':([25,26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,133,159,160,161,162,163,165,176,185,200,201,202,207,209,210,231,232,245,247,267,],[-50,-53,-52,68,-55,-127,-114,-123,-124,-125,-126,68,-54,-110,-113,-111,-112,-117,68,68,68,68,-93,-94,-95,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-116,-115,-119,-121,-51,-118,-42,-122,68,-120,190,68,68,68,68,68,-51,68,190,68,68,68,68,68,]),'division':([25,26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,133,159,160,161,162,163,165,176,185,200,201,202,207,209,210,231,232,245,247,267,],[-50,-53,-52,69,-55,-127,-114,-123,-124,-125,-126,69,-54,-110,-113,-111,-112,-117,69,69,69,69,-93,-94,-95,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-116,-115,-119,-121,-51,-118,-42,-122,69,-120,191,69,69,69,69,69,-51,69,191,69,69,69,69,69,]),'porcentaje':([25,26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,133,159,160,161,162,163,165,176,185,200,201,202,207,209,210,231,232,245,247,267,],[-50,-53,-52,70,-55,-127,-114,-123,-124,-125,-126,70,-54,-110,-113,-111,-112,-117,70,70,70,70,-93,-94,-95,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-116,-115,-119,-121,-51,-118,-42,-122,70,-120,192,70,70,70,70,70,-51,70,192,70,70,70,70,70,]),'desplazamiento_izquierdo':([25,26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,133,159,160,161,162,163,165,176,185,200,201,202,207,209,210,231,232,245,247,267,],[-50,-53,-52,79,-55,-127,-114,-123,-124,-125,-126,79,-54,-110,-113,-111,-112,-117,79,79,-91,-92,-93,-94,-95,79,79,79,79,79,79,79,79,-104,-105,79,79,79,79,-116,-115,-119,-121,-51,-118,-42,-122,79,-120,193,79,79,79,79,79,-51,79,193,79,79,79,79,79,]),'desplazamiento_derecho':([25,26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,133,159,160,161,162,163,165,176,185,200,201,202,207,209,210,231,232,245,247,267,],[-50,-53,-52,80,-55,-127,-114,-123,-124,-125,-126,80,-54,-110,-113,-111,-112,-117,80,80,-91,-92,-93,-94,-95,80,80,80,80,80,80,80,80,-104,-105,80,80,80,80,-116,-115,-119,-121,-51,-118,-42,-122,80,-120,194,80,80,80,80,80,-51,80,194,80,80,80,80,80,]),'elevado':([25,26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,133,159,160,161,162,163,165,176,185,200,201,202,207,209,210,231,232,245,247,267,],[-50,-53,-52,83,-55,-127,-114,-123,-124,-125,-126,83,-54,-110,-113,-111,-112,-117,83,83,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,83,83,-104,-105,-106,83,-108,83,-116,-115,-119,-121,-51,-118,-42,-122,83,-120,196,83,83,83,83,83,-51,83,196,83,83,83,83,83,]),'pleca':([25,26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,133,159,160,161,162,163,165,176,185,200,201,202,207,209,210,231,232,245,247,267,],[-50,-53,-52,82,-55,-127,-114,-123,-124,-125,-126,82,-54,-110,-113,-111,-112,-117,82,82,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,82,82,-104,-105,-106,-107,-108,82,-116,-115,-119,-121,-51,-118,-42,-122,82,-120,197,82,82,82,82,82,-51,82,197,82,82,82,82,82,]),'corchete_cierra':([26,27,37,38,39,44,45,50,51,52,53,65,85,86,87,88,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,127,129,132,159,160,161,163,185,],[-53,39,-52,65,-55,-127,-114,-123,-124,-125,-126,-54,-110,-113,-111,-112,-117,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-116,-115,-119,-121,-118,-42,-122,-120,-109,]),'menos':([26,27,36,37,38,39,40,42,43,44,45,46,47,50,51,52,53,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,128,129,130,132,150,158,159,160,161,162,163,176,179,180,181,184,185,186,188,200,201,202,209,211,212,213,214,215,216,217,218,219,224,226,231,232,237,239,245,247,261,267,],[-53,40,40,-52,67,-55,40,40,40,-127,-114,40,40,-123,-124,-125,-126,67,-54,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-110,-113,-111,-112,-117,40,67,67,-91,-92,-93,-94,-95,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-116,-115,40,-119,40,-121,40,40,-118,-42,-122,67,-120,67,40,40,40,40,67,40,-60,67,67,67,67,-61,-62,-63,-64,-65,-66,-67,-68,-69,40,40,67,67,40,40,67,67,40,67,]),'equivale':([26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,159,160,161,162,163,176,185,200,201,202,209,231,232,245,247,267,],[-53,-52,71,-55,-127,-114,-123,-124,-125,-126,71,-54,-110,-113,-111,-112,-117,71,71,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,71,71,-104,-105,71,71,71,71,-116,-115,-119,-121,-118,-42,-122,71,-120,71,71,71,71,71,71,71,71,71,71,71,]),'distinto':([26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,159,160,161,162,163,176,185,200,201,202,209,231,232,245,247,267,],[-53,-52,72,-55,-127,-114,-123,-124,-125,-126,72,-54,-110,-113,-111,-112,-117,72,72,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,72,72,-104,-105,72,72,72,72,-116,-115,-119,-121,-118,-42,-122,72,-120,72,72,72,72,72,72,72,72,72,72,72,]),'mayor':([26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,159,160,161,162,163,176,185,200,201,202,209,231,232,245,247,267,],[-53,-52,73,-55,-127,-114,-123,-124,-125,-126,73,-54,-110,-113,-111,-112,-117,73,73,-91,-92,-93,-94,-95,73,73,-98,-99,-100,-101,73,73,-104,-105,73,73,73,73,-116,-115,-119,-121,-118,-42,-122,73,-120,73,73,73,73,73,73,73,73,73,73,73,]),'menor':([26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,159,160,161,162,163,176,185,200,201,202,209,231,232,245,247,267,],[-53,-52,74,-55,-127,-114,-123,-124,-125,-126,74,-54,-110,-113,-111,-112,-117,74,74,-91,-92,-93,-94,-95,74,74,-98,-99,-100,-101,74,74,-104,-105,74,74,74,74,-116,-115,-119,-121,-118,-42,-122,74,-120,74,74,74,74,74,74,74,74,74,74,74,]),'mayor_igual':([26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,159,160,161,162,163,176,185,200,201,202,209,231,232,245,247,267,],[-53,-52,75,-55,-127,-114,-123,-124,-125,-126,75,-54,-110,-113,-111,-112,-117,75,75,-91,-92,-93,-94,-95,75,75,-98,-99,-100,-101,75,75,-104,-105,75,75,75,75,-116,-115,-119,-121,-118,-42,-122,75,-120,75,75,75,75,75,75,75,75,75,75,75,]),'menor_igual':([26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,159,160,161,162,163,176,185,200,201,202,209,231,232,245,247,267,],[-53,-52,76,-55,-127,-114,-123,-124,-125,-126,76,-54,-110,-113,-111,-112,-117,76,76,-91,-92,-93,-94,-95,76,76,-98,-99,-100,-101,76,76,-104,-105,76,76,76,76,-116,-115,-119,-121,-118,-42,-122,76,-120,76,76,76,76,76,76,76,76,76,76,76,]),'and':([26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,159,160,161,162,163,176,185,200,201,202,209,231,232,245,247,267,],[-53,-52,77,-55,-127,-114,-123,-124,-125,-126,77,-54,-110,-113,-111,-112,-117,77,77,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,77,-104,-105,-106,-107,-108,77,-116,-115,-119,-121,-118,-42,-122,77,-120,77,77,77,77,77,77,77,77,77,77,77,]),'or':([26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,159,160,161,162,163,176,185,200,201,202,209,231,232,245,247,267,],[-53,-52,78,-55,-127,-114,-123,-124,-125,-126,78,-54,-110,-113,-111,-112,-117,78,78,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,78,-116,-115,-119,-121,-118,-42,-122,78,-120,78,78,78,78,78,78,78,78,78,78,78,]),'pregunta':([26,37,38,39,44,45,50,51,52,53,64,65,85,86,87,88,90,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,159,160,161,162,163,176,185,200,201,202,209,231,232,245,247,267,],[-53,-52,84,-55,-127,-114,-123,-124,-125,-126,84,-54,-110,-113,-111,-112,-117,84,84,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,84,-116,-115,-119,-121,-118,-42,-122,84,-120,84,-109,84,84,84,84,84,84,84,84,84,]),'llave_cierra':([26,28,37,39,44,45,47,50,51,52,53,54,55,56,65,85,86,87,88,90,94,95,96,100,101,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,127,129,132,134,135,136,137,138,141,142,143,144,145,159,160,161,162,163,164,169,170,171,172,173,174,175,177,182,185,198,199,203,227,228,229,233,234,235,236,238,241,242,244,246,249,250,251,253,254,255,258,260,262,263,264,265,266,268,269,271,272,273,274,275,],[-53,-11,-52,-55,-127,-114,-129,-123,-124,-125,-126,99,-10,-13,-54,-110,-113,-111,-112,-117,129,-128,-131,-12,-14,-23,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-116,-115,-119,-121,168,-22,-25,-26,-27,-30,-31,-32,-33,-34,-118,-42,-122,-130,-120,-43,-24,-28,-29,-35,-36,-38,-39,-41,-23,-109,-40,-44,223,-23,-80,-23,241,-85,-79,-82,246,-72,253,-81,-86,-77,-71,-74,-78,-23,-23,-70,-73,-84,-83,-87,-23,-23,271,272,-88,-76,-23,275,-75,]),'dos_puntos':([26,37,39,44,45,50,51,52,53,65,85,86,87,88,90,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,133,159,160,161,163,185,243,245,],[-53,-52,-55,-127,-114,-123,-124,-125,-126,-54,-110,-113,-111,-112,-117,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,158,-116,-115,-119,-121,164,-118,-42,-122,-120,-109,254,255,]),'exclamacion':([27,36,40,42,43,46,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,128,130,150,158,179,180,181,184,186,188,211,212,213,214,215,216,217,218,219,224,226,237,239,261,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,42,42,42,42,42,]),'virgulilla':([27,36,40,42,43,46,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,128,130,150,158,179,180,181,184,186,188,211,212,213,214,215,216,217,218,219,224,226,237,239,261,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,43,43,43,43,43,]),'_sizeof':([27,36,40,42,43,46,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,128,130,150,158,179,180,181,184,186,188,211,212,213,214,215,216,217,218,219,224,226,237,239,261,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,48,48,48,48,48,]),'_scanf':([27,36,40,42,43,46,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,128,130,150,158,179,180,181,184,186,188,211,212,213,214,215,216,217,218,219,224,226,237,239,261,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,49,49,49,49,49,]),'caracter':([27,36,40,42,43,46,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,128,130,150,158,179,180,181,184,186,188,211,212,213,214,215,216,217,218,219,224,226,237,239,261,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,50,50,50,50,50,]),'cadena':([27,36,40,42,43,46,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,128,130,150,158,179,180,181,184,186,188,211,212,213,214,215,216,217,218,219,224,226,237,239,261,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,51,51,51,51,51,]),'entero':([27,36,40,42,43,46,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,128,130,150,158,179,180,181,184,186,188,211,212,213,214,215,216,217,218,219,224,226,237,239,261,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,52,52,52,52,52,]),'decimal':([27,36,40,42,43,46,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,128,130,150,158,179,180,181,184,186,188,211,212,213,214,215,216,217,218,219,224,226,237,239,261,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,53,53,53,53,53,]),'_continue':([103,135,136,137,138,141,142,143,144,145,164,169,170,171,172,173,174,175,177,182,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[148,148,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,148,-40,-44,148,148,-72,-86,-77,-71,-74,-78,148,148,-70,-73,-87,148,148,-88,-76,148,-75,]),'_break':([103,135,136,137,138,141,142,143,144,145,164,169,170,171,172,173,174,175,177,182,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[149,149,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,149,-40,-44,149,149,-72,-86,-77,-71,-74,-78,149,149,-70,-73,-87,149,149,-88,-76,149,-75,]),'_return':([103,135,136,137,138,141,142,143,144,145,164,169,170,171,172,173,174,175,177,182,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[150,150,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,150,-40,-44,150,150,-72,-86,-77,-71,-74,-78,150,150,-70,-73,-87,150,150,-88,-76,150,-75,]),'_goto':([103,135,136,137,138,141,142,143,144,145,164,169,170,171,172,173,174,175,177,182,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[151,151,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,151,-40,-44,151,151,-72,-86,-77,-71,-74,-78,151,151,-70,-73,-87,151,151,-88,-76,151,-75,]),'_if':([103,135,136,137,138,141,142,143,144,145,164,169,170,171,172,173,174,175,177,182,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[152,152,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,152,-40,-44,152,152,-72,-86,-77,-71,-74,-78,152,152,-70,-73,-87,152,152,-88,-76,152,-75,]),'_switch':([103,135,136,137,138,141,142,143,144,145,164,169,170,171,172,173,174,175,177,182,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[153,153,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,153,-40,-44,153,153,-72,-86,-77,-71,-74,-78,153,153,-70,-73,-87,153,153,-88,-76,153,-75,]),'_while':([103,135,136,137,138,141,142,143,144,145,164,169,170,171,172,173,174,175,177,182,198,199,223,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[154,154,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,154,-40,-44,230,154,154,-72,-86,-77,-71,-74,-78,154,154,-70,-73,-87,154,154,-88,-76,154,-75,]),'_do':([103,135,136,137,138,141,142,143,144,145,164,169,170,171,172,173,174,175,177,182,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[155,155,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,155,-40,-44,155,155,-72,-86,-77,-71,-74,-78,155,155,-70,-73,-87,155,155,-88,-76,155,-75,]),'_for':([103,135,136,137,138,141,142,143,144,145,164,169,170,171,172,173,174,175,177,182,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[156,156,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,156,-40,-44,156,156,-72,-86,-77,-71,-74,-78,156,156,-70,-73,-87,156,156,-88,-76,156,-75,]),'_printf':([103,135,136,137,138,141,142,143,144,145,164,169,170,171,172,173,174,175,177,182,198,199,227,229,241,246,249,250,251,253,254,255,258,260,264,265,266,271,272,273,275,],[157,157,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,157,-40,-44,157,157,-72,-86,-77,-71,-74,-78,157,157,-70,-73,-87,157,157,-88,-76,157,-75,]),'aumento':([133,207,],[166,166,]),'decremento':([133,207,],[167,167,]),'_case':([135,136,137,138,141,142,143,144,145,164,169,170,171,172,173,174,175,177,198,199,228,235,236,241,244,246,249,250,251,253,255,258,260,263,264,271,272,275,],[-22,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,-40,-44,237,237,-82,-72,-81,-86,-77,-71,-74,-78,-23,-70,-73,-83,-87,-88,-76,-75,]),'_default':([135,136,137,138,141,142,143,144,145,164,169,170,171,172,173,174,175,177,198,199,228,234,235,236,241,244,246,249,250,251,253,255,258,260,263,264,271,272,275,],[-22,-25,-26,-27,-30,-31,-32,-33,-34,-43,-24,-28,-29,-35,-36,-38,-39,-41,-40,-44,-80,243,-79,-82,-72,-81,-86,-77,-71,-74,-78,-23,-70,-73,-83,-87,-88,-76,-75,]),'_else':([241,249,250,251,260,275,],[-72,259,-71,-74,-73,-75,]),'_elseif':([241,250,251,260,275,],[252,252,-74,-73,-75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'CUERPO_GLOBAL':([0,],[2,]),'LISTA_GLOBAL':([0,],[3,]),'INSTRUCCION_GLOBAL':([0,3,],[4,15,]),'DECLARACION':([0,3,28,55,103,135,182,183,227,229,254,255,265,266,273,],[5,5,57,57,139,139,139,206,139,139,139,139,139,139,139,]),'ESTRUCTURA':([0,3,],[6,6,]),'FUNCION':([0,3,],[7,7,]),'TIPO':([0,3,23,28,46,55,62,97,103,135,182,183,227,229,254,255,265,266,273,],[8,8,31,58,93,58,31,131,58,58,58,58,58,58,58,58,58,58,58,]),'LISTA_DECLARACION':([8,58,],[18,18,]),'DECLARACION_FINAL':([8,22,58,],[20,29,20,]),'INDICES':([19,30,133,207,],[24,24,165,165,]),'ACCESOS':([19,30,44,133,207,],[25,25,90,25,25,]),'ACCESO':([19,25,30,44,90,133,207,],[26,37,26,26,37,26,26,]),'PARAMETROS':([23,],[32,]),'LISTA_PARAMETROS':([23,],[33,]),'PARAMETRO':([23,62,],[34,104,]),'EXPRESION':([27,36,40,42,43,46,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,128,130,150,158,179,180,181,184,186,224,226,237,239,261,],[38,64,85,87,88,92,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,96,161,162,176,185,200,201,202,96,209,231,232,245,247,267,]),'METODO':([27,36,40,42,43,46,47,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,103,128,130,135,150,158,179,180,181,182,184,186,224,226,227,229,237,239,254,255,261,265,266,273,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,146,45,45,146,45,45,45,45,45,146,45,45,45,45,146,146,45,45,146,146,45,146,146,146,]),'CARACTERISTICAS':([28,],[54,]),'LISTA_CARACTERISTICAS':([28,],[55,]),'CARACTERISTICA':([28,55,],[56,100,]),'EXPRESIONES':([47,91,],[94,126,]),'LISTA_EXPRESIONES':([47,91,184,],[95,95,208,]),'CUERPO_LOCAL':([103,182,227,229,254,255,265,266,273,],[134,203,233,238,262,263,268,269,274,]),'LISTA_LOCAL':([103,182,227,229,254,255,265,266,273,],[135,135,135,135,135,135,135,135,135,]),'INSTRUCCION_LOCAL':([103,135,182,227,229,254,255,265,266,273,],[136,169,136,136,136,136,136,136,136,136,]),'ETIQUETA':([103,135,182,227,229,254,255,265,266,273,],[137,137,137,137,137,137,137,137,137,137,]),'SALTO':([103,135,182,227,229,254,255,265,266,273,],[138,138,138,138,138,138,138,138,138,138,]),'ASIGNACION':([103,135,182,183,227,229,240,254,255,265,266,273,],[140,140,140,205,140,140,248,140,140,140,140,140,]),'IF':([103,135,182,227,229,254,255,265,266,273,],[141,141,141,141,141,141,141,141,141,141,]),'SWITCH':([103,135,182,227,229,254,255,265,266,273,],[142,142,142,142,142,142,142,142,142,142,]),'WHILE':([103,135,182,227,229,254,255,265,266,273,],[143,143,143,143,143,143,143,143,143,143,]),'DO':([103,135,182,227,229,254,255,265,266,273,],[144,144,144,144,144,144,144,144,144,144,]),'FOR':([103,135,182,227,229,254,255,265,266,273,],[145,145,145,145,145,145,145,145,145,145,]),'PRINT':([103,135,182,227,229,254,255,265,266,273,],[147,147,147,147,147,147,147,147,147,147,]),'COMPUESTO':([165,210,],[186,226,]),'INICIO_FOR':([183,],[204,]),'CASES':([228,],[234,]),'LISTA_CASE':([228,],[235,]),'CASE':([228,235,],[236,244,]),'DEFAULT_CASE':([234,],[242,]),'ELSEIFS':([241,],[249,]),'LISTA_ELSEIF':([241,],[250,]),'ELSEIF':([241,250,],[251,260,]),'ELSE':([249,],[258,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> CUERPO_GLOBAL','INIT',1,'p_init','ascendente.py',184),
  ('CUERPO_GLOBAL -> LISTA_GLOBAL','CUERPO_GLOBAL',1,'p_cuerpo_global','ascendente.py',191),
  ('CUERPO_GLOBAL -> <empty>','CUERPO_GLOBAL',0,'p_cuerpo_global_vacio','ascendente.py',198),
  ('LISTA_GLOBAL -> LISTA_GLOBAL INSTRUCCION_GLOBAL','LISTA_GLOBAL',2,'p_lista_global_lista','ascendente.py',205),
  ('LISTA_GLOBAL -> INSTRUCCION_GLOBAL','LISTA_GLOBAL',1,'p_lista_global_instruccion','ascendente.py',213),
  ('INSTRUCCION_GLOBAL -> DECLARACION punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',220),
  ('INSTRUCCION_GLOBAL -> ESTRUCTURA punto_coma','INSTRUCCION_GLOBAL',2,'p_instruccion_global','ascendente.py',221),
  ('INSTRUCCION_GLOBAL -> FUNCION','INSTRUCCION_GLOBAL',1,'p_instruccion_global','ascendente.py',222),
  ('ESTRUCTURA -> _struct identificador llave_abre CARACTERISTICAS llave_cierra','ESTRUCTURA',5,'p_estructura','ascendente.py',229),
  ('CARACTERISTICAS -> LISTA_CARACTERISTICAS','CARACTERISTICAS',1,'p_caracteristicas','ascendente.py',236),
  ('CARACTERISTICAS -> <empty>','CARACTERISTICAS',0,'p_caracteristicas_vacio','ascendente.py',243),
  ('LISTA_CARACTERISTICAS -> LISTA_CARACTERISTICAS CARACTERISTICA','LISTA_CARACTERISTICAS',2,'p_lista_caracteristicas_lista','ascendente.py',250),
  ('LISTA_CARACTERISTICAS -> CARACTERISTICA','LISTA_CARACTERISTICAS',1,'p_lista_caracteristicas_caracteristica','ascendente.py',258),
  ('CARACTERISTICA -> DECLARACION punto_coma','CARACTERISTICA',2,'p_caracteristica','ascendente.py',265),
  ('FUNCION -> TIPO identificador parentesis_abre PARAMETROS parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FUNCION',8,'p_funcion','ascendente.py',272),
  ('PARAMETROS -> LISTA_PARAMETROS','PARAMETROS',1,'p_parametros','ascendente.py',279),
  ('PARAMETROS -> <empty>','PARAMETROS',0,'p_parametros_vacio','ascendente.py',286),
  ('LISTA_PARAMETROS -> LISTA_PARAMETROS coma PARAMETRO','LISTA_PARAMETROS',3,'p_lista_parametros_lista','ascendente.py',293),
  ('LISTA_PARAMETROS -> PARAMETRO','LISTA_PARAMETROS',1,'p_lista_parametros_parametro','ascendente.py',301),
  ('PARAMETRO -> TIPO identificador','PARAMETRO',2,'p_parametro','ascendente.py',308),
  ('PARAMETRO -> TIPO et identificador','PARAMETRO',3,'p_parametro_apuntador','ascendente.py',315),
  ('CUERPO_LOCAL -> LISTA_LOCAL','CUERPO_LOCAL',1,'p_cuerpo_local','ascendente.py',322),
  ('CUERPO_LOCAL -> <empty>','CUERPO_LOCAL',0,'p_cuerpo_local_vacio','ascendente.py',329),
  ('LISTA_LOCAL -> LISTA_LOCAL INSTRUCCION_LOCAL','LISTA_LOCAL',2,'p_lista_local','ascendente.py',336),
  ('LISTA_LOCAL -> INSTRUCCION_LOCAL','LISTA_LOCAL',1,'p_lista_local_instruccion','ascendente.py',344),
  ('INSTRUCCION_LOCAL -> ETIQUETA','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',351),
  ('INSTRUCCION_LOCAL -> SALTO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',352),
  ('INSTRUCCION_LOCAL -> DECLARACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',353),
  ('INSTRUCCION_LOCAL -> ASIGNACION punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',354),
  ('INSTRUCCION_LOCAL -> IF','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',355),
  ('INSTRUCCION_LOCAL -> SWITCH','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',356),
  ('INSTRUCCION_LOCAL -> WHILE','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',357),
  ('INSTRUCCION_LOCAL -> DO','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',358),
  ('INSTRUCCION_LOCAL -> FOR','INSTRUCCION_LOCAL',1,'p_instruccion_local','ascendente.py',359),
  ('INSTRUCCION_LOCAL -> METODO punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',360),
  ('INSTRUCCION_LOCAL -> PRINT punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local','ascendente.py',361),
  ('PRINT -> _printf parentesis_abre LISTA_EXPRESIONES parentesis_cierra','PRINT',4,'p_instruccion_local_print','ascendente.py',368),
  ('INSTRUCCION_LOCAL -> _continue punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local_continue','ascendente.py',375),
  ('INSTRUCCION_LOCAL -> _break punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local_break','ascendente.py',382),
  ('INSTRUCCION_LOCAL -> _return EXPRESION punto_coma','INSTRUCCION_LOCAL',3,'p_instruccion_local_return','ascendente.py',389),
  ('INSTRUCCION_LOCAL -> _return punto_coma','INSTRUCCION_LOCAL',2,'p_instruccion_local_return_vacio','ascendente.py',396),
  ('METODO -> identificador parentesis_abre EXPRESIONES parentesis_cierra','METODO',4,'p_metodo','ascendente.py',403),
  ('ETIQUETA -> identificador dos_puntos','ETIQUETA',2,'p_etiqueta','ascendente.py',410),
  ('SALTO -> _goto identificador punto_coma','SALTO',3,'p_salto','ascendente.py',417),
  ('DECLARACION -> TIPO LISTA_DECLARACION','DECLARACION',2,'p_declaracion','ascendente.py',424),
  ('LISTA_DECLARACION -> LISTA_DECLARACION coma DECLARACION_FINAL','LISTA_DECLARACION',3,'p_lista_declaracion_lista','ascendente.py',431),
  ('LISTA_DECLARACION -> DECLARACION_FINAL','LISTA_DECLARACION',1,'p_lista_declaracion_declaracion','ascendente.py',439),
  ('DECLARACION_FINAL -> identificador INDICES','DECLARACION_FINAL',2,'p_declaracion_final','ascendente.py',446),
  ('DECLARACION_FINAL -> identificador INDICES igual EXPRESION','DECLARACION_FINAL',4,'p_declaracion_final_expresion','ascendente.py',453),
  ('INDICES -> ACCESOS','INDICES',1,'p_indices','ascendente.py',460),
  ('INDICES -> <empty>','INDICES',0,'p_indices_vacio','ascendente.py',467),
  ('ACCESOS -> ACCESOS ACCESO','ACCESOS',2,'p_accesos_lista','ascendente.py',474),
  ('ACCESOS -> ACCESO','ACCESOS',1,'p_accesos_acceso','ascendente.py',482),
  ('ACCESO -> corchete_abre EXPRESION corchete_cierra','ACCESO',3,'p_acceso','ascendente.py',489),
  ('ACCESO -> corchete_abre corchete_cierra','ACCESO',2,'p_acceso_vacio','ascendente.py',496),
  ('ASIGNACION -> identificador INDICES COMPUESTO EXPRESION','ASIGNACION',4,'p_asignacion_normal','ascendente.py',503),
  ('ASIGNACION -> identificador INDICES punto identificador COMPUESTO EXPRESION','ASIGNACION',6,'p_asignacion_estructura','ascendente.py',511),
  ('ASIGNACION -> identificador aumento','ASIGNACION',2,'p_asignacion_aumento','ascendente.py',519),
  ('ASIGNACION -> identificador decremento','ASIGNACION',2,'p_asignacion_decremento','ascendente.py',526),
  ('COMPUESTO -> igual','COMPUESTO',1,'p_compuesto','ascendente.py',533),
  ('COMPUESTO -> mas igual','COMPUESTO',2,'p_compuesto','ascendente.py',534),
  ('COMPUESTO -> asterisco igual','COMPUESTO',2,'p_compuesto','ascendente.py',535),
  ('COMPUESTO -> division igual','COMPUESTO',2,'p_compuesto','ascendente.py',536),
  ('COMPUESTO -> porcentaje igual','COMPUESTO',2,'p_compuesto','ascendente.py',537),
  ('COMPUESTO -> desplazamiento_izquierdo igual','COMPUESTO',2,'p_compuesto','ascendente.py',538),
  ('COMPUESTO -> desplazamiento_derecho igual','COMPUESTO',2,'p_compuesto','ascendente.py',539),
  ('COMPUESTO -> et igual','COMPUESTO',2,'p_compuesto','ascendente.py',540),
  ('COMPUESTO -> elevado igual','COMPUESTO',2,'p_compuesto','ascendente.py',541),
  ('COMPUESTO -> pleca igual','COMPUESTO',2,'p_compuesto','ascendente.py',542),
  ('IF -> _if parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra ELSEIFS ELSE','IF',9,'p_if','ascendente.py',549),
  ('ELSEIFS -> LISTA_ELSEIF','ELSEIFS',1,'p_elseifs','ascendente.py',556),
  ('ELSEIFS -> <empty>','ELSEIFS',0,'p_elseifs_vacio','ascendente.py',563),
  ('LISTA_ELSEIF -> LISTA_ELSEIF ELSEIF','LISTA_ELSEIF',2,'p_lista_elseif_lista','ascendente.py',570),
  ('LISTA_ELSEIF -> ELSEIF','LISTA_ELSEIF',1,'p_lista_elseif_elseif','ascendente.py',578),
  ('ELSEIF -> _elseif parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','ELSEIF',7,'p_elseif','ascendente.py',585),
  ('ELSE -> _else llave_abre CUERPO_LOCAL llave_cierra','ELSE',4,'p_else','ascendente.py',592),
  ('ELSE -> <empty>','ELSE',0,'p_else_vacio','ascendente.py',599),
  ('SWITCH -> _switch parentesis_abre EXPRESION parentesis_cierra llave_abre CASES DEFAULT_CASE llave_cierra','SWITCH',8,'p_switch','ascendente.py',606),
  ('CASES -> LISTA_CASE','CASES',1,'p_cases','ascendente.py',613),
  ('CASES -> <empty>','CASES',0,'p_cases_vacio','ascendente.py',620),
  ('LISTA_CASE -> LISTA_CASE CASE','LISTA_CASE',2,'p_lista_case_lista','ascendente.py',627),
  ('LISTA_CASE -> CASE','LISTA_CASE',1,'p_lista_case_case','ascendente.py',635),
  ('CASE -> _case EXPRESION dos_puntos CUERPO_LOCAL','CASE',4,'p_case','ascendente.py',642),
  ('DEFAULT_CASE -> _default dos_puntos CUERPO_LOCAL','DEFAULT_CASE',3,'p_default_case','ascendente.py',649),
  ('DEFAULT_CASE -> <empty>','DEFAULT_CASE',0,'p_default_case_vacio','ascendente.py',656),
  ('WHILE -> _while parentesis_abre EXPRESION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','WHILE',7,'p_while','ascendente.py',663),
  ('DO -> _do llave_abre CUERPO_LOCAL llave_cierra _while parentesis_abre EXPRESION parentesis_cierra punto_coma','DO',9,'p_do','ascendente.py',670),
  ('FOR -> _for parentesis_abre INICIO_FOR punto_coma EXPRESION punto_coma ASIGNACION parentesis_cierra llave_abre CUERPO_LOCAL llave_cierra','FOR',11,'p_for','ascendente.py',677),
  ('INICIO_FOR -> DECLARACION','INICIO_FOR',1,'p_','ascendente.py',684),
  ('INICIO_FOR -> ASIGNACION','INICIO_FOR',1,'p_','ascendente.py',685),
  ('EXPRESION -> EXPRESION mas EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',692),
  ('EXPRESION -> EXPRESION menos EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',693),
  ('EXPRESION -> EXPRESION asterisco EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',694),
  ('EXPRESION -> EXPRESION division EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',695),
  ('EXPRESION -> EXPRESION porcentaje EXPRESION','EXPRESION',3,'p_expresion_aritmetica','ascendente.py',696),
  ('EXPRESION -> EXPRESION equivale EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',703),
  ('EXPRESION -> EXPRESION distinto EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',704),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',705),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',706),
  ('EXPRESION -> EXPRESION mayor_igual EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',707),
  ('EXPRESION -> EXPRESION menor_igual EXPRESION','EXPRESION',3,'p_expresion_relacional','ascendente.py',708),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_expresion_logica','ascendente.py',715),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_expresion_logica','ascendente.py',716),
  ('EXPRESION -> EXPRESION desplazamiento_izquierdo EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',723),
  ('EXPRESION -> EXPRESION desplazamiento_derecho EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',724),
  ('EXPRESION -> EXPRESION et EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',725),
  ('EXPRESION -> EXPRESION pleca EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',726),
  ('EXPRESION -> EXPRESION elevado EXPRESION','EXPRESION',3,'p_expresion_bit','ascendente.py',727),
  ('EXPRESION -> EXPRESION pregunta EXPRESION dos_puntos EXPRESION','EXPRESION',5,'p_expresion_ternaria','ascendente.py',734),
  ('EXPRESION -> menos EXPRESION','EXPRESION',2,'p_expresion_unaria','ascendente.py',741),
  ('EXPRESION -> exclamacion EXPRESION','EXPRESION',2,'p_expresion_unaria','ascendente.py',742),
  ('EXPRESION -> virgulilla EXPRESION','EXPRESION',2,'p_expresion_unaria','ascendente.py',743),
  ('EXPRESION -> et identificador','EXPRESION',2,'p_expresion_referencia','ascendente.py',750),
  ('EXPRESION -> METODO','EXPRESION',1,'p_expresion_metodo','ascendente.py',757),
  ('EXPRESION -> parentesis_abre EXPRESION parentesis_cierra','EXPRESION',3,'p_expresion_parentesis','ascendente.py',764),
  ('EXPRESION -> identificador punto identificador','EXPRESION',3,'p_expresion_estructura','ascendente.py',771),
  ('EXPRESION -> identificador ACCESOS','EXPRESION',2,'p_expresion_identificador_arreglo','ascendente.py',778),
  ('EXPRESION -> identificador ACCESOS punto identificador','EXPRESION',4,'p_expresion_arreglo_estructura','ascendente.py',785),
  ('EXPRESION -> llave_abre EXPRESIONES llave_cierra','EXPRESION',3,'p_expresion_expresiones','ascendente.py',792),
  ('EXPRESION -> _sizeof parentesis_abre TIPO parentesis_cierra','EXPRESION',4,'p_expresion_sizeof','ascendente.py',799),
  ('EXPRESION -> _scanf parentesis_abre parentesis_cierra','EXPRESION',3,'p_expresion_scanf','ascendente.py',806),
  ('EXPRESION -> parentesis_abre TIPO parentesis_cierra EXPRESION','EXPRESION',4,'p_expresion_casteo','ascendente.py',813),
  ('EXPRESION -> caracter','EXPRESION',1,'p_expresion_caracter','ascendente.py',819),
  ('EXPRESION -> cadena','EXPRESION',1,'p_expresion_cadena','ascendente.py',824),
  ('EXPRESION -> entero','EXPRESION',1,'p_expresion_entero','ascendente.py',829),
  ('EXPRESION -> decimal','EXPRESION',1,'p_expresion_decimal','ascendente.py',834),
  ('EXPRESION -> identificador','EXPRESION',1,'p_expresion_identificador','ascendente.py',839),
  ('EXPRESIONES -> LISTA_EXPRESIONES','EXPRESIONES',1,'p_expresiones','ascendente.py',845),
  ('EXPRESIONES -> <empty>','EXPRESIONES',0,'p_expresiones_vacio','ascendente.py',852),
  ('LISTA_EXPRESIONES -> LISTA_EXPRESIONES coma EXPRESION','LISTA_EXPRESIONES',3,'p_lista_expresiones_lista','ascendente.py',859),
  ('LISTA_EXPRESIONES -> EXPRESION','LISTA_EXPRESIONES',1,'p_lista_expresiones_expresion','ascendente.py',867),
  ('TIPO -> _int','TIPO',1,'p_tipo','ascendente.py',874),
  ('TIPO -> _char','TIPO',1,'p_tipo','ascendente.py',875),
  ('TIPO -> _double','TIPO',1,'p_tipo','ascendente.py',876),
  ('TIPO -> _float','TIPO',1,'p_tipo','ascendente.py',877),
  ('TIPO -> _void','TIPO',1,'p_tipo','ascendente.py',878),
  ('TIPO -> _struct identificador','TIPO',2,'p_tipo_struct','ascendente.py',885),
]
